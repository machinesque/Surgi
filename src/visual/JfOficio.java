/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * jfAgendamento.java
 *
 * 
 *
 * Created on 27/01/2010, 09:03:31
 */
package visual;

import conexao.Conexao;
import controlador.*;
import dao.DAO;
import excecoes.ExcCadastro;
import excecoes.MensagensExcessao;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.IOException;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import modelo.Oficio;
import modelo.Permissoes;
import modelo.Usuario;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author luiz
 */
public class JfOficio extends javax.swing.JFrame implements Runnable {

    private static ControleVersao versao = new ControleVersao();
    private ClasseGeral classeGeral;
    private ControleUsuario controleUsuario;
    private DAO dao;
    private Log geraLog;
    private MensagensExcessao except;
    private Oficio oficio;
    private Thread threadAtualizaNumeroOficios = new Thread(this);
    private Usuario usuario;

    private JasperPrint jPrint;
    private JasperViewer jViewer;
    private JdBuscaOficio jdbo;

    private int codigo = 0;
    private int codigoUsuario;
    private int numeroOficio;
    private String modeloOficio = "OFICIO";
    private final String TIPOOFICIO = "GERAL";
    private String opcao = "salvar";
    private String oficioVerificado;
    private boolean gerarNumeracao;

    /** Creates new form jfAgendamento */
    public JfOficio() {
        super("Ofício - " + versao.getVersao() + " - " + versao.getAno());
        initComponents();

        //Altera icone na barra de titulo
        Toolkit kit = Toolkit.getDefaultToolkit();
        Image img = kit.getImage("C:/SURGI/imagens/SURGI32x32.png");
        this.setIconImage(img);

        //maximiza tela
        //this.setExtendedState(MAXIMIZED_BOTH);

        //centraliza tela
        setSize(getWidth(), getHeight());
        setLocationRelativeTo(null);

        jlbAnoOficio.setText(getAno());
        jDateChooserSolicitacao.setDate(getDateHoje());
        jrbOficio.setSelected(true);

        threadAtualizaNumeroOficios.start();

        preencheNumeroOficioCi();
        bloqueiaCampos();

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgTipoOficio = new javax.swing.ButtonGroup();
        jpOficio = new javax.swing.JPanel();
        jlbAnoOficio = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jrbOficio = new javax.swing.JRadioButton();
        jrbOficioCircular = new javax.swing.JRadioButton();
        jDateChooserSolicitacao = new com.toedter.calendar.JDateChooser();
        jrbCi = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        jtfUsuario = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jtfNumeroOficio = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtfAssuntoOficio = new javax.swing.JTextField();
        jtfDestinatarioOficio = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jtfDepartamentoDestinatário = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtaTextoOficio = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        jcbManutencaoInformaticaEducacional = new javax.swing.JCheckBox();
        jpBotoes = new javax.swing.JPanel();
        jbNovo = new javax.swing.JButton();
        jbSalvar = new javax.swing.JButton();
        jbBuscar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();
        jbAlterar = new javax.swing.JButton();
        jbImprimir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jpOficio.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        jlbAnoOficio.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jlbAnoOficio.setText("Ano Ofício");
        jlbAnoOficio.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Manutenção: ");

        jLabel2.setText("Data Solicitação: ");

        btgTipoOficio.add(jrbOficio);
        jrbOficio.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbOficio.setText("Ofício");
        jrbOficio.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jrbOficio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbOficioActionPerformed(evt);
            }
        });

        btgTipoOficio.add(jrbOficioCircular);
        jrbOficioCircular.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbOficioCircular.setText("Ofício Circular");
        jrbOficioCircular.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jrbOficioCircular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbOficioCircularActionPerformed(evt);
            }
        });

        jDateChooserSolicitacao.setBackground(new java.awt.Color(204, 204, 255));
        jDateChooserSolicitacao.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(204, 204, 255), new java.awt.Color(204, 204, 255), null, new java.awt.Color(204, 204, 255)));
        jDateChooserSolicitacao.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        btgTipoOficio.add(jrbCi);
        jrbCi.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbCi.setText("CI");
        jrbCi.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jrbCi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbCiActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Usuário: ");

        jtfUsuario.setBackground(new java.awt.Color(204, 204, 255));
        jtfUsuario.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfUsuario.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtfUsuario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfUsuarioFocusLost(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Número: ");

        jtfNumeroOficio.setBackground(new java.awt.Color(204, 204, 255));
        jtfNumeroOficio.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfNumeroOficio.setText("1");
        jtfNumeroOficio.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Assunto: ");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Destinatário: ");

        jtfAssuntoOficio.setBackground(new java.awt.Color(204, 204, 255));
        jtfAssuntoOficio.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfAssuntoOficio.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtfAssuntoOficio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfAssuntoOficioFocusLost(evt);
            }
        });

        jtfDestinatarioOficio.setBackground(new java.awt.Color(204, 204, 255));
        jtfDestinatarioOficio.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfDestinatarioOficio.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtfDestinatarioOficio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfDestinatarioOficioFocusLost(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Departamento Destinatário: ");

        jtfDepartamentoDestinatário.setBackground(new java.awt.Color(204, 204, 255));
        jtfDepartamentoDestinatário.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfDepartamentoDestinatário.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtfDepartamentoDestinatário.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfDepartamentoDestinatárioFocusLost(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Texto: ");

        jtaTextoOficio.setColumns(20);
        jtaTextoOficio.setLineWrap(true);
        jtaTextoOficio.setRows(5);
        jtaTextoOficio.setWrapStyleWord(true);
        jtaTextoOficio.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jScrollPane1.setViewportView(jtaTextoOficio);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("Tipo: ");

        jcbManutencaoInformaticaEducacional.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jcbManutencaoInformaticaEducacional.setText("Manutenção Equipamentos");
        jcbManutencaoInformaticaEducacional.setEnabled(false);

        javax.swing.GroupLayout jpOficioLayout = new javax.swing.GroupLayout(jpOficio);
        jpOficio.setLayout(jpOficioLayout);
        jpOficioLayout.setHorizontalGroup(
            jpOficioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpOficioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpOficioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jpOficioLayout.createSequentialGroup()
                        .addComponent(jlbAnoOficio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel9))
                    .addGroup(jpOficioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel6)
                        .addComponent(jLabel8)
                        .addComponent(jLabel7)
                        .addComponent(jLabel1)
                        .addComponent(jLabel3)
                        .addComponent(jLabel4)
                        .addComponent(jLabel5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpOficioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jtfDepartamentoDestinatário, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfDestinatarioOficio, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpOficioLayout.createSequentialGroup()
                        .addComponent(jrbOficio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jrbOficioCircular)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jrbCi))
                    .addComponent(jcbManutencaoInformaticaEducacional, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfNumeroOficio, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpOficioLayout.createSequentialGroup()
                        .addComponent(jtfUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDateChooserSolicitacao, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jtfAssuntoOficio, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 789, Short.MAX_VALUE))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jpOficioLayout.setVerticalGroup(
            jpOficioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpOficioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpOficioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlbAnoOficio)
                    .addGroup(jpOficioLayout.createSequentialGroup()
                        .addGroup(jpOficioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jrbOficio)
                            .addComponent(jrbOficioCircular)
                            .addComponent(jrbCi))
                        .addGroup(jpOficioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpOficioLayout.createSequentialGroup()
                                .addGroup(jpOficioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jpOficioLayout.createSequentialGroup()
                                        .addGroup(jpOficioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel7)
                                            .addComponent(jcbManutencaoInformaticaEducacional, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(34, 34, 34)
                                        .addGroup(jpOficioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel1)
                                            .addComponent(jtfNumeroOficio, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpOficioLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jpOficioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                            .addComponent(jDateChooserSolicitacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel2))
                                        .addGap(36, 36, 36)))
                                .addGroup(jpOficioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(jtfAssuntoOficio, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jpOficioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(jtfDestinatarioOficio, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jpOficioLayout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(jpOficioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(jtfUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpOficioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jtfDepartamentoDestinatário, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpOficioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpOficioLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE))
                .addContainerGap())
        );

        jpBotoes.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        jbNovo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/novo.png"))); // NOI18N
        jbNovo.setText("Novo");
        jbNovo.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbNovo.setEnabled(false);
        jbNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovoActionPerformed(evt);
            }
        });

        jbSalvar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/OK.png"))); // NOI18N
        jbSalvar.setText("Salvar");
        jbSalvar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        jbBuscar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/pesquisar.png"))); // NOI18N
        jbBuscar.setText("Buscar");
        jbBuscar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jbCancelar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cancelar.png"))); // NOI18N
        jbCancelar.setText("Cancelar");
        jbCancelar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jbExcluir.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/delete.png"))); // NOI18N
        jbExcluir.setText("Excluir");
        jbExcluir.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbExcluir.setEnabled(false);
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jbAlterar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/reload.png"))); // NOI18N
        jbAlterar.setText("Alterar");
        jbAlterar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbAlterar.setEnabled(false);
        jbAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlterarActionPerformed(evt);
            }
        });

        jbImprimir.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/imprimir.png"))); // NOI18N
        jbImprimir.setText("Imprimir");
        jbImprimir.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbImprimir.setEnabled(false);
        jbImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbImprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpBotoesLayout = new javax.swing.GroupLayout(jpBotoes);
        jpBotoes.setLayout(jpBotoesLayout);
        jpBotoesLayout.setHorizontalGroup(
            jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpBotoesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jpBotoesLayout.setVerticalGroup(
            jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jpOficio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jpOficio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        fechar();
    }//GEN-LAST:event_formWindowClosing

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed

        if (jdbo == null) {
            jdbo = new JdBuscaOficio(null, true);
        }

        jdbo.setCodigoUsuario(codigoUsuario);
        jdbo.setVisible(true);

        setOficioBuscado(jdbo.getOficio());
        jdbo.setOficio();

    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jbNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovoActionPerformed
        cancelar();
    }//GEN-LAST:event_jbNovoActionPerformed

    private void jbAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlterarActionPerformed

        abilitaCampos();

        jbAlterar.setEnabled(false);

        opcao = "alterar";

        jbSalvar.setEnabled(true);

    }//GEN-LAST:event_jbAlterarActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        cancelar();
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed

        if (jtfUsuario.getText().isEmpty() || jtfAssuntoOficio.getText().isEmpty() || jtfDestinatarioOficio.getText().isEmpty() || jtfDepartamentoDestinatário.getText().isEmpty()) {

            JOptionPane.showMessageDialog(null, "Preencha os campos 'Assunto', 'Destinatário'  'Departamento'!", "Atenção", JOptionPane.WARNING_MESSAGE, null);

        } else {

            if (opcao.equals("salvar")) {

                verificaNumeroOficio();
                    
                if (!oficioVerificado.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Esse Número já foi cadastrado! \n Cancele o Documento para gerar outro Número!", "Atenção", JOptionPane.WARNING_MESSAGE, null);
                } else {
                    
                    salvar();
                    opcao = "salvar";
                }

            } else if (opcao.equals("alterar")) {

                atualizar();
                opcao = "salvar";

            }

        }

    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        excluir();
    }//GEN-LAST:event_jbExcluirActionPerformed

    private void jrbOficioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbOficioActionPerformed

        if (jrbOficio.isSelected() == true) {
            modeloOficio = "OFICIO";
            preencheNumeroOficioCi();
        }

}//GEN-LAST:event_jrbOficioActionPerformed

    private void jrbOficioCircularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbOficioCircularActionPerformed

        if (jrbOficioCircular.isSelected() == true) {
            modeloOficio = "OFICIO CIRCULAR";
            preencheNumeroOficioCi();
        }

}//GEN-LAST:event_jrbOficioCircularActionPerformed

    private void jbImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbImprimirActionPerformed

        //ADOGeral ag = new ADOGeral();
        Conexao conexao = new Conexao();
        HashMap parametros = new HashMap();
        try {
            //System.out.println(codigoRegistro);
            //parametros.put("titulo", "Titulo Relatorio");
            parametros.put("codigoOficio", new Integer(codigo));
            parametros.put("tipoOficio", modeloOficio);
            //parametros.put("codigo", lista.get(0).getNome();
            //ADOGeral.conectar();
            conexao.getConexao();
        } catch (ExcCadastro ex) {
            Logger.getLogger(JfImpressosAgendamento.class.getName()).log(Level.SEVERE, null, ex);
        }

        //        JRDataSource jrds = new JRBeanCollectionDataSource(lista);

        try {

            iniciaClasseGeral();
            classeGeral.msgInforma("A imprerssão dos Ofícios/Ofícios Circulares/CI's está em desenvolvimento "
                    + "\n e não está imprimindo como deveria ainda!");
            
            jPrint = JasperFillManager.fillReport("Oficio.jasper", parametros, conexao.getConexao());       
            
            //jReport = JasperCompileManager.compileReport("E:/LUIZ/PROJETOS JAVA/CORPORATIVO/m2GestaoClinicas/FichaPaciente.jrxml");
            //jPrint = JasperFillManager.fillReport("C:/m2GestaoClinicas/FichaPaciente.jasper", parametros, ADOGeral.getConexao());
            
            //jPrint = JasperFillManager.fillReport(jReport, parametros, jrds);

            //if (!(jViewer == null)) {
            //jViewer = new JasperViewer(jPrint, false);
            //jViewer.setExtendedState(JFrame.MAXIMIZED_BOTH);
            jViewer.viewReport(jPrint, false);
            //}

        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }//GEN-LAST:event_jbImprimirActionPerformed

    private void jrbCiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbCiActionPerformed

        if (jrbCi.isSelected() == true) {
            modeloOficio = "CI";
            preencheNumeroOficioCi();
        }

    }//GEN-LAST:event_jrbCiActionPerformed

    private void jtfAssuntoOficioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfAssuntoOficioFocusLost
        jtfAssuntoOficio.setText(jtfAssuntoOficio.getText().toUpperCase());
    }//GEN-LAST:event_jtfAssuntoOficioFocusLost

    private void jtfDestinatarioOficioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfDestinatarioOficioFocusLost
        jtfDestinatarioOficio.setText(jtfDestinatarioOficio.getText().toUpperCase());
    }//GEN-LAST:event_jtfDestinatarioOficioFocusLost

    private void jtfUsuarioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfUsuarioFocusLost
        jtfUsuario.setText(jtfUsuario.getText().toUpperCase());
    }//GEN-LAST:event_jtfUsuarioFocusLost

    private void jtfDepartamentoDestinatárioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfDepartamentoDestinatárioFocusLost
        jtfDepartamentoDestinatário.setText(jtfDepartamentoDestinatário.getText().toUpperCase());
    }//GEN-LAST:event_jtfDepartamentoDestinatárioFocusLost
    /**
     * @param args the command line arguments
     */
    /*public static void main(String args[]) {
    java.awt.EventQueue.invokeLater(new Runnable() {
    public void run() {
    new jfAgendamento().setVisible(true);
    }
    });
    }*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgTipoOficio;
    private com.toedter.calendar.JDateChooser jDateChooserSolicitacao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbAlterar;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbImprimir;
    private javax.swing.JButton jbNovo;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JCheckBox jcbManutencaoInformaticaEducacional;
    private javax.swing.JLabel jlbAnoOficio;
    private javax.swing.JPanel jpBotoes;
    private javax.swing.JPanel jpOficio;
    private javax.swing.JRadioButton jrbCi;
    private javax.swing.JRadioButton jrbOficio;
    private javax.swing.JRadioButton jrbOficioCircular;
    private javax.swing.JTextArea jtaTextoOficio;
    private javax.swing.JTextField jtfAssuntoOficio;
    private javax.swing.JTextField jtfDepartamentoDestinatário;
    private javax.swing.JTextField jtfDestinatarioOficio;
    private javax.swing.JTextField jtfNumeroOficio;
    private javax.swing.JTextField jtfUsuario;
    // End of variables declaration//GEN-END:variables

//Outros Metodos ===========================================================================================================================================
    public void fechar() {

        /*if (!jtfUsuario.getText().equals(nomeUsuario) || !jtfNumeroOficio.getText().equals("0")) {

        JOptionPane.showMessageDialog(null, "Cancele ou Salve o Agendamento em Edição!", "Atenção", JOptionPane.WARNING_MESSAGE, null);

        } else {*/
        dao = null;
        this.dispose();
        //}
    }

    public void cancelar() {

        iniciaOficio();
        iniciaUsuario();
        
        oficio.setAno("");
        oficio.setDataSolicitacao(null);
        oficio.setModeloOficio("");
        oficio.setUsuario(null);

        modeloOficio = "OFICIO";
        
        usuario = (Usuario) dao.busca(usuario, codigoUsuario);
        dao.encerraSessao();
        jtfUsuario.setText(usuario.getNomeUsuario());
        usuario = null;
        
        jrbOficio.setSelected(true);
        jrbOficioCircular.setSelected(false);
        jrbCi.setSelected(false);
        preencheNumeroOficioCi();
        jDateChooserSolicitacao.setDate(getDateHoje());
        jtfAssuntoOficio.setText("");
        jtfDestinatarioOficio.setText("");
        jtfDepartamentoDestinatário.setText("");
        jtaTextoOficio.setText("");

        abilitaCampos();

        desabilitaBotoes();

        opcao = "salvar";
        codigo = 0;

    }

    public void abilitaCampos() {

        jrbOficio.setEnabled(true);
        jrbOficioCircular.setEnabled(true);
        jrbCi.setEnabled(true);
        jDateChooserSolicitacao.setEnabled(true);
        jtfAssuntoOficio.setEditable(true);
        jtfDestinatarioOficio.setEditable(true);
        jtfDepartamentoDestinatário.setEditable(true);
        jtaTextoOficio.setEditable(true);
        
    }

    public void desabilitaCampos() {

        jrbOficio.setEnabled(false);
        jrbOficioCircular.setEnabled(false);
        jrbCi.setEnabled(false);
        jDateChooserSolicitacao.setEnabled(false);
        jtfAssuntoOficio.setEditable(false);
        jtfDestinatarioOficio.setEditable(false);
        jtfDepartamentoDestinatário.setEditable(false);
        jcbManutencaoInformaticaEducacional.setEnabled(false);
        jtaTextoOficio.setEditable(false);

    }

    public void bloqueiaCampos() {

        jtfUsuario.setEditable(false);
        jtfNumeroOficio.setEditable(false);
    }

    public void abilitaBotoes() {

        jbNovo.setEnabled(true);
        jbCancelar.setEnabled(true);
        jbBuscar.setEnabled(true);
        jbImprimir.setEnabled(true);

        if (gerarNumeracao == true) {
            jbSalvar.setEnabled(false);
            jbExcluir.setEnabled(true);
            jbAlterar.setEnabled(true);
        } else {
            jbSalvar.setEnabled(false);
            jbExcluir.setEnabled(false);
            jbAlterar.setEnabled(false);
        }

    }

    public void desabilitaBotoes() {

        jbNovo.setEnabled(false);
        jbCancelar.setEnabled(true);
        jbBuscar.setEnabled(true);
        jbImprimir.setEnabled(false);

        if (gerarNumeracao == true) {
            jbSalvar.setEnabled(true);
            jbExcluir.setEnabled(false);
            jbAlterar.setEnabled(false);
        } else {
            jbSalvar.setEnabled(false);
            jbExcluir.setEnabled(false);
            jbAlterar.setEnabled(false);
        }

    }

    public void preencheNumeroOficioCi() {

        iniciaDao();
        //DAO dao = new DAO();

        jtfNumeroOficio.setText("" + dao.getNumeroOficio(modeloOficio, versao.getAno(), TIPOOFICIO));

    }

    public void atualizaNumeroOficio() {

        iniciaDao();
        //DAO dao = new DAO();

        numeroOficio = dao.getNumeroOficio(modeloOficio, versao.getAno(), TIPOOFICIO);

    }

    public void run() {

        for (int i = 0; i == 0; i = 0) {
            try {
                //atualizaNumeroOficio();
                if (opcao.equals("salvar")) {
                    preencheNumeroOficioCi();
                }
                
                threadAtualizaNumeroOficios.sleep(10000);

                //this.finalize();
            } catch (Throwable ex) {
                //Logger.getLogger(AtualizaNumeroOficios.class.getName()).log(Level.SEVERE, null, ex);
                except.setMensagemErro("Não foi possivel atualizar o numero de Oficio/ Oficio Circular ou CI");
            }
        }

    }

//Geradores, Validadores===========================================================================================================================================
    public void iniciaClasseGeral() {
        
        if (classeGeral == null) {
            classeGeral = new ClasseGeral();
        }
        
    }
    
    public void iniciaControleUsuario() {
        if (controleUsuario == null) {
            controleUsuario = new ControleUsuario();
        }
    }
    
    public void iniciaDao() {

        if (dao == null) {
            dao = new DAO();
        }

    }
    
    public void iniciaLog() {
        
        if (geraLog == null) {
            geraLog = new Log();
        }
        
    }
    
    public void iniciaOficio() {
        
        if (oficio == null) {
            oficio = new Oficio();
        }
        
    }
    
    public void iniciaUsuario() {
        
        if (usuario == null) {
            usuario = new Usuario();
        }
        
    }
    
    public void verificaNumeroOficio() {

        iniciaDao();

        oficioVerificado = dao.verificarOficio(modeloOficio, Integer.valueOf(jtfNumeroOficio.getText()), TIPOOFICIO, versao.getAno());

    }

//Getters and Setters===========================================================================================================================================
    public Date getDateHoje() {

        GregorianCalendar calendar = new GregorianCalendar();
        Date data = calendar.getTime();

        return data;

    }

    public String getAno() {

        return "Ano de " + versao.getAno();

    }

    public void setNumeroCaracteres() {
        jtfAssuntoOficio.setDocument(new FixedLengthDocument(120));
        jtfDestinatarioOficio.setDocument(new FixedLengthDocument(60));
        jtfDepartamentoDestinatário.setDocument(new FixedLengthDocument((120)));
        jtaTextoOficio.setDocument(new FixedLengthDocument(40000));
    }

    public void setOficioBuscado(Oficio oficioBuscado) {

        if (oficioBuscado == null) {
        } else {
            
            iniciaDao();
            iniciaOficio();
            iniciaUsuario();
            
            int codigoAux;

            if (oficioBuscado.getModeloOficio().equals("OFICIO")) {
                jrbOficio.setSelected(true);
                jrbOficioCircular.setSelected(false);
                jrbCi.setSelected(false);
                preencheNumeroOficioCi();
                modeloOficio = "OFICIO";
            } else if (oficioBuscado.getModeloOficio().equals("OFICIO CIRCULAR")) {
                jrbOficioCircular.setSelected(true);
                jrbOficio.setSelected(false);
                jrbCi.setSelected(false);
                preencheNumeroOficioCi();
                modeloOficio = "OFICIO CIRCULAR";
            } else if (oficioBuscado.getModeloOficio().equals("CI")) {
                jrbCi.setSelected(true);
                jrbOficioCircular.setSelected(false);
                jrbOficio.setSelected(false);
                preencheNumeroOficioCi();
                modeloOficio = "CI";
            }

            usuario = (Usuario) oficioBuscado.getUsuario();
            jtfUsuario.setText(usuario.getNomeUsuario());
            usuario = null;
            
            jtfNumeroOficio.setText("" + oficioBuscado.getNumero());
            jDateChooserSolicitacao.setDate(oficioBuscado.getDataSolicitacao());
            jtfAssuntoOficio.setText(oficioBuscado.getAssuntoOficio());
            jtfDestinatarioOficio.setText(oficioBuscado.getDestinatarioOficio());
            jtfDepartamentoDestinatário.setText(oficioBuscado.getDepartamentoDestinatario());
            
            jtaTextoOficio.setText(oficioBuscado.getTextoOficio());

            codigo = oficioBuscado.getCodigoOficio();//para testar comando excluir
            oficio = oficioBuscado;
            oficio.setCodigoOficio(codigo);

            opcao = "alterar";

            desabilitaCampos();

            abilitaBotoes();

        }
    }

    public int getNomeUsuario() {
        return codigoUsuario;
    }

    public void setCodigoUsuario(int codigoUsuario) {
        iniciaControleUsuario();
        jtfUsuario.setText(controleUsuario.getNomeUsuario(codigoUsuario));
        this.codigoUsuario = codigoUsuario;
        getPermissoes();
        desabilitaBotoes();
        abilitaCampos();
        setNumeroCaracteres();
    }

    public void getPermissoes() {
        Permissoes permissoes;
        iniciaDao();

        permissoes = (Permissoes) dao.buscaPermissoes(codigoUsuario);

        gerarNumeracao = permissoes.isGerarNumeracaoOficiosGeral();
    }

    public int getNumeroOficio() {
        return numeroOficio;
    }

    public void setNumeroOficio(int numeroOficio) {
        this.numeroOficio = numeroOficio;
        jtfNumeroOficio.setText(String.valueOf(numeroOficio));
        System.out.println("numero é " + numeroOficio);
    }

//Metodos DAO===========================================================================================================================================
    public void salvar() {

        if (!jtfUsuario.getText().isEmpty() && !jtfNumeroOficio.getText().isEmpty() && jDateChooserSolicitacao.getDate() != null) {

            iniciaDao();
            iniciaOficio();
            iniciaUsuario();
            
            oficio.setAno(versao.getAno());
            oficio.setDataSolicitacao(jDateChooserSolicitacao.getDate());
            oficio.setNumero(Integer.parseInt(jtfNumeroOficio.getText()));
            
            usuario = (Usuario) dao.buscaUsuario(0, jtfUsuario.getText().toString(), "");
            oficio.setUsuario(usuario);
            usuario = null;
            
            oficio.setTipoOficio(TIPOOFICIO);
            oficio.setAssuntoOficio(jtfAssuntoOficio.getText());
            oficio.setDestinatarioOficio(jtfDestinatarioOficio.getText());
            oficio.setDepartamentoDestinatario(jtfDepartamentoDestinatário.getText());
            
            oficio.setTextoOficio(jtaTextoOficio.getText());
            
            if (jcbManutencaoInformaticaEducacional.isSelected()) {
                oficio.setManutencaoInformaticaEducacional(true);
            } else {
                oficio.setManutencaoInformaticaEducacional(false);
            }
            
            if (jrbOficio.isSelected() == true) {
                oficio.setModeloOficio(modeloOficio);
            } else if (jrbOficioCircular.isSelected() == true) {
                oficio.setModeloOficio(modeloOficio);
            } else if (jrbCi.isSelected() == true) {
                oficio.setModeloOficio(modeloOficio);
            }

            try {
                iniciaLog();
                geraLog.criaLog(codigoUsuario, "Ofício Geral", "Tentou Salvar " + oficio.getModeloOficio() + " Nº " + oficio.getNumero() + "/" + oficio.getAno() + " Tipo: " + oficio.getTipoOficio() + " Assunto: " + oficio.getAssuntoOficio() + " Destinatário: " + oficio.getDestinatarioOficio());
            } catch (IOException ex) {
                Logger.getLogger(JfPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }

            dao.inserir(oficio, 7, codigoUsuario);
            cancelar();

        } else {
            JOptionPane.showMessageDialog(null, "Complete os Campos Obrigatórios, destacados em Azul!", "Atenção", JOptionPane.WARNING_MESSAGE, null);
        }

    }

    public void atualizar() {

        if (!jtfUsuario.getText().isEmpty() && !jtfNumeroOficio.getText().isEmpty() && jDateChooserSolicitacao.getDate() != null) {

            iniciaDao();
            iniciaOficio();
            iniciaUsuario();
            
            oficio.setAno(versao.getAno());
            oficio.setDataSolicitacao(jDateChooserSolicitacao.getDate());
            oficio.setNumero(Integer.parseInt(jtfNumeroOficio.getText()));
            
            usuario = (Usuario) dao.buscaUsuario(usuario.getCodigoUsuario(), jtfUsuario.getText().toString(), "");
            oficio.setUsuario(usuario);
            usuario = null;
            
            oficio.setTipoOficio(TIPOOFICIO);
            oficio.setAssuntoOficio(jtfAssuntoOficio.getText());
            oficio.setDestinatarioOficio(jtfDestinatarioOficio.getText());
            oficio.setDepartamentoDestinatario(jtfDepartamentoDestinatário.getText());
            
            oficio.setTextoOficio(jtaTextoOficio.getText());
            
            if (jcbManutencaoInformaticaEducacional.isSelected()) {
                oficio.setManutencaoInformaticaEducacional(true);
            } else {
                oficio.setManutencaoInformaticaEducacional(false);
            }
            
            if (jrbOficio.isSelected() == true) {
                oficio.setModeloOficio(modeloOficio);
            } else if (jrbOficioCircular.isSelected() == true) {
                oficio.setModeloOficio(modeloOficio);
            } else if (jrbCi.isSelected() == true) {
                oficio.setModeloOficio(modeloOficio);
            }

            try {
                iniciaLog();
                geraLog.criaLog(codigoUsuario, "Ofício Geral", "Tentou Atualizar " + oficio.getModeloOficio() + " Nº " + oficio.getNumero() + "/" + oficio.getAno() + " Tipo: " + oficio.getTipoOficio() + " Assunto: " + oficio.getAssuntoOficio() + " Destinatário: " + oficio.getDestinatarioOficio() + " Código: " + oficio.getCodigoOficio());
            } catch (IOException ex) {
                Logger.getLogger(JfPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            dao.atualizar(oficio, 7, codigoUsuario);
            cancelar();

        } else {
            JOptionPane.showMessageDialog(null, "Complete os Campos Obrigatórios, destacados em Azul!", "Atenção", JOptionPane.WARNING_MESSAGE, null);
        }

    }

    public void excluir() {

        iniciaClasseGeral();
        
        if (classeGeral.msgConfirma("Deseja excluir o Ofício/Ofício Circular/CI?")) {

            iniciaDao();
            iniciaOficio();
            
            try {
                iniciaLog();
                geraLog.criaLog(codigoUsuario, "Ofício Geral", "Tentou Excluir " + modeloOficio + " Nº " + jtfNumeroOficio.getText() + "/" + versao.getAno() + " Tipo: " + TIPOOFICIO + " Assunto: " + jtfAssuntoOficio.getText() + " Destinatário: " + jtfDestinatarioOficio.getText() + " Código: " + oficio.getCodigoOficio());
            } catch (IOException ex) {
                Logger.getLogger(JfPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            dao.excluir(oficio, codigoUsuario);
            cancelar();

        }

    }
}
