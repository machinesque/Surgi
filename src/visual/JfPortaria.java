/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package visual;

import com.toedter.calendar.JCalendar;
import controlador.*;
import dao.DAO;
import excecoes.MensagensExcessao;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.IOException;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import modelo.Permissoes;
import modelo.Portaria;
import modelo.Usuario;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author luizam
 */
public class JfPortaria extends javax.swing.JFrame implements Runnable {

    private static ControleVersao versao = new ControleVersao();
    private ControleUsuario controleUsuario;
    private DAO dao;
    private Log geraLog;
    private MensagensExcessao except;
    private Portaria portaria;
    private Usuario usuario;
    
    private JCalendar jcalendar = new JCalendar();
    
    private Thread threadAtualizaNumeroPortarias = new Thread(this);

    private JasperPrint jPrint;
    private JasperViewer jViewer;
    private JdBuscaPortaria jdbp;

    private int codigo = 0;
    private int codigoUsuario;
    private String modeloPortaria = "PORTARIA";
    private final String TIPOPORTARIA = "GERAL";
    private String opcao = "salvar";
    private String portariaVerificada;
    private boolean gerarNumeracao;

    /**
     * Creates new form jfPortaria
     */
    public JfPortaria() {
        super("Portaria - " + versao.getVersao() + " - " + versao.getAno());
        initComponents();

        //Altera icone na barra de titulo
        Toolkit kit = Toolkit.getDefaultToolkit();
        Image img = kit.getImage("C:/SURGI/imagens/SURGI32x32.png");
        this.setIconImage(img);

        //maximiza tela
        //this.setExtendedState(MAXIMIZED_BOTH);

        //centraliza tela
        setSize(getWidth(), getHeight());
        setLocationRelativeTo(null);

        jlbAnoPortaria.setText(getAno());
        jDateChooserSolicitacao.setDate(getDateHoje());
        jrbPortaria.setSelected(true);

        threadAtualizaNumeroPortarias.start();

        preencheNumeroPortaria();
        bloqueiaCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpBotoes = new javax.swing.JPanel();
        jbNovo = new javax.swing.JButton();
        jbSalvar = new javax.swing.JButton();
        jbBuscar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();
        jbAlterar = new javax.swing.JButton();
        jbImprimir = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jlbAnoPortaria = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jrbPortaria = new javax.swing.JRadioButton();
        jtfUsuario = new javax.swing.JTextField();
        jtfNumeroPortaria = new javax.swing.JTextField();
        jtfAssuntoPortaria = new javax.swing.JTextField();
        jtfDestinatarioPortaria = new javax.swing.JTextField();
        jtfDepartamentoDestinatarioPortaria = new javax.swing.JTextField();
        jDateChooserSolicitacao = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jpBotoes.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        jbNovo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/novo.png"))); // NOI18N
        jbNovo.setText("Novo");
        jbNovo.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbNovo.setEnabled(false);
        jbNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovoActionPerformed(evt);
            }
        });

        jbSalvar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/OK.png"))); // NOI18N
        jbSalvar.setText("Salvar");
        jbSalvar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        jbBuscar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/pesquisar.png"))); // NOI18N
        jbBuscar.setText("Buscar");
        jbBuscar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jbCancelar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cancelar.png"))); // NOI18N
        jbCancelar.setText("Cancelar");
        jbCancelar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jbExcluir.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/delete.png"))); // NOI18N
        jbExcluir.setText("Excluir");
        jbExcluir.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbExcluir.setEnabled(false);
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jbAlterar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/reload.png"))); // NOI18N
        jbAlterar.setText("Alterar");
        jbAlterar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbAlterar.setEnabled(false);
        jbAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlterarActionPerformed(evt);
            }
        });

        jbImprimir.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/imprimir.png"))); // NOI18N
        jbImprimir.setText("Imprimir");
        jbImprimir.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbImprimir.setEnabled(false);
        jbImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbImprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpBotoesLayout = new javax.swing.GroupLayout(jpBotoes);
        jpBotoes.setLayout(jpBotoesLayout);
        jpBotoesLayout.setHorizontalGroup(
            jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpBotoesLayout.createSequentialGroup()
                .addContainerGap(52, Short.MAX_VALUE)
                .addComponent(jbNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jpBotoesLayout.setVerticalGroup(
            jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel1.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        jlbAnoPortaria.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jlbAnoPortaria.setText("Ano Portaria");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Número: ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Usuário: ");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Data Solicitação: ");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Departamento Destinatário: ");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Assunto: ");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Destinatário: ");

        jrbPortaria.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbPortaria.setText("Portaria");
        jrbPortaria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbPortariaActionPerformed(evt);
            }
        });

        jtfUsuario.setBackground(new java.awt.Color(204, 204, 255));
        jtfUsuario.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfUsuario.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jtfNumeroPortaria.setBackground(new java.awt.Color(204, 204, 255));
        jtfNumeroPortaria.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfNumeroPortaria.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jtfAssuntoPortaria.setBackground(new java.awt.Color(204, 204, 255));
        jtfAssuntoPortaria.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfAssuntoPortaria.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtfAssuntoPortaria.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfAssuntoPortariaFocusLost(evt);
            }
        });

        jtfDestinatarioPortaria.setBackground(new java.awt.Color(204, 204, 255));
        jtfDestinatarioPortaria.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfDestinatarioPortaria.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtfDestinatarioPortaria.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfDestinatarioPortariaFocusLost(evt);
            }
        });

        jtfDepartamentoDestinatarioPortaria.setBackground(new java.awt.Color(204, 204, 255));
        jtfDepartamentoDestinatarioPortaria.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfDepartamentoDestinatarioPortaria.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtfDepartamentoDestinatarioPortaria.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfDepartamentoDestinatarioPortariaFocusLost(evt);
            }
        });

        jDateChooserSolicitacao.setBackground(new java.awt.Color(204, 204, 255));
        jDateChooserSolicitacao.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDateChooserSolicitacao.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Tipo: ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlbAnoPortaria)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jtfUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDateChooserSolicitacao, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE))
                            .addComponent(jtfAssuntoPortaria)
                            .addComponent(jtfDestinatarioPortaria, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jtfDepartamentoDestinatarioPortaria, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtfNumeroPortaria, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jrbPortaria))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap(31, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jDateChooserSolicitacao, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jlbAnoPortaria)
                                .addGap(37, 37, 37))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jrbPortaria)
                                .addComponent(jLabel1)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jtfUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtfNumeroPortaria, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jtfAssuntoPortaria, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jtfDestinatarioPortaria, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jtfDepartamentoDestinatarioPortaria, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(213, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovoActionPerformed
        cancelar();
    }//GEN-LAST:event_jbNovoActionPerformed

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed

        if (jtfUsuario.getText().isEmpty() || jtfAssuntoPortaria.getText().isEmpty() || jtfDestinatarioPortaria.getText().isEmpty() || jtfDepartamentoDestinatarioPortaria.getText().isEmpty()) {

            JOptionPane.showMessageDialog(null, "Preencha os campos 'Assunto', 'Destinatário' e 'Departamento'!", "Atenção", JOptionPane.WARNING_MESSAGE, null);

        } else {
                
            if (opcao.equals("salvar")) {

                verificaNumeroPortaria();
                    
                if (!portariaVerificada.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Esse Número já foi cadastrado! \n Cancele o Documento para gerar outro Número!", "Atenção", JOptionPane.WARNING_MESSAGE, null);
                } else {
                    
                    salvar();
                    opcao = "salvar";
                        
                }

            } else if (opcao.equals("alterar")) {

                atualizar();
                opcao = "salvar";

            }

        }
        
    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed

        cancelar();
        
        if (jdbp == null) {
            jdbp = new JdBuscaPortaria(null, true);
        }

        jdbp.setCodigoUsuario(codigoUsuario);
        jdbp.setVisible(true);

        setPortariaBuscada(jdbp.getPortaria());
        jdbp.setPortaria();
        
    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        cancelar();
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        excluir();
    }//GEN-LAST:event_jbExcluirActionPerformed

    private void jbAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlterarActionPerformed

        abilitaCampos();

        jbAlterar.setEnabled(false);

        opcao = "alterar";

        jbSalvar.setEnabled(true);
    }//GEN-LAST:event_jbAlterarActionPerformed

    private void jbImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbImprimirActionPerformed

        JOptionPane.showMessageDialog(null, "Atenção, Opção de Impressão ainda não disponivel!", "Atenção", JOptionPane.WARNING_MESSAGE, null);
        
    }//GEN-LAST:event_jbImprimirActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        fechar();
    }//GEN-LAST:event_formWindowClosing

    private void jtfAssuntoPortariaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfAssuntoPortariaFocusLost
        jtfAssuntoPortaria.setText(jtfAssuntoPortaria.getText().toUpperCase());
    }//GEN-LAST:event_jtfAssuntoPortariaFocusLost

    private void jtfDestinatarioPortariaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfDestinatarioPortariaFocusLost
        jtfDestinatarioPortaria.setText(jtfDestinatarioPortaria.getText().toUpperCase());
    }//GEN-LAST:event_jtfDestinatarioPortariaFocusLost

    private void jtfDepartamentoDestinatarioPortariaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfDepartamentoDestinatarioPortariaFocusLost
        jtfDepartamentoDestinatarioPortaria.setText(jtfDepartamentoDestinatarioPortaria.getText().toUpperCase());
    }//GEN-LAST:event_jtfDepartamentoDestinatarioPortariaFocusLost

    private void jrbPortariaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbPortariaActionPerformed
        modeloPortaria = "PORTARIA";
        preencheNumeroPortaria();
    }//GEN-LAST:event_jrbPortariaActionPerformed

    /**
     * @param args the command line arguments
     */
    //public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        /*try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jfPortaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jfPortaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jfPortaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jfPortaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }*/
        //</editor-fold>

        /*
         * Create and display the form
         */
        /*java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new jfPortaria().setVisible(true);
            }
        });
    }*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser jDateChooserSolicitacao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jbAlterar;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbImprimir;
    private javax.swing.JButton jbNovo;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JLabel jlbAnoPortaria;
    private javax.swing.JPanel jpBotoes;
    private javax.swing.JRadioButton jrbPortaria;
    private javax.swing.JTextField jtfAssuntoPortaria;
    private javax.swing.JTextField jtfDepartamentoDestinatarioPortaria;
    private javax.swing.JTextField jtfDestinatarioPortaria;
    private javax.swing.JTextField jtfNumeroPortaria;
    private javax.swing.JTextField jtfUsuario;
    // End of variables declaration//GEN-END:variables

//Outros Metodos ===========================================================================================================================================
    public void fechar() {

        /*if (!jtfUsuario.getText().equals(nomeUsuario) || !jtfNumeroOficio.getText().equals("0")) {

        JOptionPane.showMessageDialog(null, "Cancele ou Salve o Agendamento em Edição!", "Atenção", JOptionPane.WARNING_MESSAGE, null);

        } else {*/
        dao = null;
        this.dispose();
        //}
    }

    public void cancelar() {

        iniciaControleUsuario();
        iniciaPortaria();
        
        modeloPortaria = "PORTARIA";
        jtfDepartamentoDestinatarioPortaria.setText("");
        jtfUsuario.setText(controleUsuario.getNomeUsuario(codigoUsuario));
        jrbPortaria.setSelected(true);
        preencheNumeroPortaria();
        jDateChooserSolicitacao.setDate(getDateHoje());
        jtfAssuntoPortaria.setText("");
        jtfDestinatarioPortaria.setText("");

        abilitaCampos();

        desabilitaBotoes();

        portaria = null;
        
        opcao = "salvar";
        codigo = 0;

    }

    public void abilitaCampos() {

        jrbPortaria.setEnabled(true);
        jDateChooserSolicitacao.setEnabled(true);
        jtfAssuntoPortaria.setEditable(true);
        jtfDestinatarioPortaria.setEditable(true);

    }

    public void desabilitaCampos() {

        jrbPortaria.setEnabled(false);
        jDateChooserSolicitacao.setEnabled(false);
        jtfAssuntoPortaria.setEditable(false);
        jtfDestinatarioPortaria.setEditable(false);

    }

    public void bloqueiaCampos() {

        jtfUsuario.setEditable(false);
        jtfNumeroPortaria.setEditable(false);
    }

    public void abilitaBotoes() {

        jbNovo.setEnabled(true);
        jbCancelar.setEnabled(true);
        jbBuscar.setEnabled(true);
        jbImprimir.setEnabled(true);

        if (gerarNumeracao == true) {
            jbSalvar.setEnabled(false);
            jbExcluir.setEnabled(true);
            jbAlterar.setEnabled(true);
        } else {
            jbSalvar.setEnabled(false);
            jbExcluir.setEnabled(false);
            jbAlterar.setEnabled(false);
        }

    }

    public void desabilitaBotoes() {

        jbNovo.setEnabled(false);
        jbCancelar.setEnabled(true);
        jbBuscar.setEnabled(true);
        jbImprimir.setEnabled(false);

        if (gerarNumeracao == true) {
            jbSalvar.setEnabled(true);
            jbExcluir.setEnabled(false);
            jbAlterar.setEnabled(false);
        } else {
            jbSalvar.setEnabled(false);
            jbExcluir.setEnabled(false);
            jbAlterar.setEnabled(false);
        }

    }

    public void preencheNumeroPortaria() {

        iniciaDao();

        jtfNumeroPortaria.setText("" + dao.getNumeroPortaria(modeloPortaria, versao.getAno(), TIPOPORTARIA));

    }

    public void run() {

        for (int i = 0; i == 0; i = 0) {
            try {
                //atualizaNumeroOficio();
                if (opcao.equals("salvar")) {
                    preencheNumeroPortaria();
                }

                threadAtualizaNumeroPortarias.sleep(10000);

                //this.finalize();
            } catch (Throwable ex) {
                //Logger.getLogger(AtualizaNumeroOficios.class.getName()).log(Level.SEVERE, null, ex);
                except.setMensagemErro("Não foi possivel atualizar o numero de Oficio/ Oficio Circular ou CI");
            }
        }

    }

//Geradores, Validadores===========================================================================================================================================
    public void iniciaControleUsuario() {
        
        if (controleUsuario == null) {
            controleUsuario = new ControleUsuario();
        }
        
    }
    
    public void iniciaDao() {

        if (dao == null) {
            dao = new DAO();
        }

    }
    
    public void iniciaLog() {
        
        if (geraLog == null) {
            geraLog = new Log();
        }
        
    }
    
    public void iniciaPortaria() {
        
        if (portaria == null) {
            portaria = new Portaria();
        }
        
    }
    
    public void iniciaUsuario() {
        
        if (usuario == null) {
            usuario = new Usuario();
        }
        
    }
    
    public void verificaNumeroPortaria() {

        iniciaDao();

        portariaVerificada = dao.verificarPortaria(modeloPortaria, Integer.valueOf(jtfNumeroPortaria.getText()), TIPOPORTARIA, versao.getAno());

    }

//Getters and Setters===========================================================================================================================================
    public Date getDateHoje() {

        GregorianCalendar calendar = new GregorianCalendar();
        Date data = calendar.getTime();

        return data;

    }

    public String getAno() {

        return "Ano de " + versao.getAno();

    }

    public void setNumeroCaracteres() {
        jtfAssuntoPortaria.setDocument(new FixedLengthDocument(240));
        jtfDestinatarioPortaria.setDocument(new FixedLengthDocument(120));
        jtfDepartamentoDestinatarioPortaria.setDocument(new FixedLengthDocument(120));
    }

    public void setPortariaBuscada(Portaria portariaBuscada) {

        if (portariaBuscada == null) {
        } else {

            iniciaPortaria();
            iniciaUsuario();
            
            if (portariaBuscada.getModeloPortaria().equals("PORTARIA")) {
                jrbPortaria.setSelected(true);
                preencheNumeroPortaria();
            } 

            usuario = (Usuario) portariaBuscada.getUsuario();
            
            jtfUsuario.setText(usuario.getNomeUsuario());
            jtfNumeroPortaria.setText("" + portariaBuscada.getNumero());
            jDateChooserSolicitacao.setDate(portariaBuscada.getDataSolicitacao());
            jtfAssuntoPortaria.setText(portariaBuscada.getAssuntoPortaria());
            jtfDestinatarioPortaria.setText(portariaBuscada.getDestinatarioPortaria());
            jtfDepartamentoDestinatarioPortaria.setText(portariaBuscada.getDepartamentoDestinatario());

            codigo = portariaBuscada.getCodigoPortaria();//para testar comando excluir
            portaria = portariaBuscada;
            portaria.setCodigoPortaria(codigo);
                    
            usuario = null;
            
            opcao = "alterar";

            desabilitaCampos();

            abilitaBotoes();

        }
    }

    public int getCodigoUsuario() {
        return codigoUsuario;
    }

    public void setCodigoUsuario(int codigoUsuario) {
        iniciaControleUsuario();
        jtfUsuario.setText(controleUsuario.getNomeUsuario(codigoUsuario));
        this.codigoUsuario = codigoUsuario;
        getPermissoes();
        desabilitaBotoes();
        setNumeroCaracteres();
    }

    public void getPermissoes() {
        Permissoes permissoes;
        iniciaDao();

        permissoes = (Permissoes) dao.buscaPermissoes(codigoUsuario);

        gerarNumeracao = permissoes.isGerarNumeracaoPortarias();
    }

//Metodos DAO===========================================================================================================================================
    public void salvar() {

        if (!jtfUsuario.getText().isEmpty() && !jtfNumeroPortaria.getText().isEmpty() && jDateChooserSolicitacao.getDate() != null) {

            iniciaDao();
            iniciaPortaria();

            portaria.setAno(versao.getAno());
            portaria.setDataSolicitacao(jDateChooserSolicitacao.getDate());
            portaria.setNumero(Integer.parseInt(jtfNumeroPortaria.getText()));
            
            usuario = (Usuario) dao.buscaUsuario(0, jtfUsuario.getText().toString(), "");
            portaria.setUsuario(usuario);
            usuario = null;
            
            portaria.setTextoPortaria("");
            portaria.setTipoPortaria(TIPOPORTARIA);
            portaria.setAssuntoPortaria(jtfAssuntoPortaria.getText());
            portaria.setDepartamentoDestinatario(jtfDepartamentoDestinatarioPortaria.getText());
            
            portaria.setDestinatarioPortaria(jtfDestinatarioPortaria.getText());
            if (jrbPortaria.isSelected() == true) {
                portaria.setModeloPortaria(modeloPortaria);
            } 

            try {
                iniciaLog();
                geraLog.criaLog(codigoUsuario, "Portaria", "Tentou Salvar Nº: " + jtfNumeroPortaria.getText() + " Assunto: " + jtfAssuntoPortaria.getText() + " Destinatário: " + jtfDestinatarioPortaria.getText());
            } catch (IOException ex) {
                Logger.getLogger(JfPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            dao.inserir(portaria, 7, codigoUsuario);
            cancelar();

        } else {
            JOptionPane.showMessageDialog(null, "Complete os Campos Obrigatórios, destacados em Azul!", "Atenção", JOptionPane.WARNING_MESSAGE, null);
        }

    }

    public void atualizar() {

        if (!jtfUsuario.getText().isEmpty() && !jtfNumeroPortaria.getText().isEmpty() && jDateChooserSolicitacao.getDate() != null) {

            iniciaDao();
            iniciaPortaria();

            portaria.setAno(versao.getAno());
            portaria.setDataSolicitacao(jDateChooserSolicitacao.getDate());
            portaria.setNumero(Integer.parseInt(jtfNumeroPortaria.getText()));
            
            usuario = (Usuario) dao.buscaUsuario(0, jtfUsuario.getText().toString(), "");
            portaria.setUsuario(usuario);
            usuario = null;
            
            portaria.setTextoPortaria("");
            portaria.setTipoPortaria(TIPOPORTARIA);
            portaria.setAssuntoPortaria(jtfAssuntoPortaria.getText());
            portaria.setDepartamentoDestinatario(jtfDepartamentoDestinatarioPortaria.getText());
            
            portaria.setDestinatarioPortaria(jtfDestinatarioPortaria.getText());
            if (jrbPortaria.isSelected() == true) {
                portaria.setModeloPortaria(modeloPortaria);
            }
            
            try {
                iniciaLog();
                geraLog.criaLog(codigoUsuario, "Portaria", "Tentou Atualizar Nº: " + jtfNumeroPortaria.getText() + " Assunto: " + jtfAssuntoPortaria.getText() + " Destinatário: " + jtfDestinatarioPortaria.getText());
            } catch (IOException ex) {
                Logger.getLogger(JfPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }

            dao.atualizar(portaria, 7, codigoUsuario);
            cancelar();

        } else {
            JOptionPane.showMessageDialog(null, "Complete os Campos Obrigatórios, destacados em Azul!", "Atenção", JOptionPane.WARNING_MESSAGE, null);
        }

    }

    public void excluir() {

        ClasseGeral cg = new ClasseGeral();

        if (cg.msgConfirma("Deseja excluir a Portaria?")) {

            iniciaDao();
            iniciaPortaria();
            
            try {
                iniciaLog();
                geraLog.criaLog(codigoUsuario, "Portaria", "Tentou Excluir Nº: " + jtfNumeroPortaria.getText() + " Assunto: " + jtfAssuntoPortaria.getText() + " Destinatário: " + jtfDestinatarioPortaria.getText());
            } catch (IOException ex) {
                Logger.getLogger(JfPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            dao.excluir(portaria, codigoUsuario);
            cancelar();

        }

    }
    
}
