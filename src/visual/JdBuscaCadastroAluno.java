/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package visual;

import controlador.ControleBloco;
import controlador.ControleCmei;
import controlador.ControleEscola;
import controlador.ControleImagem;
import controlador.ControleLinha;
import controlador.ControleLote;
import controlador.ControleOutro;
import controlador.ControleVersao;
import controlador.EditaOrdemTabela;
import controlador.FixedLengthDocument;
import dao.DAO;
import java.awt.Image;
import java.awt.Toolkit;
import java.text.DateFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import modelo.Aluno;
import modelo.Bloco;
import modelo.Cmei;
import modelo.Escola;
import modelo.Linha;
import modelo.Lote;
import modelo.Outro;

/**
 *
 * @author luizam
 */
public class JdBuscaCadastroAluno extends javax.swing.JDialog {

    private static ControleVersao versao = new ControleVersao();
    private Aluno aluno;
    private Bloco bloco;
    private Cmei cmei;
    private ControleBloco controleBloco;
    private ControleCmei controleCmei;
    private ControleEscola controleEscola;
    private ControleImagem controleImagem = new ControleImagem();
    private ControleLinha controleLinha;
    private ControleLote controleLote;
    private ControleOutro controleOutro;
    private DAO dao;
    private EditaOrdemTabela editaOrdemTabela;
    private Escola escola;
    private Linha linha;
    private Lote lote;
    private Outro outro;
    
    private String tipoEntid = "";
    
    /**
     * Creates new form JdBuscaCadastroAluno
     */
    public JdBuscaCadastroAluno(java.awt.Frame parent, boolean modal) {
        super(parent, "Buscar Aluno - " + versao.getVersao() + " - " + versao.getAno(), modal);
        initComponents();
        
        //Altera icone na barra de titulo
        Toolkit kit = Toolkit.getDefaultToolkit();
        Image img = kit.getImage("C:/SURGI/imagens/SURGI32x32.png");
        this.setIconImage(img);

        //maximiza tela
        //this.setExtendedState(MAXIMIZED_BOTH);

        //centraliza tela
        setSize(getWidth(), getHeight());
        setLocationRelativeTo(null);

        setNumeroCaracteres();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgTipoEntidades = new javax.swing.ButtonGroup();
        jpBotoes = new javax.swing.JPanel();
        jbBuscaFechar = new javax.swing.JButton();
        jbBuscaEnviarDados = new javax.swing.JButton();
        jbBuscaCancelar = new javax.swing.JButton();
        jbBuscaPesquisar = new javax.swing.JButton();
        jpBuscaAluno = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbBuscaAluno = new javax.swing.JTable();
        jtfBuscaNomeAluno = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jcbNomeEntidade = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jrbTodos = new javax.swing.JRadioButton();
        jrbEscola = new javax.swing.JRadioButton();
        jrbCmei = new javax.swing.JRadioButton();
        jrbOutros = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jcbBuscaNivel = new javax.swing.JComboBox();
        jcbBuscaSerie = new javax.swing.JComboBox();
        jcbBuscaTurno = new javax.swing.JComboBox();
        jcbBuscaLinha = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jcbBuscaLote = new javax.swing.JComboBox();
        jcbBuscaBloco = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jpBotoes.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        jbBuscaFechar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbBuscaFechar.setMnemonic('f');
        jbBuscaFechar.setText("Fechar");
        jbBuscaFechar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbBuscaFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscaFecharActionPerformed(evt);
            }
        });

        jbBuscaEnviarDados.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbBuscaEnviarDados.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Enviar.png"))); // NOI18N
        jbBuscaEnviarDados.setMnemonic('d');
        jbBuscaEnviarDados.setText("Enviar Dados");
        jbBuscaEnviarDados.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbBuscaEnviarDados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscaEnviarDadosActionPerformed(evt);
            }
        });

        jbBuscaCancelar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbBuscaCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cancelar.png"))); // NOI18N
        jbBuscaCancelar.setMnemonic('z');
        jbBuscaCancelar.setText("Cancelar");
        jbBuscaCancelar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbBuscaCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscaCancelarActionPerformed(evt);
            }
        });

        jbBuscaPesquisar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbBuscaPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/pesquisar.png"))); // NOI18N
        jbBuscaPesquisar.setMnemonic('p');
        jbBuscaPesquisar.setText("Pesquisar");
        jbBuscaPesquisar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbBuscaPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscaPesquisarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpBotoesLayout = new javax.swing.GroupLayout(jpBotoes);
        jpBotoes.setLayout(jpBotoesLayout);
        jpBotoesLayout.setHorizontalGroup(
            jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpBotoesLayout.createSequentialGroup()
                .addContainerGap(391, Short.MAX_VALUE)
                .addComponent(jbBuscaPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbBuscaCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbBuscaEnviarDados, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbBuscaFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jpBotoesLayout.setVerticalGroup(
            jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbBuscaFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscaEnviarDados, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscaCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscaPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jpBuscaAluno.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Nível: ");

        jLabel2.setText("Série/Ano: ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Nome Aluno: ");

        jtbBuscaAluno.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jtbBuscaAluno.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtbBuscaAluno.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ordem", "Nome do Aluno", "Entidade", "Nivel", "Série/Ano", "Turno", "Nome do Bloco", "Número da Linha", "Código"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtbBuscaAluno.setGridColor(new java.awt.Color(204, 204, 204));
        jtbBuscaAluno.setRowHeight(19);
        jtbBuscaAluno.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jtbBuscaAluno.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jtbBuscaAluno);

        jtfBuscaNomeAluno.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfBuscaNomeAluno.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtfBuscaNomeAluno.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfBuscaNomeAlunoFocusLost(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Unidade: ");

        jcbNomeEntidade.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbNomeEntidade.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jcbNomeEntidade.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Tipo Entidade: ");

        btgTipoEntidades.add(jrbTodos);
        jrbTodos.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbTodos.setSelected(true);
        jrbTodos.setText("Todos");
        jrbTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbTodosActionPerformed(evt);
            }
        });

        btgTipoEntidades.add(jrbEscola);
        jrbEscola.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbEscola.setText("Escola");
        jrbEscola.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbEscolaActionPerformed(evt);
            }
        });

        btgTipoEntidades.add(jrbCmei);
        jrbCmei.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbCmei.setText("Cmei");
        jrbCmei.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbCmeiActionPerformed(evt);
            }
        });

        btgTipoEntidades.add(jrbOutros);
        jrbOutros.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbOutros.setText("Outros");
        jrbOutros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbOutrosActionPerformed(evt);
            }
        });

        jLabel6.setText("Turno: ");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Nome da Linha: ");

        jcbBuscaNivel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbBuscaNivel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jcbBuscaNivel.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbBuscaNivelItemStateChanged(evt);
            }
        });

        jcbBuscaSerie.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbBuscaSerie.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jcbBuscaTurno.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbBuscaTurno.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "MANHÃ", "TARDE", "NOITE" }));
        jcbBuscaTurno.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jcbBuscaLinha.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbBuscaLinha.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jcbBuscaLinha.setEnabled(false);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("Nome da Lote: ");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("Nome da Bloco: ");

        jcbBuscaLote.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbBuscaLote.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jcbBuscaLote.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbBuscaLoteItemStateChanged(evt);
            }
        });

        jcbBuscaBloco.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbBuscaBloco.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jcbBuscaBloco.setEnabled(false);
        jcbBuscaBloco.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbBuscaBlocoItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jpBuscaAlunoLayout = new javax.swing.GroupLayout(jpBuscaAluno);
        jpBuscaAluno.setLayout(jpBuscaAlunoLayout);
        jpBuscaAlunoLayout.setHorizontalGroup(
            jpBuscaAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBuscaAlunoLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jpBuscaAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpBuscaAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jcbNomeEntidade, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jpBuscaAlunoLayout.createSequentialGroup()
                        .addComponent(jrbTodos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jrbEscola)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jrbCmei)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jrbOutros))
                    .addComponent(jtfBuscaNomeAluno)
                    .addComponent(jcbBuscaLinha, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jpBuscaAlunoLayout.createSequentialGroup()
                        .addComponent(jcbBuscaNivel, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcbBuscaSerie, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcbBuscaTurno, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jcbBuscaLote, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jcbBuscaBloco, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(129, Short.MAX_VALUE))
            .addGroup(jpBuscaAlunoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 799, Short.MAX_VALUE)
                .addContainerGap())
        );
        jpBuscaAlunoLayout.setVerticalGroup(
            jpBuscaAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpBuscaAlunoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpBuscaAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jrbTodos)
                    .addComponent(jrbEscola)
                    .addComponent(jrbCmei)
                    .addComponent(jrbOutros))
                .addGap(5, 5, 5)
                .addGroup(jpBuscaAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jcbNomeEntidade, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpBuscaAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtfBuscaNomeAluno, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpBuscaAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jcbBuscaNivel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbBuscaSerie, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jcbBuscaTurno, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpBuscaAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jcbBuscaLote, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpBuscaAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jcbBuscaBloco, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpBuscaAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jcbBuscaLinha, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jpBuscaAluno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jpBuscaAluno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbBuscaFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscaFecharActionPerformed
        fechar();
    }//GEN-LAST:event_jbBuscaFecharActionPerformed

    private void jbBuscaEnviarDadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscaEnviarDadosActionPerformed
        buscaDados();
        fechar();
    }//GEN-LAST:event_jbBuscaEnviarDadosActionPerformed

    private void jbBuscaCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscaCancelarActionPerformed
        cancelar();
    }//GEN-LAST:event_jbBuscaCancelarActionPerformed

    private void jbBuscaPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscaPesquisarActionPerformed
        pesquisar();
    }//GEN-LAST:event_jbBuscaPesquisarActionPerformed

    private void jtfBuscaNomeAlunoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfBuscaNomeAlunoFocusLost
        jtfBuscaNomeAluno.setText(jtfBuscaNomeAluno.getText().toUpperCase());
    }//GEN-LAST:event_jtfBuscaNomeAlunoFocusLost

    private void jrbTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbTodosActionPerformed

        jcbNomeEntidade.setSelectedIndex(0);
        jcbNomeEntidade.setEnabled(false);
        preencheComboNivel();
    }//GEN-LAST:event_jrbTodosActionPerformed

    private void jrbEscolaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbEscolaActionPerformed

        jcbNomeEntidade.setEnabled(true);
        tipoEntid = "ESCOLA";
        preencheComboEscolas();
        preencheComboNivel();
    }//GEN-LAST:event_jrbEscolaActionPerformed

    private void jrbCmeiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbCmeiActionPerformed

        jcbNomeEntidade.setEnabled(true);
        tipoEntid = "CMEI";
        preencheComboCmeis();
        preencheComboNivel();
    }//GEN-LAST:event_jrbCmeiActionPerformed

    private void jrbOutrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbOutrosActionPerformed

        jcbNomeEntidade.setEnabled(true);
        tipoEntid = "OUTROS";
        preencheComboOutros();
        preencheComboNivel();
    }//GEN-LAST:event_jrbOutrosActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        fechar();
    }//GEN-LAST:event_formWindowClosing

    private void jcbBuscaNivelItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbBuscaNivelItemStateChanged
        preencheComboSerie();
    }//GEN-LAST:event_jcbBuscaNivelItemStateChanged

    private void jcbBuscaLoteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbBuscaLoteItemStateChanged
        if (jcbBuscaLote.getSelectedIndex() != 0 && jcbBuscaLote.getSelectedItem() != null) {
            preencheComboBloco();
            jcbBuscaBloco.setEnabled(true);
        } else {
            if (jcbBuscaBloco.getSelectedItem() != null) {
                jcbBuscaBloco.setSelectedIndex(0);
                jcbBuscaBloco.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jcbBuscaLoteItemStateChanged

    private void jcbBuscaBlocoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbBuscaBlocoItemStateChanged
        if (jcbBuscaBloco.getSelectedIndex() != 0 && jcbBuscaBloco.getSelectedItem() != null) {
            preencheComboLinha();
            jcbBuscaLinha.setEnabled(true);
        } else {
            if (jcbBuscaLinha.getSelectedItem() != null) {
                jcbBuscaLinha.setSelectedIndex(0);
                jcbBuscaLinha.setEnabled(false);
            }
        }
        
    }//GEN-LAST:event_jcbBuscaBlocoItemStateChanged

    /**
     * @param args the command line arguments
     */
    //public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        /*try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JdBuscaCadastroAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JdBuscaCadastroAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JdBuscaCadastroAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JdBuscaCadastroAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }*/
        //</editor-fold>

        /* Create and display the dialog */
        /*java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JdBuscaCadastroAluno dialog = new JdBuscaCadastroAluno(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgTipoEntidades;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbBuscaCancelar;
    private javax.swing.JButton jbBuscaEnviarDados;
    private javax.swing.JButton jbBuscaFechar;
    private javax.swing.JButton jbBuscaPesquisar;
    private javax.swing.JComboBox jcbBuscaBloco;
    private javax.swing.JComboBox jcbBuscaLinha;
    private javax.swing.JComboBox jcbBuscaLote;
    private javax.swing.JComboBox jcbBuscaNivel;
    private javax.swing.JComboBox jcbBuscaSerie;
    private javax.swing.JComboBox jcbBuscaTurno;
    private javax.swing.JComboBox jcbNomeEntidade;
    private javax.swing.JPanel jpBotoes;
    private javax.swing.JPanel jpBuscaAluno;
    private javax.swing.JRadioButton jrbCmei;
    private javax.swing.JRadioButton jrbEscola;
    private javax.swing.JRadioButton jrbOutros;
    private javax.swing.JRadioButton jrbTodos;
    private javax.swing.JTable jtbBuscaAluno;
    private javax.swing.JTextField jtfBuscaNomeAluno;
    // End of variables declaration//GEN-END:variables

//Outros Metodos ===========================================================================================================================================
    public void fechar() {

        cancelar();
        dao = null;
        this.dispose();

    }
    
    public void cancelar() {

        DefaultTableModel modelo = (DefaultTableModel) jtbBuscaAluno.getModel();

        jtfBuscaNomeAluno.setText("");
        
        jrbTodos.setSelected(true);
        
        if (jcbNomeEntidade.getSelectedIndex() != 0 && jcbNomeEntidade.getSelectedItem() != null) {
            jcbNomeEntidade.setSelectedIndex(0);
        }
        
        jcbNomeEntidade.setEnabled(false);
        jcbBuscaLote.setSelectedIndex(0);
        preencheComboNivel();
        jcbBuscaBloco.setEnabled(false);
        jcbBuscaLinha.setEnabled(false);
        //jtfBuscaDiretorAtual.setText("");
        //jtfBuscaBairro.setText("");

        tipoEntid = "";
        modelo.setRowCount(0);

    }

    public void preencheComboBloco() {
        
        iniciaControleLote();
        iniciaDao();
        iniciaLote();
        
        List listaBlocos = new ArrayList();

        jcbBuscaBloco.removeAllItems();
        jcbBuscaBloco.addItem("");

        listaBlocos = dao.listarBlocos("", controleLote.getCodigoLote(controleLote.getNomeLote(jcbBuscaLote.getSelectedItem().toString())));

        for (int i = 0; i < listaBlocos.size(); i++) {
            iniciaBloco();
            bloco = (Bloco) listaBlocos.get(i);
            jcbBuscaBloco.addItem("BLOCO " + bloco.getNumeroBloco() + " - " + bloco.getNomeBloco());
            bloco = null;
        }
        
        jcbBuscaBloco.setSelectedIndex(0);
        
    }
    
    public void preencheComboCmeis() {

        iniciaDao();
        //DAO dao = new DAO();
        List listaCmeis = new ArrayList();

        jcbNomeEntidade.removeAllItems();
        jcbNomeEntidade.addItem("");

        listaCmeis = dao.listarCmeis(0, "", "");

        for (int i = 0; i < listaCmeis.size(); i++) {
            iniciaCmei();
            cmei = (Cmei) listaCmeis.get(i);
            jcbNomeEntidade.addItem(cmei.getNomeCmei());
            cmei = null;
        }
    }

    public void preencheComboEscolas() {

        iniciaDao();
        //DAO dao = new DAO();
        List listaEscolas = new ArrayList();

        jcbNomeEntidade.removeAllItems();
        jcbNomeEntidade.addItem("");

        listaEscolas = dao.listarEscolas(0, "", "");

        for (int i = 0; i < listaEscolas.size(); i++) {
            iniciaEscola();
            escola = (Escola) listaEscolas.get(i);
            jcbNomeEntidade.addItem(escola.getNomeEscola());
            escola = null;
        }

    }
    
    public void preencheComboLinha() {
        
        iniciaControleBloco();
        iniciaDao();
        iniciaBloco();
        
        List listaLinhas = new ArrayList();

        jcbBuscaLinha.removeAllItems();
        jcbBuscaLinha.addItem("");

        listaLinhas = dao.listarLinhas(0, controleBloco.getCodigoBloco(controleBloco.getNomeBloco(jcbBuscaBloco.getSelectedItem().toString())), "");

        for (int i = 0; i < listaLinhas.size(); i++) {
            iniciaLinha();
            linha = (Linha) listaLinhas.get(i);
            jcbBuscaLinha.addItem(linha.getNumeroLinha());
            linha = null;
        }
     
        jcbBuscaLinha.setSelectedIndex(0);
        
    }
    
    public void preencheComboLote() {
        
        iniciaDao();
        List listaLotes = new ArrayList();

        jcbBuscaLote.removeAllItems();
        jcbBuscaLote.addItem("");

        listaLotes = dao.listarLotes("", "");

        for (int i = 0; i < listaLotes.size(); i++) {
            iniciaLote();
            lote = (Lote) listaLotes.get(i);
            jcbBuscaLote.addItem("LOTE " + lote.getNumeroLote() + " - " + lote.getNomeLote());
            lote = null;
        }
     
        jcbBuscaLote.setSelectedIndex(0);
    }
    
    public void preencheComboNivel() {

        if (jrbCmei.isSelected()) {

            jcbBuscaNivel.removeAllItems();
            jcbBuscaNivel.addItem("");
            jcbBuscaNivel.addItem("EDUCAÇÃO ESPECIAL");
            jcbBuscaNivel.addItem("EDUCAÇÃO INFANTIL");
            jcbBuscaNivel.setSelectedIndex(0);

            jcbBuscaSerie.removeAllItems();
            jcbBuscaSerie.addItem("");
            jcbBuscaSerie.addItem("BERÇÁRIO");
            jcbBuscaSerie.addItem("MATERNAL I");
            jcbBuscaSerie.addItem("MATERNAL II");
            jcbBuscaSerie.addItem("PRÉ I");
            jcbBuscaSerie.addItem("PRÉ II");
            jcbBuscaSerie.setSelectedIndex(0);

        } else if (jrbEscola.isSelected()) {

            jcbBuscaNivel.removeAllItems();
            jcbBuscaNivel.addItem("");
            jcbBuscaNivel.addItem("EDUCAÇÃO ESPECIAL");
            jcbBuscaNivel.addItem("ENSINO FUNDAMENTAL");
            jcbBuscaNivel.addItem("EJA");
            jcbBuscaNivel.setSelectedIndex(0);

            jcbBuscaSerie.removeAllItems();
            jcbBuscaSerie.addItem("");
            jcbBuscaSerie.addItem("1ª");
            jcbBuscaSerie.addItem("1º");
            jcbBuscaSerie.addItem("2ª");
            jcbBuscaSerie.addItem("2º");
            jcbBuscaSerie.addItem("3ª");
            jcbBuscaSerie.addItem("3º");
            jcbBuscaSerie.addItem("4ª");
            jcbBuscaSerie.addItem("4º");
            jcbBuscaSerie.addItem("5º");
            jcbBuscaSerie.setSelectedIndex(0);

        } else if (jrbOutros.isSelected()) {

            jcbBuscaNivel.removeAllItems();
            jcbBuscaNivel.addItem("");
            jcbBuscaNivel.addItem("EDUCAÇÃO ESPECIAL");
            jcbBuscaNivel.addItem("ENSINO MÉDIO");
            jcbBuscaNivel.addItem("ENSINO SUPERIOR");
            jcbBuscaNivel.addItem("EJA");
            jcbBuscaNivel.setSelectedIndex(0);

            preencheComboSerie();

        } else {

            jcbBuscaNivel.removeAllItems();
            jcbBuscaNivel.addItem("");
            jcbBuscaNivel.addItem("EDUCAÇÃO ESPECIAL");
            jcbBuscaNivel.addItem("EDUCAÇÃO INFANTIL");
            jcbBuscaNivel.addItem("ENSINO FUNDAMENTAL");
            jcbBuscaNivel.addItem("ENSINO MÉDIO");
            jcbBuscaNivel.addItem("ENSINO SUPERIOR");
            jcbBuscaNivel.addItem("EJA");
            jcbBuscaNivel.setSelectedIndex(0);

            preencheComboSerie();

        }

    }
    
    public void preencheComboOutros() {

        iniciaDao();
        //DAO dao = new DAO();
        List listaOutros = new ArrayList();

        jcbNomeEntidade.removeAllItems();
        jcbNomeEntidade.addItem("");

        listaOutros = dao.listarOutros(0, "", "");

        for (int i = 0; i < listaOutros.size(); i++) {
            iniciaOutro();
            outro = (Outro) listaOutros.get(i);
            jcbNomeEntidade.addItem(outro.getNomeOutro());
            outro = null;
        }

    }

    public void preencheComboSerie() {

        if (jcbBuscaNivel.getSelectedItem() != null && jcbBuscaNivel.getSelectedItem().toString().equals("ENSINO SUPERIOR")) {

            jcbBuscaSerie.removeAllItems();
            jcbBuscaSerie.addItem("");
            jcbBuscaSerie.addItem("1º");
            jcbBuscaSerie.addItem("2º");
            jcbBuscaSerie.addItem("3º");
            jcbBuscaSerie.addItem("4º");
            jcbBuscaSerie.addItem("5º");
            jcbBuscaSerie.setSelectedIndex(0);

        } else if (jrbOutros.isSelected()) {

            jcbBuscaSerie.removeAllItems();
            jcbBuscaSerie.addItem("");
            jcbBuscaSerie.addItem("6º");
            jcbBuscaSerie.addItem("7º");
            jcbBuscaSerie.addItem("8º");
            jcbBuscaSerie.addItem("9º");
            jcbBuscaSerie.addItem("1º");
            jcbBuscaSerie.addItem("2º");
            jcbBuscaSerie.addItem("3º");
            jcbBuscaSerie.setSelectedIndex(0);

        } else {
            
            jcbBuscaSerie.removeAllItems();
            jcbBuscaSerie.addItem("");
            jcbBuscaSerie.addItem("BERÇÁRIO");
            jcbBuscaSerie.addItem("MATERNAL I");
            jcbBuscaSerie.addItem("MATERNAL II");
            jcbBuscaSerie.addItem("PRÉ I");
            jcbBuscaSerie.addItem("PRÉ II");
            jcbBuscaSerie.addItem("1ª");
            jcbBuscaSerie.addItem("1º");
            jcbBuscaSerie.addItem("2ª");
            jcbBuscaSerie.addItem("2º");
            jcbBuscaSerie.addItem("3ª");
            jcbBuscaSerie.addItem("3º");
            jcbBuscaSerie.addItem("4ª");
            jcbBuscaSerie.addItem("4º");
            jcbBuscaSerie.addItem("5º");
            jcbBuscaSerie.addItem("6º");
            jcbBuscaSerie.addItem("7º");
            jcbBuscaSerie.addItem("8º");
            jcbBuscaSerie.addItem("9º");
            jcbBuscaSerie.addItem("1º");
            jcbBuscaSerie.addItem("2º");
            jcbBuscaSerie.addItem("3º");
            jcbBuscaSerie.setSelectedIndex(0);
            
        }

    }
    
    public void pesquisar() {

        DefaultTableModel modelo = (DefaultTableModel) jtbBuscaAluno.getModel();
        final TableRowSorter<TableModel> tabelaSorter = new TableRowSorter<TableModel>(modelo);
        jtbBuscaAluno.setRowSorter(tabelaSorter);
        
        iniciaDao();
        iniciaBloco();
        iniciaLinha();
        iniciaLote();
        iniciaControleBloco();
        iniciaControleLote();
        //DAO dao = new DAO();
        Aluno alun;
        DateFormat df = DateFormat.getDateInstance();
        List listaAlunos = new ArrayList();
        int codigoBlocoAux = 0;
        int codigoCmeiAux = 0;
        int codigoEscolaAux = 0;
        int codigoLinhaAux = 0;
        int codigoLoteAux = 0;
        int codigoOutroAux = 0;
        String nomeEntid;
        String nivel;
        String serieAno;
        String turno;

        if (jtfBuscaNomeAluno.getText().isEmpty()) {
            nomeEntid = "";
        } else {
            nomeEntid = jtfBuscaNomeAluno.getText();
        }

        if (jcbBuscaLote.getSelectedIndex() != 0 && jcbBuscaLote.getSelectedItem() != null) {
            iniciaControleLote();
            codigoLoteAux = controleLote.getCodigoLote(controleLote.getNomeLote(jcbBuscaLote.getSelectedItem().toString()));
        } 
        
        if (jcbBuscaBloco.getSelectedIndex() != 0 && jcbBuscaBloco.getSelectedItem() != null) {
            iniciaControleBloco();
            codigoBlocoAux = controleBloco.getCodigoBloco(controleBloco.getNomeBloco(jcbBuscaBloco.getSelectedItem().toString()));
        } 
        
        if (jcbBuscaLinha.getSelectedIndex() != 0 && jcbBuscaLinha.getSelectedItem() != null) {
            iniciaControleLinha();
            codigoLinhaAux = controleLinha.getCodigoLinha(Integer.parseInt(jcbBuscaLinha.getSelectedItem().toString()), codigoBlocoAux);
        } 
        
        switch(tipoEntid) {
            
            case "ESCOLA":
                iniciaControleEscola();
                codigoEscolaAux = controleEscola.getCodigoEscola(jcbNomeEntidade.getSelectedItem().toString());
                codigoCmeiAux = 0;
                codigoOutroAux = 0;
                break;
                
            case "CMEI":
                iniciaControleCmei();
                codigoEscolaAux = 0;
                codigoCmeiAux = controleCmei.getCodigoCmei(jcbNomeEntidade.getSelectedItem().toString());
                codigoOutroAux = 0;                
                break;
                
            case "OUTROS":
                iniciaControleOutro();
                codigoEscolaAux = 0;
                codigoCmeiAux = 0;
                codigoOutroAux = controleOutro.getCodigoOutro(jcbNomeEntidade.getSelectedItem().toString());                
                break;
                
            default:
                
                break;
            
        }
        
        listaAlunos = (List) dao.listarAlunos(0, codigoBlocoAux, codigoLinhaAux, codigoLoteAux, codigoEscolaAux, codigoCmeiAux, codigoOutroAux, 
                jtfBuscaNomeAluno.getText(), tipoEntid, jcbBuscaNivel.getSelectedItem().toString(), jcbBuscaSerie.getSelectedItem().toString(), 
                jcbBuscaTurno.getSelectedItem().toString());

        modelo.setRowCount(0);
        iniciaEditaOrdemTabela();

        for (int i = 0; i < listaAlunos.size(); i++) {

            String nomeEntidade = "";
            
            alun = (Aluno) listaAlunos.get(i);
            
            switch (alun.getTipoEntidade()) {
                
                case "ESCOLA":
                    iniciaEscola();
                    escola = (Escola) alun.getEscola();
                    nomeEntidade = escola.getNomeEscola();
                    break;
               
                case "CMEI":
                    iniciaCmei();
                    cmei = (Cmei) alun.getCmei();
                    nomeEntidade = cmei.getNomeCmei();
                    break;
                   
                case "OUTROS":
                    iniciaOutro();
                    outro = (Outro) alun.getOutro();
                    nomeEntidade = outro.getNomeOutro();
                    break;
                    
            }

            modelo.addRow(new String[]{editaOrdemTabela.editaOrdem(i + 1), alun.getNomeAluno(), nomeEntidade, alun.getNivel(), alun.getSerie(), alun.getTurno(), 
                alun.getLinha().getBloco().getNomeBloco(), String.valueOf(alun.getLinha().getNumeroLinha()), String.valueOf(alun.getCodigoAluno())});

        }

        if (jtbBuscaAluno.getRowCount() > 0) {
            jtbBuscaAluno.getSelectionModel().setSelectionInterval(0, 0);
        }

    }

    public void buscaDados() {

        iniciaDao();
        iniciaAluno();
        //DAO dao = new DAO();

        int codigo;

        codigo = Integer.valueOf((String) jtbBuscaAluno.getValueAt(jtbBuscaAluno.getSelectedRow(), 8));

        aluno = (Aluno) dao.busca(aluno, codigo);
        dao.encerraSessao();

    }
    
//Geradores, Validadores===========================================================================================================================================
    public void iniciaAluno() {
        
        if (aluno == null) {
            aluno = new Aluno();
        }
        
    }
    
    public void iniciaBloco() {
        
        if (bloco == null) {
            bloco = new Bloco();
        }
        
    }
    
    public void iniciaCmei() {
        
        if (cmei == null) {
            cmei = new Cmei();
        }
        
    }
    
    public void iniciaControleBloco() {
        
        if (controleBloco == null) {
            controleBloco = new ControleBloco();
        }
        
    }
    
    public void iniciaControleCmei() {
        
        if (controleCmei == null) {
            controleCmei = new ControleCmei();
        }
        
    }
    
    public void iniciaControleEscola() {
        
        if (controleEscola == null) {
            controleEscola = new ControleEscola();
        }
        
    }
    
    public void iniciaControleLinha() {
        
        if (controleLinha == null) {
            controleLinha = new ControleLinha();
        }
        
    }
    
    public void iniciaControleLote() {
        
        if (controleLote == null) {
            controleLote = new ControleLote();
        }
        
    }
    
    public void iniciaControleOutro() {
        
        if (controleOutro == null) {
            controleOutro = new ControleOutro();
        }
        
    }
    
    public void iniciaDao() {

        if (dao == null) {
            dao = new DAO();
        }

    }
    
    public void iniciaEditaOrdemTabela() {
        
        if (editaOrdemTabela == null) {
            editaOrdemTabela = new EditaOrdemTabela();
        }
        
    }
    
    public void iniciaEscola() {
        
        if (escola == null) {
            escola = new Escola();
        }
        
    }
    
    public void iniciaLinha() {
        
        if (linha == null) {
            linha = new Linha();
        }
        
    }
    
    public void iniciaLote() {
        
        if (lote == null) {
            lote = new Lote();
        }
        
    }
    
    public void iniciaOutro() {
        
        if (outro == null) {
            outro = new Outro();
        }
        
    }
    
//Getters and Setters===========================================================================================================================================
    public void setNumeroCaracteres() {

        jtfBuscaNomeAluno.setDocument(new FixedLengthDocument(60));
        //jtfBuscaDiretorAtual.setDocument(new FixedLengthDocument(60));
        //jtfBuscaBairro.setDocument(new FixedLengthDocument(60));

    }

    public Aluno getCadastroAluno() {

        return aluno;

    }

    public void setCadastroAluno() {
        aluno = null;
    }

    public void setInicio() {

        jcbNomeEntidade.setEnabled(false);
        preencheComboNivel();
        preencheComboLote();

    }

//Metodos DAO===========================================================================================================================================
    
}
