/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * jfCadastroAluno.java
 *
 * Created on 06/06/2011, 08:39:23
 */

package visual;

import com.toedter.calendar.JCalendar;
import conexao.Conexao;
import controlador.ClasseGeral;
import controlador.ControleBloco;
import controlador.ControleCmei;
import controlador.ControleEscola;
import controlador.ControleImagem;
import controlador.ControleLinha;
import controlador.ControleLote;
import controlador.ControleOutro;
import controlador.ControleVersao;
import controlador.Log;
import dao.DAO;
import excecoes.ExcCadastro;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import modelo.Aluno;
import modelo.Bloco;
import modelo.Cmei;
import modelo.Endereco;
import modelo.Escola;
import modelo.Linha;
import modelo.Lote;
import modelo.Outro;
import modelo.Permissoes;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author luizam
 */
public class JfCadastroAluno extends javax.swing.JFrame {
    
    private static ControleVersao versao = new ControleVersao();
    private Aluno aluno;
    private Bloco bloco;
    private ClasseGeral classeGeral;
    private Cmei cmei;
    private ControleBloco controleBloco;
    private ControleCmei controleCmei;
    private ControleEscola controleEscola;
    private ControleImagem controleImagem = new ControleImagem();
    private ControleLinha controleLinha;
    private ControleLote controleLote;
    private ControleOutro controleOutro;
    private DAO dao;
    private Endereco endereco;
    private Escola escola;
    private Linha linha;
    private Log geraLog;
    private Lote lote;
    private Outro outro;
    
    private JfCadastroEndereco jfCadastroEndereco;
    private JdBuscaCadastroAluno jdbca;

    private JCalendar jcalendar = new JCalendar();
    private JasperPrint jPrint;
    private JasperViewer jViewer;
    
    private int codigo = 0;
    private int codigoUsuario;
    private String tipoEntid = "";
    private String opcao = "salvar";
    private boolean cadastrarAluno;

    /** Creates new form jfCadastroAluno */
    public JfCadastroAluno() {
        super("Cadastro Aluno - " + versao.getVersao() + " - " + versao.getAno());
        initComponents();

        //Altera icone na barra de titulo
        Toolkit kit = Toolkit.getDefaultToolkit();
        Image img = kit.getImage("C:/SURGI/imagens/SURGI32x32.png");
        this.setIconImage(img);

        //maximiza tela
        //this.setExtendedState(MAXIMIZED_BOTH);

        //centraliza tela
        setSize(getWidth(), getHeight());
        setLocationRelativeTo(null);

        preencheComboEscolas();
        preencheComboNivel();

        preencheComboLote();
        preencheComboBloco();
        preencheComboLinha();
        
        jDateChooserDataCadastro.setDate(getDateHoje());

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgEntidades = new javax.swing.ButtonGroup();
        jpBotoes = new javax.swing.JPanel();
        jbSalvar = new javax.swing.JButton();
        jbBuscar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();
        jbAlterar = new javax.swing.JButton();
        jbImprimirCarteirinha = new javax.swing.JButton();
        jbImprimir = new javax.swing.JButton();
        jpCadastroAluno = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jtfNomeAluno = new javax.swing.JTextField();
        jcbSexo = new javax.swing.JComboBox();
        jDateChooserDataNascimento = new com.toedter.calendar.JDateChooser();
        jtfFiliacaoPai = new javax.swing.JTextField();
        jtfFiliacaoMae = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jrbEscola = new javax.swing.JRadioButton();
        jrbCmei = new javax.swing.JRadioButton();
        jrbOutros = new javax.swing.JRadioButton();
        jcbNomeEntidade = new javax.swing.JComboBox();
        jcbNivel = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        jcbSerie = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jcbTurno = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        jcbLinha = new javax.swing.JComboBox();
        jDateChooserDataCadastro = new com.toedter.calendar.JDateChooser();
        jLabel14 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtaInformacoes = new javax.swing.JTextArea();
        jbCadastroEndereco1 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jcbLote = new javax.swing.JComboBox();
        jcbBloco = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jpBotoes.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        jbSalvar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/OK.png"))); // NOI18N
        jbSalvar.setText("Salvar");
        jbSalvar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        jbBuscar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/pesquisar.png"))); // NOI18N
        jbBuscar.setText("Buscar");
        jbBuscar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jbCancelar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cancelar.png"))); // NOI18N
        jbCancelar.setText("Cancelar");
        jbCancelar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jbExcluir.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/delete.png"))); // NOI18N
        jbExcluir.setText("Excluir");
        jbExcluir.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbExcluir.setEnabled(false);
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jbAlterar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/reload.png"))); // NOI18N
        jbAlterar.setText("Alterar");
        jbAlterar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbAlterar.setEnabled(false);
        jbAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlterarActionPerformed(evt);
            }
        });

        jbImprimirCarteirinha.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbImprimirCarteirinha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/imprimir.png"))); // NOI18N
        jbImprimirCarteirinha.setText("Carteirinha");
        jbImprimirCarteirinha.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbImprimirCarteirinha.setEnabled(false);
        jbImprimirCarteirinha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbImprimirCarteirinhaActionPerformed(evt);
            }
        });

        jbImprimir.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/imprimir.png"))); // NOI18N
        jbImprimir.setText("Imprimir");
        jbImprimir.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbImprimir.setEnabled(false);
        jbImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbImprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpBotoesLayout = new javax.swing.GroupLayout(jpBotoes);
        jpBotoes.setLayout(jpBotoesLayout);
        jpBotoesLayout.setHorizontalGroup(
            jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpBotoesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbImprimirCarteirinha, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jpBotoesLayout.setVerticalGroup(
            jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbImprimirCarteirinha, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jpCadastroAluno.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText(" Nome: ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Sexo: ");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Data de Nascimento: ");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Filiação Pai: ");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Filiação Mãe: ");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Unidade Escolar: ");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Nivel: ");

        jtfNomeAluno.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfNomeAluno.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtfNomeAluno.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfNomeAlunoFocusLost(evt);
            }
        });

        jcbSexo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbSexo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Masculino", "Feminino" }));
        jcbSexo.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jDateChooserDataNascimento.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDateChooserDataNascimento.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jtfFiliacaoPai.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfFiliacaoPai.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtfFiliacaoPai.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfFiliacaoPaiFocusLost(evt);
            }
        });

        jtfFiliacaoMae.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfFiliacaoMae.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtfFiliacaoMae.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfFiliacaoMaeFocusLost(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setText("Tipo Entidade: ");

        btgEntidades.add(jrbEscola);
        jrbEscola.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbEscola.setSelected(true);
        jrbEscola.setText("Escola");
        jrbEscola.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbEscolaActionPerformed(evt);
            }
        });

        btgEntidades.add(jrbCmei);
        jrbCmei.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbCmei.setText("Cmei");
        jrbCmei.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbCmeiActionPerformed(evt);
            }
        });

        btgEntidades.add(jrbOutros);
        jrbOutros.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbOutros.setText("Outros");
        jrbOutros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbOutrosActionPerformed(evt);
            }
        });

        jcbNomeEntidade.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbNomeEntidade.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jcbNivel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbNivel.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "EDUCAÇÃO ESPECIAL", "EDUCAÇÃO INFANTIL", "ENSINO FUNDAMENTAL", "ENSINO MÉDIO", "ENSINO SUPERIOR", "EJA" }));
        jcbNivel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jcbNivel.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jcbNivelPropertyChange(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("Série/Ano: ");

        jcbSerie.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbSerie.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1ª", "2ª", "3ª", "4ª", "5ª", "6ª", "8ª", "9ª" }));
        jcbSerie.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel12.setText("Turno: ");

        jcbTurno.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbTurno.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "MANHÃ", "TARDE", "NOITE" }));
        jcbTurno.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel13.setText("Linha: ");

        jcbLinha.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbLinha.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jDateChooserDataCadastro.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDateChooserDataCadastro.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel14.setText("Data de Cadastro: ");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel18.setText("Informções Adicionais: ");

        jtaInformacoes.setColumns(20);
        jtaInformacoes.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtaInformacoes.setRows(5);
        jtaInformacoes.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jScrollPane1.setViewportView(jtaInformacoes);

        jbCadastroEndereco1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbCadastroEndereco1.setText("Adicionar | Visualizar");
        jbCadastroEndereco1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbCadastroEndereco1.setEnabled(false);
        jbCadastroEndereco1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCadastroEndereco1ActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel15.setText("Endereço: ");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel16.setText("Lote: ");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel17.setText("Bloco: ");

        jcbLote.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbLote.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jcbLote.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbLoteItemStateChanged(evt);
            }
        });

        jcbBloco.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbBloco.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jcbBloco.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbBlocoItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jpCadastroAlunoLayout = new javax.swing.GroupLayout(jpCadastroAluno);
        jpCadastroAluno.setLayout(jpCadastroAlunoLayout);
        jpCadastroAlunoLayout.setHorizontalGroup(
            jpCadastroAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCadastroAlunoLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jpCadastroAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel18)
                    .addComponent(jLabel15)
                    .addComponent(jLabel14)
                    .addComponent(jLabel13)
                    .addComponent(jLabel17)
                    .addComponent(jLabel16)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel10)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpCadastroAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpCadastroAlunoLayout.createSequentialGroup()
                        .addGroup(jpCadastroAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcbLinha, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDateChooserDataCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbCadastroEndereco1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpCadastroAlunoLayout.createSequentialGroup()
                        .addGroup(jpCadastroAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcbBloco, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jcbLote, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jtfFiliacaoMae, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfFiliacaoPai, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcbNomeEntidade, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpCadastroAlunoLayout.createSequentialGroup()
                                .addGroup(jpCadastroAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpCadastroAlunoLayout.createSequentialGroup()
                                        .addComponent(jcbSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jDateChooserDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jtfNomeAluno, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 533, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpCadastroAlunoLayout.createSequentialGroup()
                                        .addComponent(jrbEscola)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jrbCmei)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jrbOutros))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpCadastroAlunoLayout.createSequentialGroup()
                                        .addComponent(jcbNivel, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jcbSerie, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel12)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jcbTurno, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(114, 114, 114))))
        );
        jpCadastroAlunoLayout.setVerticalGroup(
            jpCadastroAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCadastroAlunoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpCadastroAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtfNomeAluno, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpCadastroAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jpCadastroAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jcbSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addComponent(jDateChooserDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpCadastroAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jtfFiliacaoPai, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpCadastroAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jtfFiliacaoMae, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpCadastroAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jrbEscola)
                    .addComponent(jrbCmei)
                    .addComponent(jrbOutros))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpCadastroAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jcbNomeEntidade, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpCadastroAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jcbNivel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jcbSerie, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(jcbTurno, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpCadastroAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jcbLote, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpCadastroAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jcbBloco, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpCadastroAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jcbLinha, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpCadastroAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jDateChooserDataCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpCadastroAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jbCadastroEndereco1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpCadastroAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpCadastroAluno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jpBotoes, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jpCadastroAluno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed

        if (jtfNomeAluno.getText().isEmpty()) {

            iniciaClasseGeral();
            classeGeral.msgAtencao("Complete os Campos Obrigatórios, destacados em Azul!");

        } else {

            if (opcao.equals("salvar")) {

                salvar();
                opcao = "salvar";

            } else if (opcao.equals("alterar")) {

                atualizar();
                opcao = "salvar";

            }

        }
    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed

        if (jdbca == null) {
            jdbca = new JdBuscaCadastroAluno(null, true);
        }

        jdbca.setInicio();
        jdbca.setVisible(true);

        setAlunoBuscado(jdbca.getCadastroAluno());
        jdbca.setCadastroAluno();

    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        cancelar();
}//GEN-LAST:event_jbCancelarActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        excluir();
}//GEN-LAST:event_jbExcluirActionPerformed

    private void jbAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlterarActionPerformed

        habilitaCampos();

        jbAlterar.setEnabled(false);

        opcao = "alterar";

        jbSalvar.setEnabled(true);
        
        jbCadastroEndereco1.setEnabled(true);
    }//GEN-LAST:event_jbAlterarActionPerformed

    private void jbImprimirCarteirinhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbImprimirCarteirinhaActionPerformed

        //ADOGeral ag = new ADOGeral();
        Conexao conexao = new Conexao();
        HashMap parametros = new HashMap();
        try {
            //System.out.println(codigoRegistro);
            //parametros.put("titulo", "Titulo Relatorio");
            parametros.put("codigoAluno", new Integer(codigo));
            //parametros.put("codigo", lista.get(0).getNome();
            //ADOGeral.conectar();
            conexao.getConexao();
        } catch (ExcCadastro ex) {
            Logger.getLogger(JfImpressosAgendamento.class.getName()).log(Level.SEVERE, null, ex);
        }

        //        JRDataSource jrds = new JRBeanCollectionDataSource(lista);

        try {

            //jReport = JasperCompileManager.compileReport("E:/LUIZ/PROJETOS JAVA/CORPORATIVO/m2GestaoClinicas/FichaPaciente.jrxml");
            //jPrint = JasperFillManager.fillReport("C:/m2GestaoClinicas/FichaPaciente.jasper", parametros, ADOGeral.getConexao());
            jPrint = JasperFillManager.fillReport("AlunoCarteirinha.jasper", parametros, conexao.getConexao());
            //jPrint = JasperFillManager.fillReport(jReport, parametros, jrds);

            //if (!(jViewer == null)) {
            //jViewer = new JasperViewer(jPrint, false);
            //jViewer.setExtendedState(JFrame.MAXIMIZED_BOTH);
            jViewer.viewReport(jPrint, false);
            //}

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jbImprimirCarteirinhaActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        fechar();
    }//GEN-LAST:event_formWindowClosing

    private void jrbEscolaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbEscolaActionPerformed

        preencheComboEscolas();
        preencheComboNivel();
        tipoEntid = "ESCOLA";

    }//GEN-LAST:event_jrbEscolaActionPerformed

    private void jrbCmeiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbCmeiActionPerformed

        preencheComboCmeis();
        preencheComboNivel();
        tipoEntid = "CMEI";

    }//GEN-LAST:event_jrbCmeiActionPerformed

    private void jrbOutrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbOutrosActionPerformed

        preencheComboOutros();
        preencheComboNivel();
        tipoEntid = "OUTROS";

    }//GEN-LAST:event_jrbOutrosActionPerformed

    private void jtfNomeAlunoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfNomeAlunoFocusLost
        jtfNomeAluno.setText(jtfNomeAluno.getText().toUpperCase());
    }//GEN-LAST:event_jtfNomeAlunoFocusLost

    private void jtfFiliacaoPaiFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfFiliacaoPaiFocusLost
        jtfFiliacaoPai.setText(jtfFiliacaoPai.getText().toUpperCase());
    }//GEN-LAST:event_jtfFiliacaoPaiFocusLost

    private void jtfFiliacaoMaeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfFiliacaoMaeFocusLost
        jtfFiliacaoMae.setText(jtfFiliacaoMae.getText().toUpperCase());
    }//GEN-LAST:event_jtfFiliacaoMaeFocusLost

    private void jcbNivelPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jcbNivelPropertyChange
        preencheComboSerie();
    }//GEN-LAST:event_jcbNivelPropertyChange

    private void jbCadastroEndereco1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCadastroEndereco1ActionPerformed

        iniciaCadastroEndereco();

        jfCadastroEndereco.setCodigoUsuario(codigoUsuario);
        jfCadastroEndereco.setCodigoAluno(codigo);

        jfCadastroEndereco.setVisible(true);
        
    }//GEN-LAST:event_jbCadastroEndereco1ActionPerformed

    private void jcbLoteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbLoteItemStateChanged
        if (jcbLote.getSelectedIndex() != 0) {
            preencheComboBloco();
        }
    }//GEN-LAST:event_jcbLoteItemStateChanged

    private void jcbBlocoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbBlocoItemStateChanged
        if (jcbBloco.getSelectedIndex() != 0) {
            preencheComboLinha();
        }
    }//GEN-LAST:event_jcbBlocoItemStateChanged

    private void jbImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbImprimirActionPerformed
        //ADOGeral ag = new ADOGeral();
        Conexao conexao = new Conexao();
        HashMap parametros = new HashMap();
        try {
            //System.out.println(codigoRegistro);
            //parametros.put("titulo", "Titulo Relatorio");
            parametros.put("codigoAluno", new Integer(codigo));
            //parametros.put("codigo", lista.get(0).getNome();
            //ADOGeral.conectar();
            conexao.getConexao();
        } catch (ExcCadastro ex) {
            Logger.getLogger(JfImpressosAgendamento.class.getName()).log(Level.SEVERE, null, ex);
        }

        //        JRDataSource jrds = new JRBeanCollectionDataSource(lista);

        try {

            //jReport = JasperCompileManager.compileReport("E:/LUIZ/PROJETOS JAVA/CORPORATIVO/m2GestaoClinicas/FichaPaciente.jrxml");
            //jPrint = JasperFillManager.fillReport("C:/m2GestaoClinicas/FichaPaciente.jasper", parametros, ADOGeral.getConexao());
            jPrint = JasperFillManager.fillReport("AlunoIdentificacao.jasper", parametros, conexao.getConexao());
            //jPrint = JasperFillManager.fillReport(jReport, parametros, jrds);

            //if (!(jViewer == null)) {
            //jViewer = new JasperViewer(jPrint, false);
            //jViewer.setExtendedState(JFrame.MAXIMIZED_BOTH);
            jViewer.viewReport(jPrint, false);
            //}

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jbImprimirActionPerformed

    /**
    * @param args the command line arguments
    */
    /*public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new jfCadastroAluno().setVisible(true);
            }
        });
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgEntidades;
    private com.toedter.calendar.JDateChooser jDateChooserDataCadastro;
    private com.toedter.calendar.JDateChooser jDateChooserDataNascimento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbAlterar;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbCadastroEndereco1;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbImprimir;
    private javax.swing.JButton jbImprimirCarteirinha;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JComboBox jcbBloco;
    private javax.swing.JComboBox jcbLinha;
    private javax.swing.JComboBox jcbLote;
    private javax.swing.JComboBox jcbNivel;
    private javax.swing.JComboBox jcbNomeEntidade;
    private javax.swing.JComboBox jcbSerie;
    private javax.swing.JComboBox jcbSexo;
    private javax.swing.JComboBox jcbTurno;
    private javax.swing.JPanel jpBotoes;
    private javax.swing.JPanel jpCadastroAluno;
    private javax.swing.JRadioButton jrbCmei;
    private javax.swing.JRadioButton jrbEscola;
    private javax.swing.JRadioButton jrbOutros;
    private javax.swing.JTextArea jtaInformacoes;
    private javax.swing.JTextField jtfFiliacaoMae;
    private javax.swing.JTextField jtfFiliacaoPai;
    private javax.swing.JTextField jtfNomeAluno;
    // End of variables declaration//GEN-END:variables

//Outros Metodos ===========================================================================================================================================
    public void fechar() {
        this.dispose();
    }

    public void cancelar() {

        jtfFiliacaoMae.setText("");
        jtfFiliacaoPai.setText("");
        jtfNomeAluno.setText("");
        jcbNomeEntidade.setSelectedIndex(0);
        jcbSerie.setSelectedIndex(0);
        
        jcbNivel.setSelectedIndex(0);
        jcbSexo.setSelectedIndex(0);
        jcbTurno.setSelectedIndex(0);
        
        jDateChooserDataCadastro.setDate(getDateHoje());
        jDateChooserDataNascimento.setDate(null);
        
        jrbEscola.setSelected(true);
        
        jbCadastroEndereco1.setEnabled(false);
        
        opcao = "salvar";
        tipoEntid = "";

        preencheComboEscolas();
        preencheComboNivel();
        jcbLote.setSelectedIndex(0);
        
        desabilitaBotoes();
        habilitaCampos();
        
    }

    public void habilitaCampos() {

        jtfFiliacaoMae.setEditable(true);
        jtfFiliacaoPai.setEditable(true);
        jtfNomeAluno.setEditable(true);
        jcbBloco.setEnabled(true);
        jcbLinha.setEnabled(true);
        jcbLote.setEnabled(true);
        jcbNivel.setEnabled(true);
        jcbNomeEntidade.setEnabled(true);
        jcbSerie.setEnabled(true);
        jcbSexo.setEnabled(true);
        jcbTurno.setEnabled(true);
        jrbCmei.setEnabled(true);
        jrbEscola.setEnabled(true);
        jrbOutros.setEnabled(true);
        jDateChooserDataCadastro.setEnabled(true);
        jDateChooserDataNascimento.setEnabled(true);

    }

    public void desabilitaCampos() {

        jtfFiliacaoMae.setEditable(false);
        jtfFiliacaoPai.setEditable(false);
        jtfNomeAluno.setEditable(false);
        jcbBloco.setEnabled(false);
        jcbLinha.setEnabled(false);
        jcbLote.setEnabled(false);
        jcbNivel.setEnabled(false);
        jcbNomeEntidade.setEnabled(false);
        jcbSerie.setEnabled(false);
        jcbSexo.setEnabled(false);
        jcbTurno.setEnabled(false);
        jrbCmei.setEnabled(false);
        jrbEscola.setEnabled(false);
        jrbOutros.setEnabled(false);
        jDateChooserDataCadastro.setEnabled(false);
        jDateChooserDataNascimento.setEnabled(false);

    }

    public void abilitaBotoes() {

        jbCancelar.setEnabled(true);
        jbBuscar.setEnabled(true);
        jbImprimir.setEnabled(true);
        jbImprimirCarteirinha.setEnabled(true);

        if (cadastrarAluno == true) {
            jbSalvar.setEnabled(false);
            jbExcluir.setEnabled(true);
            jbAlterar.setEnabled(true);
        } else {
            jbSalvar.setEnabled(false);
            jbExcluir.setEnabled(false);
            jbAlterar.setEnabled(false);
        }

    }

    public void desabilitaBotoes() {

        jbCancelar.setEnabled(true);
        jbBuscar.setEnabled(true);
        jbImprimir.setEnabled(false);
        jbImprimirCarteirinha.setEnabled(false);

        if (cadastrarAluno == true) {
            jbSalvar.setEnabled(true);
            jbExcluir.setEnabled(false);
            jbAlterar.setEnabled(false);
        } else {
            jbSalvar.setEnabled(false);
            jbExcluir.setEnabled(false);
            jbAlterar.setEnabled(false);
        }

    }

    public void preencheComboBloco() {
        
        iniciaControleLote();
        iniciaDao();
        iniciaLote();
        
        List listaBlocos = new ArrayList();

        jcbBloco.removeAllItems();

        listaBlocos = dao.listarBlocos("", controleLote.getCodigoLote(controleLote.getNomeLote(jcbLote.getSelectedItem().toString())));

        for (int i = 0; i < listaBlocos.size(); i++) {
            iniciaBloco();
            bloco = (Bloco) listaBlocos.get(i);
            jcbBloco.addItem("BLOCO " + bloco.getNumeroBloco() + " - " + bloco.getNomeBloco());
            bloco = null;
        }
        
        jcbBloco.setSelectedIndex(0);
    }
    
    public void preencheComboCmeis() {

        iniciaDao();
        List listaCmeis = new ArrayList();

        jcbNomeEntidade.removeAllItems();
        jcbNomeEntidade.addItem("");

        listaCmeis = dao.listarCmeis(0, "", "");

        for (int i = 0; i < listaCmeis.size(); i++) {
            iniciaCmei();
            cmei = (Cmei) listaCmeis.get(i);
            jcbNomeEntidade.addItem(cmei.getNomeCmei());
            cmei = null;
        }
    }

    public void preencheComboEscolas() {

        iniciaDao();
        List listaEscolas = new ArrayList();

        jcbNomeEntidade.removeAllItems();
        jcbNomeEntidade.addItem("");

        listaEscolas = dao.listarEscolas(0, "", "");

        for (int i = 0; i < listaEscolas.size(); i++) {
            iniciaEscola();
            escola = (Escola) listaEscolas.get(i);
            jcbNomeEntidade.addItem(escola.getNomeEscola());
            escola = null;
        }

    }
    
    public void preencheComboLinha() {
        
        iniciaControleBloco();
        iniciaDao();
        iniciaBloco();
        
        List listaLinhas = new ArrayList();

        jcbLinha.removeAllItems();

        listaLinhas = dao.listarLinhas(0, controleBloco.getCodigoBloco(controleBloco.getNomeBloco(jcbBloco.getSelectedItem().toString())), "");

        for (int i = 0; i < listaLinhas.size(); i++) {
            iniciaLinha();
            linha = (Linha) listaLinhas.get(i);
            jcbLinha.addItem(linha.getNumeroLinha());
            linha = null;
        }
     
        jcbLinha.setSelectedIndex(0);
        
    }
    
    public void preencheComboLote() {
        
        iniciaDao();
        List listaLotes = new ArrayList();

        jcbLote.removeAllItems();

        listaLotes = dao.listarLotes("", "");

        for (int i = 0; i < listaLotes.size(); i++) {
            iniciaLote();
            lote = (Lote) listaLotes.get(i);
            jcbLote.addItem("LOTE " + lote.getNumeroLote() + " - " + lote.getNomeLote());
            lote = null;
        }
     
        jcbLote.setSelectedIndex(0);
    }
    
    public void preencheComboNivel() {

        if (jrbCmei.isSelected()) {

            jcbNivel.removeAllItems();
            jcbNivel.addItem("EDUCAÇÃO ESPECIAL");
            jcbNivel.addItem("EDUCAÇÃO INFANTIL");
            jcbNivel.setSelectedIndex(1);

            jcbSerie.removeAllItems();
            jcbSerie.addItem("BERÇÁRIO");
            jcbSerie.addItem("MATERNAL I");
            jcbSerie.addItem("MATERNAL II");
            jcbSerie.addItem("PRÉ I");
            jcbSerie.addItem("PRÉ II");
            jcbSerie.setSelectedIndex(0);

        } else if (jrbEscola.isSelected()) {

            jcbNivel.removeAllItems();
            jcbNivel.addItem("EDUCAÇÃO ESPECIAL");
            jcbNivel.addItem("ENSINO FUNDAMENTAL");
            jcbNivel.addItem("EJA");
            jcbNivel.setSelectedIndex(1);

            jcbSerie.removeAllItems();
            jcbSerie.addItem("1ª");
            jcbSerie.addItem("1º");
            jcbSerie.addItem("2ª");
            jcbSerie.addItem("2º");
            jcbSerie.addItem("3ª");
            jcbSerie.addItem("3º");
            jcbSerie.addItem("4ª");
            jcbSerie.addItem("4º");
            jcbSerie.addItem("5º");
            jcbSerie.setSelectedIndex(0);

        } else if (jrbOutros.isSelected()) {

            jcbNivel.removeAllItems();
            jcbNivel.addItem("EDUCAÇÃO ESPECIAL");
            jcbNivel.addItem("ENSINO MÉDIO");
            jcbNivel.addItem("ENSINO SUPERIOR");
            jcbNivel.addItem("EJA");
            jcbNivel.setSelectedIndex(1);

            preencheComboSerie();

        }

    }

    public void preencheComboOutros() {

        iniciaDao();
        List listaOutros = new ArrayList();

        jcbNomeEntidade.removeAllItems();
        jcbNomeEntidade.addItem("");

        listaOutros = dao.listarOutros(0, "", "");

        for (int i = 0; i < listaOutros.size(); i++) {
            iniciaOutro();
            outro = (Outro) listaOutros.get(i);
            jcbNomeEntidade.addItem(outro.getNomeOutro());
            outro = null;
        }

    }
    
    public void preencheComboSerie() {

        if (jcbNivel.getSelectedItem().equals("ENSINO SUPERIOR")) {

            jcbSerie.removeAllItems();
            jcbSerie.addItem("1º");
            jcbSerie.addItem("2º");
            jcbSerie.addItem("3º");
            jcbSerie.addItem("4º");
            jcbSerie.addItem("5º");
            jcbSerie.setSelectedIndex(0);

        } else if (jrbOutros.isSelected()) {

            jcbSerie.removeAllItems();
            jcbSerie.addItem("6º");
            jcbSerie.addItem("7º");
            jcbSerie.addItem("8º");
            jcbSerie.addItem("9º");
            jcbSerie.addItem("1º");
            jcbSerie.addItem("2º");
            jcbSerie.addItem("3º");
            jcbSerie.setSelectedIndex(0);

        }

    }


//Geradores, Validadores===========================================================================================================================================
    public void iniciaAluno() {
        
        if (aluno == null) {
            aluno = new Aluno();
        }
        
    }
    
    public void iniciaBloco() {
        
        if (bloco == null) {
            bloco = new Bloco();
        }
        
    }
    
    public void iniciaCadastroEndereco() {
        
        if (jfCadastroEndereco == null) {
            jfCadastroEndereco = new JfCadastroEndereco();
        }
         
    }
    
    public void iniciaClasseGeral() {
        
        if (classeGeral == null) {
            classeGeral = new ClasseGeral();
        }
        
    }
    
    public void iniciaCmei() {
        
        if (cmei == null) {
            cmei = new Cmei();
        }
        
    }
    
    public void iniciaControleBloco() {
        
        if (controleBloco == null) {
            controleBloco = new ControleBloco();
        }
        
    }
    
    public void iniciaControleCmei() {
        
        if (controleCmei == null) {
            controleCmei = new ControleCmei();
        }
        
    }
    
    public void iniciaControleEscola() {
        
        if (controleEscola == null) {
            controleEscola = new ControleEscola();
        }
        
    }
    
    public void iniciaControleLinha() {
        
        if (controleLinha == null) {
            controleLinha = new ControleLinha();
        }
        
    }
    
    public void iniciaControleLote() {
        
        if (controleLote == null) {
            controleLote = new ControleLote();
        }
        
    }
    
    public void iniciaControleOutro() {
        
        if (controleOutro == null) {
            controleOutro = new ControleOutro();
        }
        
    }
    
    public void iniciaDao() {

        if (dao == null) {
            dao = new DAO();
        }

    }
    
    public void iniciaEndereco() {
        
        if (endereco == null) {
            endereco = new Endereco();
        }
        
    }
    
    public void iniciaEscola() {
        
        if (escola == null) {
            escola = new Escola();
        }
        
    }
    
    public void iniciaLinha() {
        
        if (linha == null) {
            linha = new Linha();
        }
        
    }
    
    public void iniciaLog() {
        
        if (geraLog == null) {
            geraLog = new Log();
        }
        
    }
    
    public void iniciaLote() {
        
        if (lote == null) {
            lote = new Lote();
        }
        
    }
    
    public void iniciaOutro() {
        
        if (outro == null) {
            outro = new Outro();
        }
        
    }
    
//Getters and Setters===========================================================================================================================================
    public Date getDateHoje() {

        GregorianCalendar calendar = new GregorianCalendar();
        Date data = calendar.getTime();

        return data;

    }

    public int getCodigoUsuario() {
        return codigoUsuario;
    }

    public void setCodigoUsuario(int codigoUsuario) {
        this.codigoUsuario = codigoUsuario;
        getPermissoes();
        desabilitaBotoes();
    }

    public void getPermissoes() {
        Permissoes permissoes;
        iniciaDao();

        permissoes = (Permissoes) dao.buscaPermissoes(codigoUsuario);

        cadastrarAluno = permissoes.isCadastrarAluno();
    }

    public void setAlunoBuscado(Aluno alunoBuscado) {

        if (alunoBuscado == null) {

        } else {
            
            iniciaAluno();
            
            switch(alunoBuscado.getTipoEntidade()) {
                
                case "ESCOLA":
                    jrbEscola.setSelected(true);
                    preencheComboEscolas();
                    preencheComboNivel();
                    tipoEntid = "ESCOLA";
                    iniciaEscola();
                    escola = (Escola) alunoBuscado.getEscola();
                    jcbNomeEntidade.setSelectedItem(escola.getNomeEscola());
                    break;
                
                case "CMEI":
                    jrbCmei.setSelected(true);
                    preencheComboCmeis();
                    preencheComboNivel();
                    tipoEntid = "CMEI";
                    iniciaCmei();
                    cmei = (Cmei) alunoBuscado.getCmei();
                    jcbNomeEntidade.setSelectedItem(cmei.getNomeCmei());
                    break;
                    
                case "OUTROS":
                    jrbOutros.setSelected(true);
                    preencheComboOutros();
                    preencheComboNivel();
                    tipoEntid = "OUTROS";
                    iniciaOutro();
                    outro = (Outro) alunoBuscado.getOutro();
                    jcbNomeEntidade.setSelectedItem(outro.getNomeOutro());
                    break;
                    
            }
            
            jtfFiliacaoMae.setText(alunoBuscado.getFiliacaoMae());
            jtfFiliacaoPai.setText(alunoBuscado.getFiliacaoPai());
            jtfNomeAluno.setText(alunoBuscado.getNomeAluno());
            jDateChooserDataCadastro.setDate(alunoBuscado.getDataCadastro());
            jDateChooserDataNascimento.setDate(alunoBuscado.getDataNascimento());
            
            jcbNivel.setSelectedItem(alunoBuscado.getNivel());
            jcbSerie.setSelectedItem(alunoBuscado.getSerie());
            jcbTurno.setSelectedItem(alunoBuscado.getTurno());
            
            jcbSexo.setSelectedItem(alunoBuscado.getSexo());
            jcbLote.setSelectedItem(alunoBuscado.getLote().getNomeLote());
            jcbBloco.setSelectedItem(alunoBuscado.getBloco().getNomeBloco());
            jcbLinha.setSelectedItem(alunoBuscado.getLinha().getNumeroLinha());
            
            codigo = alunoBuscado.getCodigoAluno();
            aluno.setCodigoAluno(codigo);
            
            abilitaBotoes();
            desabilitaCampos();

        }

    }

//Metodos DAO===========================================================================================================================================
    public void salvar() {

        iniciaAluno();
        iniciaBloco();
        iniciaControleBloco();
        iniciaControleLinha();
        iniciaControleLote();
        iniciaDao();
        iniciaLinha();
        iniciaLote();

        bloco = (Bloco) dao.busca(bloco, controleBloco.getCodigoBloco(controleBloco.getNomeBloco(jcbBloco.getSelectedItem().toString())));
        linha = (Linha) dao.busca(linha, controleLinha.getCodigoLinha(Integer.valueOf(jcbLinha.getSelectedItem().toString()), bloco.getCodigoBloco()));
        lote = (Lote) dao.busca(lote, controleLote.getCodigoLote(controleLote.getNomeLote(jcbLote.getSelectedItem().toString())));
        
        aluno.setBloco(bloco);
        aluno.setDataCadastro(jDateChooserDataCadastro.getDate());
        aluno.setDataNascimento(jDateChooserDataNascimento.getDate());
        aluno.setFiliacaoMae(jtfFiliacaoMae.getText());
        aluno.setFiliacaoPai(jtfFiliacaoPai.getText());
        aluno.setInformacoes(jtaInformacoes.getText());
        aluno.setLinha(linha);
        aluno.setLote(lote);
        aluno.setNivel(jcbNivel.getSelectedItem().toString());
        aluno.setNomeAluno(jtfNomeAluno.getText());
        
        switch (tipoEntid) {
            
            case "ESCOLA":
                iniciaControleEscola();
                iniciaEscola();
                escola = (Escola) dao.busca(escola, controleEscola.getCodigoEscola(jcbNomeEntidade.getSelectedItem().toString()));
                dao.encerraSessao();
                aluno.setEscola(escola);
                break;
                
            case "CMEI":
                iniciaCmei();
                iniciaControleCmei();
                cmei = (Cmei) dao.busca(cmei, controleCmei.getCodigoCmei(jcbNomeEntidade.getSelectedItem().toString()));
                dao.encerraSessao();
                aluno.setCmei(cmei);
                break;
                
            case "OUTROS":
                iniciaControleOutro();
                iniciaOutro();
                outro = (Outro) dao.busca(outro, controleOutro.getCodigoOutro(jcbNomeEntidade.getSelectedItem().toString()));
                dao.encerraSessao();
                aluno.setOutro(outro);
                break;
            
        }
        
        aluno.setSerie(jcbSerie.getSelectedItem().toString());
        aluno.setSexo(jcbSexo.getSelectedItem().toString());
        aluno.setTipoEntidade(tipoEntid);
        aluno.setTurno(jcbTurno.getSelectedItem().toString());
        
        try {
            iniciaLog();
            geraLog.criaLog(codigoUsuario, "Cadastro Aluno", "Tentou Salvar o aluno " + aluno.getNomeAluno());
        } catch (IOException ex) {
            Logger.getLogger(JfPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        dao.inserir(aluno, 7, codigoUsuario);
        cancelar();
        
    }

    public void atualizar() {

        iniciaAluno();
        iniciaBloco();
        iniciaControleBloco();
        iniciaControleLinha();
        iniciaControleLote();
        iniciaDao();
        iniciaLinha();
        iniciaLote();

        bloco = (Bloco) dao.busca(bloco, controleBloco.getCodigoBloco(controleBloco.getNomeBloco(jcbBloco.getSelectedItem().toString())));
        linha = (Linha) dao.busca(linha, controleLinha.getCodigoLinha(Integer.valueOf(jcbLinha.getSelectedItem().toString()), bloco.getCodigoBloco()));
        lote = (Lote) dao.busca(lote, controleLote.getCodigoLote(controleLote.getNomeLote(jcbLote.getSelectedItem().toString())));

        aluno.setBloco(bloco);
        aluno.setDataCadastro(jDateChooserDataCadastro.getDate());
        aluno.setDataNascimento(jDateChooserDataNascimento.getDate());
        aluno.setFiliacaoMae(jtfFiliacaoMae.getText());
        aluno.setFiliacaoPai(jtfFiliacaoPai.getText());
        aluno.setInformacoes(jtaInformacoes.getText());
        aluno.setLinha(linha);
        aluno.setLote(lote);
        aluno.setNivel(jcbNivel.getSelectedItem().toString());
        aluno.setNomeAluno(jtfNomeAluno.getText());
        
        switch (tipoEntid) {
            
            case "ESCOLA":
                iniciaControleEscola();
                iniciaEscola();
                escola = (Escola) dao.busca(escola, controleEscola.getCodigoEscola(jcbNomeEntidade.getSelectedItem().toString()));
                dao.encerraSessao();
                aluno.setEscola(escola);
                break;
                
            case "CMEI":
                iniciaCmei();
                iniciaControleCmei();
                cmei = (Cmei) dao.busca(cmei, controleCmei.getCodigoCmei(jcbNomeEntidade.getSelectedItem().toString()));
                dao.encerraSessao();
                aluno.setCmei(cmei);
                break;
                
            case "OUTROS":
                iniciaControleOutro();
                iniciaOutro();
                outro = (Outro) dao.busca(outro, controleOutro.getCodigoOutro(jcbNomeEntidade.getSelectedItem().toString()));
                dao.encerraSessao();
                aluno.setOutro(outro);
                break;
            
        }
        
        aluno.setSerie(jcbSerie.getSelectedItem().toString());
        aluno.setSexo(jcbSexo.getSelectedItem().toString());
        aluno.setTipoEntidade(tipoEntid);
        aluno.setTurno(jcbTurno.getSelectedItem().toString());

        try {
            iniciaLog();
            geraLog.criaLog(codigoUsuario, "Cadastro Aluno", "Tentou atualizar o aluno " + aluno.getNomeAluno() + " de código " + aluno.getCodigoAluno());
        } catch (IOException ex) {
            Logger.getLogger(JfPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        dao.atualizar(aluno, 7, codigoUsuario);
        cancelar();

    }

    public void excluir() {

        iniciaAluno();
        iniciaClasseGeral();

         if (classeGeral.msgConfirma("Você tem Certeza que Deseja excluir o Cadastro do Aluno?")) {

            iniciaDao();
            
            try {
                iniciaLog();
                geraLog.criaLog(codigoUsuario, "Cadastro Aluno", "Tentou excluir o aluno " + aluno.getNomeAluno() + " de código " + aluno.getCodigoAluno());
            } catch (IOException ex) {
                Logger.getLogger(JfPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            dao.excluir(aluno, codigoUsuario);
            cancelar();

        }

    }

}
