/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * jfPrincipal.java
 *
 * Created on 27/01/2010, 09:02:28
 */
package visual;

import conexao.Conexao;
import controlador.ClasseGeral;
import controlador.ControleVersao;
import controlador.EnviaEmail;
import controlador.Log;
import controlador.TraySurgi;
import controlador.ValidaData;
import dao.DAO;
import excecoes.ExcCadastro;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UIManager.LookAndFeelInfo;
import modelo.Ata;
import modelo.Permissoes;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author luiz
 */
public class JfPrincipal extends javax.swing.JFrame {

    private static ControleVersao versao = new ControleVersao();
    private static JfPrincipal jfp;
    private Ata ata;
    private ClasseGeral classeGeral;
    private DAO dao;
    private EnviaEmail enviaEmail;
    private Log geraLog;
    private JfAgendamento jfAgendamento;
    private JfAgendamentoEquipamento jfAgendamentoEquipamento;
    private JfAgendamentoOficio jfAgendamentoOficio;
    private JfAjuda jfAjuda;
    private JfAta jfAta;
    private JfPontoDigital jfPontoDigital;
    private JfCadastroAluno jfCadastroAluno;
    private JfCadastroBlocoTransporte jfCadastroBlocoTransporte;
    private JfCadastroCartucho jfCadastroCartucho;
    private JfCadastroCmei jfCadastroCmei;
    private JfCadastroDepartamentoDivisaoSetor jfCadastroDepartamentoDivisaoSetor;
    private JfCadastroEscola jfCadastroEscola;
    private JfCadastroOutros jfCadastroOutros;
    private JfCadastroUsuario jfCadastroUsuario;
    private JfCadastroEquipamento jfCadastroEquipamento;
    private JfCadastroEquipamentosEntidades jfCadastroEquipamentosEntidades;
    private JfCadastroLinhaTransporte jfCadastroLinhaTransporte;
    private JfCadastroLoteTransporte jfCadastroLoteTransporte;
    private JfCadastroModeloCartucho jfCadastroModeloCartucho;
    private JfCadastroTipoEquipamento jfCadastroTipoEquipamento;
    private JfEdital jfEdital;
    private JfEntregaRemanufaturados jfEntregaRemanufaturados;
    private JfImpressosAgendamento jfImpressosAgendamento;
    private JfImpressosRecarga jfImpressosRecarga;
    private JfImpressosEscola jfImpressosEscola;
    private JfImpressosCmei jfImpressosCmei;
    private JfImpressosCracha jfImpressosCracha;
    private JfImpressosCrachaCme jfImpressosCrachaCme;
    private JfImpressosCrachaComae jfImpressosCrachaComae;
    private JfImpressosLog jfImpressosLog;
    private JfImpressosOutros jfImpressosOutros;
    private JfImpressosEquipamentos jfImpressosEquipamentos;
    private JfImpressosPontoDigital jfImpressosPontoDigital;
    private JfInstrucaoNormativa jfInstrucaoNormativa;
    private JfLogin jfLogin;
    private JfRecarga jfRecarga;
    private JfResolucao jfResolucao;
    private JfSolicitacaoRecarga jfSolicitacaoRecarga;
    private JfSolicitacaoRemanufatura jfSolicitacaoRemanufatura;
    private JfOficio jfOficio;
    private JfPortaria jfPortaria;
    private JfSobre jfSobre;
    private TraySurgi traySurgi;
    private ValidaData validaData;
    
    private JasperPrint jPrint;
    private JasperViewer jViewer;
    
    private int codigoUsuario;
    private String tipoContraSenha;
    private boolean gerarNumeracaoAtas;

    /**
     * Creates new form jfPrincipal
     */
    public JfPrincipal() {
        super("SURGI - Sistema Unificado para Registro e Gerenciamento de Informações - " + versao.getVersao() + " - " + versao.getAno());
        initComponents();

        //Altera icone na barra de titulo
        Toolkit kit = Toolkit.getDefaultToolkit();
        Image img = kit.getImage("C:/SURGI/imagens/SURGI32x32.png");
        this.setIconImage(img);

        //maximiza tela
        this.setExtendedState(MAXIMIZED_BOTH);

        //centraliza tela
        setSize(getWidth(), getHeight());
        setLocationRelativeTo(null);

        jlbVersao.setText(versao.getVersao());
        iniciaJfLogin();
        jfLogin.fechar();
        jfLogin = null;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpAlteracoesSistema = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jlbVersao = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jmbPrincipal = new javax.swing.JMenuBar();
        jmArquivo = new javax.swing.JMenu();
        jmiSair = new javax.swing.JMenuItem();
        jmCadastros = new javax.swing.JMenu();
        jmiEscola = new javax.swing.JMenuItem();
        jmiCmei = new javax.swing.JMenuItem();
        jmiOutros = new javax.swing.JMenuItem();
        jmiUsuario = new javax.swing.JMenuItem();
        jmiCadEntidade = new javax.swing.JMenuItem();
        jmiCadEquipamentoEntidade = new javax.swing.JMenuItem();
        jmiCadModeloCartucho = new javax.swing.JMenuItem();
        jmiCadCartucho = new javax.swing.JMenuItem();
        jmiCadTipoEquipamento = new javax.swing.JMenuItem();
        jmiCadDepartamentoDivisaoSetor = new javax.swing.JMenuItem();
        jmAgendamento = new javax.swing.JMenu();
        jmiAgendamento = new javax.swing.JMenuItem();
        jmiAgendamentoPontoDigital = new javax.swing.JMenuItem();
        jmiAgendamentoOficio = new javax.swing.JMenuItem();
        jmiMultimidia = new javax.swing.JMenuItem();
        jmOficios = new javax.swing.JMenu();
        jmiNumeracaoOficiosSemedGeral = new javax.swing.JMenuItem();
        jmPortarias = new javax.swing.JMenu();
        jmiNumeracaoPortariasSemedGeral = new javax.swing.JMenuItem();
        jmResolucao = new javax.swing.JMenu();
        jmiNumeracaoResolucaoSemedGeral = new javax.swing.JMenuItem();
        jmEdital = new javax.swing.JMenu();
        jmiNumeracaoEditalSemedGeral = new javax.swing.JMenuItem();
        jmInstrucaoNormativa = new javax.swing.JMenu();
        jmiNumeracaoInstrucaoNormativaSemedGeral = new javax.swing.JMenuItem();
        jmAta = new javax.swing.JMenu();
        jmiNumeracaoAta = new javax.swing.JMenuItem();
        jmRecarga = new javax.swing.JMenu();
        jmiRecarga = new javax.swing.JMenuItem();
        jmiSolicitacaoRecarga = new javax.swing.JMenuItem();
        jmiSolicitacaoRemanufatura = new javax.swing.JMenuItem();
        jmiProtocoloEntregaRemanufaturados = new javax.swing.JMenuItem();
        jmTransporte = new javax.swing.JMenu();
        jmiLote = new javax.swing.JMenuItem();
        jmiBloco = new javax.swing.JMenuItem();
        jmiLinha = new javax.swing.JMenuItem();
        jmiAluno = new javax.swing.JMenuItem();
        jmImpressos = new javax.swing.JMenu();
        jmiImprAgendamento = new javax.swing.JMenuItem();
        jmiImprCmeis = new javax.swing.JMenuItem();
        jmiImprCrachas = new javax.swing.JMenu();
        jmiCrachaCme = new javax.swing.JMenuItem();
        jmiCrachaComae = new javax.swing.JMenuItem();
        jmiCrachaSemed = new javax.swing.JMenuItem();
        jmiImprMultimidia = new javax.swing.JMenuItem();
        jmiImprEscolas = new javax.swing.JMenuItem();
        jmiImprLog = new javax.swing.JMenuItem();
        jmiImprOutros = new javax.swing.JMenuItem();
        jmiImprPontoDigital = new javax.swing.JMenuItem();
        jmiImprRecarga = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jmSobre = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jmiSobre = new javax.swing.JMenuItem();
        jmTrayMinimizar = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jpAlteracoesSistema.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());
        jpAlteracoesSistema.setToolTipText("Clique no painel para oculta-lo!");
        jpAlteracoesSistema.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpAlteracoesSistemaMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("A versão ");

        jlbVersao.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jlbVersao.setText("versão");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("traz de novo os itens abaixo:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setText("1 - Numeração para Instruções Normativas;");

        javax.swing.GroupLayout jpAlteracoesSistemaLayout = new javax.swing.GroupLayout(jpAlteracoesSistema);
        jpAlteracoesSistema.setLayout(jpAlteracoesSistemaLayout);
        jpAlteracoesSistemaLayout.setHorizontalGroup(
            jpAlteracoesSistemaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpAlteracoesSistemaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpAlteracoesSistemaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpAlteracoesSistemaLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlbVersao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpAlteracoesSistemaLayout.createSequentialGroup()
                        .addGap(0, 38, Short.MAX_VALUE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40))))
        );
        jpAlteracoesSistemaLayout.setVerticalGroup(
            jpAlteracoesSistemaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpAlteracoesSistemaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpAlteracoesSistemaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jlbVersao)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addContainerGap(357, Short.MAX_VALUE))
        );

        jmArquivo.setText("Arquivo");

        jmiSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Sair.png"))); // NOI18N
        jmiSair.setText("Sair");
        jmiSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiSairActionPerformed(evt);
            }
        });
        jmArquivo.add(jmiSair);

        jmbPrincipal.add(jmArquivo);

        jmCadastros.setText("Cadastros");

        jmiEscola.setText("Escola");
        jmiEscola.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiEscolaActionPerformed(evt);
            }
        });
        jmCadastros.add(jmiEscola);

        jmiCmei.setText("Cmei");
        jmiCmei.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCmeiActionPerformed(evt);
            }
        });
        jmCadastros.add(jmiCmei);

        jmiOutros.setText("Outros");
        jmiOutros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiOutrosActionPerformed(evt);
            }
        });
        jmCadastros.add(jmiOutros);

        jmiUsuario.setText("Usuário");
        jmiUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiUsuarioActionPerformed(evt);
            }
        });
        jmCadastros.add(jmiUsuario);

        jmiCadEntidade.setText("Equipamentos");
        jmiCadEntidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCadEntidadeActionPerformed(evt);
            }
        });
        jmCadastros.add(jmiCadEntidade);

        jmiCadEquipamentoEntidade.setText("Equipamentos Entidade");
        jmiCadEquipamentoEntidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCadEquipamentoEntidadeActionPerformed(evt);
            }
        });
        jmCadastros.add(jmiCadEquipamentoEntidade);

        jmiCadModeloCartucho.setText("Modelo Cartucho");
        jmiCadModeloCartucho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCadModeloCartuchoActionPerformed(evt);
            }
        });
        jmCadastros.add(jmiCadModeloCartucho);

        jmiCadCartucho.setText("Cartucho");
        jmiCadCartucho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCadCartuchoActionPerformed(evt);
            }
        });
        jmCadastros.add(jmiCadCartucho);

        jmiCadTipoEquipamento.setText("Tipo de Equipamento");
        jmiCadTipoEquipamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCadTipoEquipamentoActionPerformed(evt);
            }
        });
        jmCadastros.add(jmiCadTipoEquipamento);

        jmiCadDepartamentoDivisaoSetor.setText("Departamento/Divisão/Setor");
        jmiCadDepartamentoDivisaoSetor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCadDepartamentoDivisaoSetorActionPerformed(evt);
            }
        });
        jmCadastros.add(jmiCadDepartamentoDivisaoSetor);

        jmbPrincipal.add(jmCadastros);

        jmAgendamento.setText("Agendamento");

        jmiAgendamento.setText("Agendamento");
        jmiAgendamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAgendamentoActionPerformed(evt);
            }
        });
        jmAgendamento.add(jmiAgendamento);

        jmiAgendamentoPontoDigital.setText("Ponto Digital");
        jmiAgendamentoPontoDigital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAgendamentoPontoDigitalActionPerformed(evt);
            }
        });
        jmAgendamento.add(jmiAgendamentoPontoDigital);

        jmiAgendamentoOficio.setText("Ofício");
        jmiAgendamentoOficio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAgendamentoOficioActionPerformed(evt);
            }
        });
        jmAgendamento.add(jmiAgendamentoOficio);

        jmiMultimidia.setText("Equipamento");
        jmiMultimidia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiMultimidiaActionPerformed(evt);
            }
        });
        jmAgendamento.add(jmiMultimidia);

        jmbPrincipal.add(jmAgendamento);

        jmOficios.setText("Ofícios / CI");

        jmiNumeracaoOficiosSemedGeral.setText("Numeração SEMED Geral");
        jmiNumeracaoOficiosSemedGeral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiNumeracaoOficiosSemedGeralActionPerformed(evt);
            }
        });
        jmOficios.add(jmiNumeracaoOficiosSemedGeral);

        jmbPrincipal.add(jmOficios);

        jmPortarias.setText("Portarias");

        jmiNumeracaoPortariasSemedGeral.setText("Numeração SEMED Geral");
        jmiNumeracaoPortariasSemedGeral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiNumeracaoPortariasSemedGeralActionPerformed(evt);
            }
        });
        jmPortarias.add(jmiNumeracaoPortariasSemedGeral);

        jmbPrincipal.add(jmPortarias);

        jmResolucao.setText("Resolução");

        jmiNumeracaoResolucaoSemedGeral.setText("Numeração SEMED Geral");
        jmiNumeracaoResolucaoSemedGeral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiNumeracaoResolucaoSemedGeralActionPerformed(evt);
            }
        });
        jmResolucao.add(jmiNumeracaoResolucaoSemedGeral);

        jmbPrincipal.add(jmResolucao);

        jmEdital.setText("Edital");

        jmiNumeracaoEditalSemedGeral.setText("Numeração SEMED Geral");
        jmiNumeracaoEditalSemedGeral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiNumeracaoEditalSemedGeralActionPerformed(evt);
            }
        });
        jmEdital.add(jmiNumeracaoEditalSemedGeral);

        jmbPrincipal.add(jmEdital);

        jmInstrucaoNormativa.setText("Instrução Normativa");

        jmiNumeracaoInstrucaoNormativaSemedGeral.setText("Numeração SEMED Geral");
        jmiNumeracaoInstrucaoNormativaSemedGeral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiNumeracaoInstrucaoNormativaSemedGeralActionPerformed(evt);
            }
        });
        jmInstrucaoNormativa.add(jmiNumeracaoInstrucaoNormativaSemedGeral);

        jmbPrincipal.add(jmInstrucaoNormativa);

        jmAta.setText("Ata");

        jmiNumeracaoAta.setText("Numeração SEMED Geral");
        jmiNumeracaoAta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiNumeracaoAtaActionPerformed(evt);
            }
        });
        jmAta.add(jmiNumeracaoAta);

        jmbPrincipal.add(jmAta);

        jmRecarga.setText("Recarga");

        jmiRecarga.setText("Recarga");
        jmiRecarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiRecargaActionPerformed(evt);
            }
        });
        jmRecarga.add(jmiRecarga);

        jmiSolicitacaoRecarga.setText("Solicitação de Recarga (Escola)");
        jmiSolicitacaoRecarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiSolicitacaoRecargaActionPerformed(evt);
            }
        });
        jmRecarga.add(jmiSolicitacaoRecarga);

        jmiSolicitacaoRemanufatura.setText("Solicitação de Remanufatura (Empresa)");
        jmiSolicitacaoRemanufatura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiSolicitacaoRemanufaturaActionPerformed(evt);
            }
        });
        jmRecarga.add(jmiSolicitacaoRemanufatura);

        jmiProtocoloEntregaRemanufaturados.setText("Protocolo de Entrega de Remanufaturados");
        jmiProtocoloEntregaRemanufaturados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiProtocoloEntregaRemanufaturadosActionPerformed(evt);
            }
        });
        jmRecarga.add(jmiProtocoloEntregaRemanufaturados);

        jmbPrincipal.add(jmRecarga);

        jmTransporte.setText("Transporte");

        jmiLote.setText("Lote");
        jmiLote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiLoteActionPerformed(evt);
            }
        });
        jmTransporte.add(jmiLote);

        jmiBloco.setText("Bloco");
        jmiBloco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiBlocoActionPerformed(evt);
            }
        });
        jmTransporte.add(jmiBloco);

        jmiLinha.setText("Linha");
        jmiLinha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiLinhaActionPerformed(evt);
            }
        });
        jmTransporte.add(jmiLinha);

        jmiAluno.setText("Aluno");
        jmiAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAlunoActionPerformed(evt);
            }
        });
        jmTransporte.add(jmiAluno);

        jmbPrincipal.add(jmTransporte);

        jmImpressos.setText("Impressos");

        jmiImprAgendamento.setText("Agendamentos");
        jmiImprAgendamento.setActionCommand("Agendamento");
        jmiImprAgendamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiImprAgendamentoActionPerformed(evt);
            }
        });
        jmImpressos.add(jmiImprAgendamento);

        jmiImprCmeis.setText("Cmeis");
        jmiImprCmeis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiImprCmeisActionPerformed(evt);
            }
        });
        jmImpressos.add(jmiImprCmeis);

        jmiImprCrachas.setText("Crachás");

        jmiCrachaCme.setText("CME");
        jmiCrachaCme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCrachaCmeActionPerformed(evt);
            }
        });
        jmiImprCrachas.add(jmiCrachaCme);

        jmiCrachaComae.setText("COMAE");
        jmiCrachaComae.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCrachaComaeActionPerformed(evt);
            }
        });
        jmiImprCrachas.add(jmiCrachaComae);

        jmiCrachaSemed.setText("SEMED");
        jmiCrachaSemed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCrachaSemedActionPerformed(evt);
            }
        });
        jmiImprCrachas.add(jmiCrachaSemed);

        jmImpressos.add(jmiImprCrachas);

        jmiImprMultimidia.setText("Equipamento");
        jmiImprMultimidia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiImprMultimidiaActionPerformed(evt);
            }
        });
        jmImpressos.add(jmiImprMultimidia);

        jmiImprEscolas.setText("Escolas");
        jmiImprEscolas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiImprEscolasActionPerformed(evt);
            }
        });
        jmImpressos.add(jmiImprEscolas);

        jmiImprLog.setText("Log");
        jmiImprLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiImprLogActionPerformed(evt);
            }
        });
        jmImpressos.add(jmiImprLog);

        jmiImprOutros.setText("Outros");
        jmiImprOutros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiImprOutrosActionPerformed(evt);
            }
        });
        jmImpressos.add(jmiImprOutros);

        jmiImprPontoDigital.setText("Ponto Digital");
        jmiImprPontoDigital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiImprPontoDigitalActionPerformed(evt);
            }
        });
        jmImpressos.add(jmiImprPontoDigital);

        jmiImprRecarga.setText("Recarga");
        jmiImprRecarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiImprRecargaActionPerformed(evt);
            }
        });
        jmImpressos.add(jmiImprRecarga);

        jMenu1.setText("Termos");

        jMenuItem4.setText("Termo de Manutenção de Equipamento");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jmImpressos.add(jMenu1);

        jmbPrincipal.add(jmImpressos);

        jmSobre.setText("Sobre");

        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/ajuda03.png"))); // NOI18N
        jMenuItem1.setText("Ajuda");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jmSobre.add(jMenuItem1);

        jMenuItem2.setText("Painel de Alterações");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jmSobre.add(jMenuItem2);

        jmiSobre.setText("Sobre");
        jmiSobre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiSobreActionPerformed(evt);
            }
        });
        jmSobre.add(jmiSobre);

        jmTrayMinimizar.setText("jMenuItem5");
        jmTrayMinimizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmTrayMinimizarActionPerformed(evt);
            }
        });
        jmSobre.add(jmTrayMinimizar);

        jmbPrincipal.add(jmSobre);

        setJMenuBar(jmbPrincipal);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpAlteracoesSistema, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(604, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpAlteracoesSistema, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(251, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jmiOutrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiOutrosActionPerformed
        if (jfCadastroOutros == null) {
            jfCadastroOutros = new JfCadastroOutros();
        }

        jfCadastroOutros.setCodigoUsuario(codigoUsuario);
        jfCadastroOutros.setVisible(true);

        try {
            iniciaLog();
            geraLog.criaLog(codigoUsuario, "Cadastro Outros", "Abriu Janela");
        } catch (IOException ex) {
            Logger.getLogger(JfLogin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jmiOutrosActionPerformed

    private void jmiEscolaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiEscolaActionPerformed
        if (jfCadastroEscola == null) {
            jfCadastroEscola = new JfCadastroEscola();
        }

        jfCadastroEscola.setCodigoUsuario(codigoUsuario);
        jfCadastroEscola.setVisible(true);

        try {
            iniciaLog();
            geraLog.criaLog(codigoUsuario, "Cadastro Escola", "Abriu Janela");
        } catch (IOException ex) {
            Logger.getLogger(JfLogin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jmiEscolaActionPerformed

    private void jmiCmeiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCmeiActionPerformed
        if (jfCadastroCmei == null) {
            jfCadastroCmei = new JfCadastroCmei();
        }

        jfCadastroCmei.setCodigoUsuario(codigoUsuario);
        jfCadastroCmei.setVisible(true);

        try {
            iniciaLog();
            geraLog.criaLog(codigoUsuario, "Cadastro Cmei", "Abriu Janela");
        } catch (IOException ex) {
            Logger.getLogger(JfLogin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jmiCmeiActionPerformed

    private void jmiAgendamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAgendamentoActionPerformed
        if (jfAgendamento == null) {
            jfAgendamento = new JfAgendamento();
        }

        jfAgendamento.setCodigoUsuario(codigoUsuario);
        jfAgendamento.setVisible(true);

        try {
            iniciaLog();
            geraLog.criaLog(codigoUsuario, "Agendamento", "Abriu Janela");
        } catch (IOException ex) {
            Logger.getLogger(JfLogin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jmiAgendamentoActionPerformed

    private void jmiSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiSairActionPerformed
        fechar();
    }//GEN-LAST:event_jmiSairActionPerformed

    private void jmiImprAgendamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiImprAgendamentoActionPerformed
        if (jfImpressosAgendamento == null) {
            jfImpressosAgendamento = new JfImpressosAgendamento();
        }

        jfImpressosAgendamento.setCodigoUsuario(codigoUsuario);
        jfImpressosAgendamento.setVisible(true);

        try {
            iniciaLog();
            geraLog.criaLog(codigoUsuario, "Impressos Agendamento", "Abriu Janela");
        } catch (IOException ex) {
            Logger.getLogger(JfLogin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jmiImprAgendamentoActionPerformed

    private void jmiImprEscolasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiImprEscolasActionPerformed
        if (jfImpressosEscola == null) {
            jfImpressosEscola = new JfImpressosEscola();
        }

        jfImpressosEscola.setCodigoUsuario(codigoUsuario);
        jfImpressosEscola.setVisible(true);

        try {
            iniciaLog();
            geraLog.criaLog(codigoUsuario, "Impressos Escola", "Abriu Janela");
        } catch (IOException ex) {
            Logger.getLogger(JfLogin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jmiImprEscolasActionPerformed

    private void jmiUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiUsuarioActionPerformed
        if (jfCadastroUsuario == null) {
            jfCadastroUsuario = new JfCadastroUsuario();
        }

        jfCadastroUsuario.setCodigoUsuario(codigoUsuario);
        jfCadastroUsuario.setTipoContraSenha(tipoContraSenha);
        jfCadastroUsuario.setVisible(true);

        try {
            iniciaLog();
            geraLog.criaLog(codigoUsuario, "Cadastro Outros", "Abriu Janela");
        } catch (IOException ex) {
            Logger.getLogger(JfLogin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jmiUsuarioActionPerformed

    private void jmiSobreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiSobreActionPerformed
        if (jfSobre == null) {
            jfSobre = new JfSobre();
        }

        jfSobre.setVisible(true);

        try {
            iniciaLog();
            geraLog.criaLog(codigoUsuario, "Sobre", "Abriu Janela");
        } catch (IOException ex) {
            Logger.getLogger(JfLogin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jmiSobreActionPerformed

    private void jmiMultimidiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiMultimidiaActionPerformed
        if (jfAgendamentoEquipamento == null) {
            jfAgendamentoEquipamento = new JfAgendamentoEquipamento();
        }

        jfAgendamentoEquipamento.setCodigoUsuario(codigoUsuario);
        jfAgendamentoEquipamento.setVisible(true);

        try {
            iniciaLog();
            geraLog.criaLog(codigoUsuario, "Agendamento Equipamentos", "Abriu Janela");
        } catch (IOException ex) {
            Logger.getLogger(JfLogin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jmiMultimidiaActionPerformed

    private void jmiCadEntidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCadEntidadeActionPerformed
        if (jfCadastroEquipamento == null) {
            jfCadastroEquipamento = new JfCadastroEquipamento();
        }

        jfCadastroEquipamento.setCodigoUsuario(codigoUsuario);
        jfCadastroEquipamento.setVisible(true);

        try {
            iniciaLog();
            geraLog.criaLog(codigoUsuario, "Cadastro Equipamentos", "Abriu Janela");
        } catch (IOException ex) {
            Logger.getLogger(JfLogin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jmiCadEntidadeActionPerformed

    private void jmiCadCartuchoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCadCartuchoActionPerformed
        if (jfCadastroCartucho == null) {
            jfCadastroCartucho = new JfCadastroCartucho();
        }

        jfCadastroCartucho.setCodigoUsuario(codigoUsuario);
        jfCadastroCartucho.setVisible(true);

        try {
            iniciaLog();
            geraLog.criaLog(codigoUsuario, "Cadastro Cartucho", "Abriu Janela");
        } catch (IOException ex) {
            Logger.getLogger(JfLogin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jmiCadCartuchoActionPerformed

    private void jmiRecargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiRecargaActionPerformed
        if (jfRecarga == null) {
            jfRecarga = new JfRecarga();
        }

        jfRecarga.setCodigoUsuario(codigoUsuario);
        jfRecarga.setVisible(true);

        try {
            iniciaLog();
            geraLog.criaLog(codigoUsuario, "Recarga", "Abriu Janela");
        } catch (IOException ex) {
            Logger.getLogger(JfLogin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jmiRecargaActionPerformed

    private void jmiNumeracaoOficiosSemedGeralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiNumeracaoOficiosSemedGeralActionPerformed
        if (jfOficio == null) {
            jfOficio = new JfOficio();
        }

        jfOficio.setCodigoUsuario(codigoUsuario);
        jfOficio.setVisible(true);

        try {
            iniciaLog();
            geraLog.criaLog(codigoUsuario, "Oficio", "Abriu Janela");
        } catch (IOException ex) {
            Logger.getLogger(JfLogin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jmiNumeracaoOficiosSemedGeralActionPerformed

    private void jmiImprRecargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiImprRecargaActionPerformed
        if (jfImpressosRecarga == null) {
            jfImpressosRecarga = new JfImpressosRecarga();
        }

        jfImpressosRecarga.setCodigoUsuario(codigoUsuario);
        jfImpressosRecarga.setVisible(true);

        try {
            iniciaLog();
            geraLog.criaLog(codigoUsuario, "Impressão Recarga", "Abriu Janela");
        } catch (IOException ex) {
            Logger.getLogger(JfLogin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jmiImprRecargaActionPerformed

    private void jmiImprCmeisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiImprCmeisActionPerformed
        if (jfImpressosCmei == null) {
            jfImpressosCmei = new JfImpressosCmei();
        }

        jfImpressosCmei.setCodigoUsuario(codigoUsuario);
        jfImpressosCmei.setVisible(true);

        try {
            iniciaLog();
            geraLog.criaLog(codigoUsuario, "Impressão CMEI", "Abriu Janela");
        } catch (IOException ex) {
            Logger.getLogger(JfLogin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jmiImprCmeisActionPerformed

    private void jmiImprMultimidiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiImprMultimidiaActionPerformed
        if (jfImpressosEquipamentos == null) {
            jfImpressosEquipamentos = new JfImpressosEquipamentos();
        }

        jfImpressosEquipamentos.setCodigoUsuario(codigoUsuario);
        jfImpressosEquipamentos.setVisible(true);

        try {
            iniciaLog();
            geraLog.criaLog(codigoUsuario, "Impressão Equipamentos", "Abriu Janela");
        } catch (IOException ex) {
            Logger.getLogger(JfLogin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jmiImprMultimidiaActionPerformed

    private void jmiImprOutrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiImprOutrosActionPerformed
        if (jfImpressosOutros == null) {
            jfImpressosOutros = new JfImpressosOutros();
        }

        jfImpressosOutros.setCodigoUsuario(codigoUsuario);
        jfImpressosOutros.setVisible(true);

        try {
            iniciaLog();
            geraLog.criaLog(codigoUsuario, "Impressão Outros", "Abriu Janela");
        } catch (IOException ex) {
            Logger.getLogger(JfLogin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jmiImprOutrosActionPerformed

    private void jmiAgendamentoPontoDigitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAgendamentoPontoDigitalActionPerformed
        if (jfPontoDigital == null) {
            jfPontoDigital = new JfPontoDigital();
        }

        jfPontoDigital.setCodigoUsuario(codigoUsuario);
        jfPontoDigital.setVisible(true);

        try {
            iniciaLog();
            geraLog.criaLog(codigoUsuario, "Ponto Digital", "Abriu Janela");
        } catch (IOException ex) {
            Logger.getLogger(JfLogin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jmiAgendamentoPontoDigitalActionPerformed

    private void jmiImprPontoDigitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiImprPontoDigitalActionPerformed
        if (jfImpressosPontoDigital == null) {
            jfImpressosPontoDigital = new JfImpressosPontoDigital();
        }

        jfImpressosPontoDigital.setCodigoUsuario(codigoUsuario);
        jfImpressosPontoDigital.setVisible(true);

        try {
            iniciaLog();
            geraLog.criaLog(codigoUsuario, "Impressão Ponto Digital", "Abriu Janela");
        } catch (IOException ex) {
            Logger.getLogger(JfLogin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jmiImprPontoDigitalActionPerformed

    private void jmiCadTipoEquipamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCadTipoEquipamentoActionPerformed
        if (jfCadastroTipoEquipamento == null) {
            jfCadastroTipoEquipamento = new JfCadastroTipoEquipamento();
        }

        jfCadastroTipoEquipamento.setCodigoUsuario(codigoUsuario);
        jfCadastroTipoEquipamento.setVisible(true);

        try {
            iniciaLog();
            geraLog.criaLog(codigoUsuario, "Cadastro Tipo Equipamento", "Abriu Janela");
        } catch (IOException ex) {
            Logger.getLogger(JfLogin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jmiCadTipoEquipamentoActionPerformed

    private void jmiCadEquipamentoEntidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCadEquipamentoEntidadeActionPerformed
        if (jfCadastroEquipamentosEntidades == null) {
            jfCadastroEquipamentosEntidades = new JfCadastroEquipamentosEntidades();
        }

        jfCadastroEquipamentosEntidades.setCodigoUsuario(codigoUsuario);
        jfCadastroEquipamentosEntidades.setVisible(true);

        try {
            iniciaLog();
            geraLog.criaLog(codigoUsuario, "Cadastro Equipamento Entidade", "Abriu Janela");
        } catch (IOException ex) {
            Logger.getLogger(JfLogin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jmiCadEquipamentoEntidadeActionPerformed

    private void jmiNumeracaoPortariasSemedGeralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiNumeracaoPortariasSemedGeralActionPerformed
        if (jfPortaria == null) {
            jfPortaria = new JfPortaria();
        }

        jfPortaria.setCodigoUsuario(codigoUsuario);
        jfPortaria.setVisible(true);

        try {
            iniciaLog();
            geraLog.criaLog(codigoUsuario, "Portaria", "Abriu Janela");
        } catch (IOException ex) {
            Logger.getLogger(JfLogin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jmiNumeracaoPortariasSemedGeralActionPerformed

    private void jmiAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAlunoActionPerformed
        if (jfCadastroAluno == null) {
            jfCadastroAluno = new JfCadastroAluno();
        }

        jfCadastroAluno.setCodigoUsuario(codigoUsuario);
        jfCadastroAluno.setVisible(true);

        try {
            iniciaLog();
            geraLog.criaLog(codigoUsuario, "Cadastro Aluno", "Abriu Janela");
        } catch (IOException ex) {
            Logger.getLogger(JfLogin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jmiAlunoActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            iniciaLog();
            geraLog.criaLog(codigoUsuario, "Principal", "Fez Logoff do Sistema");
        } catch (IOException ex) {
            Logger.getLogger(JfLogin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowClosing

private void jmiNumeracaoResolucaoSemedGeralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiNumeracaoResolucaoSemedGeralActionPerformed
    if (jfResolucao == null) {
        jfResolucao = new JfResolucao();
    }

    jfResolucao.setCodigoUsuario(codigoUsuario);
    jfResolucao.setVisible(true);

    try {
        iniciaLog();
        geraLog.criaLog(codigoUsuario, "Resolução", "Abriu Janela");
    } catch (IOException ex) {
        Logger.getLogger(JfLogin.class.getName()).log(Level.SEVERE, null, ex);
    }
}//GEN-LAST:event_jmiNumeracaoResolucaoSemedGeralActionPerformed

private void jmiNumeracaoEditalSemedGeralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiNumeracaoEditalSemedGeralActionPerformed
    if (jfEdital == null) {
        jfEdital = new JfEdital();
    }

    jfEdital.setCodigoUsuario(codigoUsuario);
    jfEdital.setVisible(true);

    try {
        iniciaLog();
        geraLog.criaLog(codigoUsuario, "Edital", "Abriu Janela");
    } catch (IOException ex) {
        Logger.getLogger(JfLogin.class.getName()).log(Level.SEVERE, null, ex);
    }
}//GEN-LAST:event_jmiNumeracaoEditalSemedGeralActionPerformed

private void jmiImprLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiImprLogActionPerformed
    if (jfImpressosLog == null) {
        jfImpressosLog = new JfImpressosLog();
    }

    jfImpressosLog.setCodigoUsuario(codigoUsuario);
    jfImpressosLog.setVisible(true);

    try {
        iniciaLog();
        geraLog.criaLog(codigoUsuario, "Log", "Abriu Janela");
    } catch (IOException ex) {
        Logger.getLogger(JfLogin.class.getName()).log(Level.SEVERE, null, ex);
    }

}//GEN-LAST:event_jmiImprLogActionPerformed

    private void jmiSolicitacaoRecargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiSolicitacaoRecargaActionPerformed
        if (jfSolicitacaoRecarga == null) {
            jfSolicitacaoRecarga = new JfSolicitacaoRecarga();
        }

        jfSolicitacaoRecarga.setCodigoUsuario(codigoUsuario);
        jfSolicitacaoRecarga.setVisible(true);

        try {
            iniciaLog();
            geraLog.criaLog(codigoUsuario, "Solicitação de Recarga", "Abriu Janela");
        } catch (IOException ex) {
            Logger.getLogger(JfLogin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jmiSolicitacaoRecargaActionPerformed

    private void jmiAgendamentoOficioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAgendamentoOficioActionPerformed

        if (jfAgendamentoOficio == null) {
            jfAgendamentoOficio = new JfAgendamentoOficio();
        }

        jfAgendamentoOficio.setCodigoUsuario(codigoUsuario);
        jfAgendamentoOficio.setVisible(true);

        try {
            iniciaLog();
            geraLog.criaLog(codigoUsuario, "Agendamento Oficio", "Abriu Janela");
        } catch (IOException ex) {
            Logger.getLogger(JfLogin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jmiAgendamentoOficioActionPerformed

    private void jmiCadModeloCartuchoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCadModeloCartuchoActionPerformed

        if (jfCadastroModeloCartucho == null) {
            jfCadastroModeloCartucho = new JfCadastroModeloCartucho();
        }

        jfCadastroModeloCartucho.setCodigoUsuario(codigoUsuario);
        jfCadastroModeloCartucho.setVisible(true);

        try {
            iniciaLog();
            geraLog.criaLog(codigoUsuario, "Cadastro Modelo Cartucho", "Abriu Janela");
        } catch (IOException ex) {
            Logger.getLogger(JfLogin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jmiCadModeloCartuchoActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed

        if (jfAjuda == null) {
            jfAjuda = new JfAjuda();
        }

        jfAjuda.setVisible(true);

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jpAlteracoesSistemaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpAlteracoesSistemaMouseClicked
        jpAlteracoesSistema.setVisible(false);
    }//GEN-LAST:event_jpAlteracoesSistemaMouseClicked

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        jpAlteracoesSistema.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jmiCrachaSemedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCrachaSemedActionPerformed
        if (jfImpressosCracha == null) {
            jfImpressosCracha = new JfImpressosCracha();
        }

        //jfImpressosCracha.setCodigoUsuario(codigoUsuario);
        jfImpressosCracha.setCodigoUsuario(codigoUsuario);
        jfImpressosCracha.setVisible(true);

        /*try {
            iniciaLog();
            geraLog.criaLog(codigoUsuario, "Resolução", "Abriu Janela");
        } catch (IOException ex) {
            Logger.getLogger(JfLogin.class.getName()).log(Level.SEVERE, null, ex);
        }*/
    }//GEN-LAST:event_jmiCrachaSemedActionPerformed

    private void jmiCadDepartamentoDivisaoSetorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCadDepartamentoDivisaoSetorActionPerformed
        if (jfCadastroDepartamentoDivisaoSetor == null) {
            jfCadastroDepartamentoDivisaoSetor = new JfCadastroDepartamentoDivisaoSetor();
        }
        
        jfCadastroDepartamentoDivisaoSetor.setCodigoUsuario(codigoUsuario);
        jfCadastroDepartamentoDivisaoSetor.setVisible(true);
    }//GEN-LAST:event_jmiCadDepartamentoDivisaoSetorActionPerformed

    private void jmiLoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiLoteActionPerformed
        if (jfCadastroLoteTransporte == null) {
            jfCadastroLoteTransporte = new JfCadastroLoteTransporte();
        }
        
        jfCadastroLoteTransporte.setCodigoUsuario(codigoUsuario);
        jfCadastroLoteTransporte.setVisible(true);
    }//GEN-LAST:event_jmiLoteActionPerformed

    private void jmiBlocoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiBlocoActionPerformed
        if (jfCadastroBlocoTransporte == null) {
            jfCadastroBlocoTransporte = new JfCadastroBlocoTransporte();
        }
        
        jfCadastroBlocoTransporte.setCodigoUsuario(codigoUsuario);
        jfCadastroBlocoTransporte.setVisible(true);
    }//GEN-LAST:event_jmiBlocoActionPerformed

    private void jmiLinhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiLinhaActionPerformed
        if (jfCadastroLinhaTransporte == null) {
            jfCadastroLinhaTransporte = new JfCadastroLinhaTransporte();
        }
        
        jfCadastroLinhaTransporte.setCodigoUsuario(codigoUsuario);
        jfCadastroLinhaTransporte.setVisible(true);
    }//GEN-LAST:event_jmiLinhaActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        
        //ADOGeral ag = new ADOGeral();
        Conexao conexao = new Conexao();
        HashMap parametros = new HashMap();
        try {
            //System.out.println(codigoRegistro);
            //parametros.put("titulo", "Titulo Relatorio");
            //parametros.put("mesInicio", jDateChooserInicio.getDate());
            //parametros.put("mesTermino", jDateChooserTermino.getDate());
            //parametros.put("codigo", lista.get(0).getNome();
            parametros.put("codigoUsuario", new Integer(1));
            //ADOGeral.conectar();
            conexao.getConexao();
        } catch (ExcCadastro ex) {
            Logger.getLogger(JfPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }

        //        JRDataSource jrds = new JRBeanCollectionDataSource(lista);

        try {

            //jReport = JasperCompileManager.compileReport("E:/LUIZ/PROJETOS JAVA/CORPORATIVO/m2GestaoClinicas/FichaPaciente.jrxml");
            //jPrint = JasperFillManager.fillReport("C:/m2GestaoClinicas/FichaPaciente.jasper", parametros, ADOGeral.getConexao());
            
            jPrint = JasperFillManager.fillReport("TermoManutencaoEquipamentos.jasper", parametros, conexao.getConexao());
            
            //jPrint = JasperFillManager.fillReport(jReport, parametros, jrds);

            //if (!(jViewer == null)) {
            //jViewer = new JasperViewer(jPrint, false);
            //jViewer.setExtendedState(JFrame.MAXIMIZED_BOTH);
            if (jPrint != null) {
                jViewer.viewReport(jPrint, false);
                jPrint = null;
            }
            //}

        } catch (Exception ex) {
            ex.printStackTrace();
        }
        
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jmiSolicitacaoRemanufaturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiSolicitacaoRemanufaturaActionPerformed
        if (jfSolicitacaoRemanufatura == null) {
            jfSolicitacaoRemanufatura = new JfSolicitacaoRemanufatura();
        }

        jfSolicitacaoRemanufatura.setCodigoUsuario(codigoUsuario);
        jfSolicitacaoRemanufatura.setVisible(true);

        try {
            iniciaLog();
            geraLog.criaLog(codigoUsuario, "Solicitação de Remanufatura", "Abriu Janela");
        } catch (IOException ex) {
            Logger.getLogger(JfLogin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jmiSolicitacaoRemanufaturaActionPerformed

    private void jmiNumeracaoInstrucaoNormativaSemedGeralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiNumeracaoInstrucaoNormativaSemedGeralActionPerformed
        if (jfInstrucaoNormativa == null) {
            jfInstrucaoNormativa = new JfInstrucaoNormativa();
        }
        
        jfInstrucaoNormativa.setCodigoUsuario(codigoUsuario);
        jfInstrucaoNormativa.setVisible(true);
        
        try {
            iniciaLog();
            geraLog.criaLog(codigoUsuario, "Instrução Normativa", "Abriu Janela");
        } catch (IOException ex) {
            Logger.getLogger(JfLogin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jmiNumeracaoInstrucaoNormativaSemedGeralActionPerformed

    private void jmiProtocoloEntregaRemanufaturadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiProtocoloEntregaRemanufaturadosActionPerformed
        if (jfEntregaRemanufaturados == null) {
            jfEntregaRemanufaturados = new JfEntregaRemanufaturados();
        }

        jfEntregaRemanufaturados.setCodigoUsuario(codigoUsuario);
        jfEntregaRemanufaturados.setVisible(true);

        try {
            iniciaLog();
            geraLog.criaLog(codigoUsuario, "Protocolo de Entrega de Remanufaturados", "Abriu Janela");
        } catch (IOException ex) {
            Logger.getLogger(JfLogin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jmiProtocoloEntregaRemanufaturadosActionPerformed

    private void jmTrayMinimizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmTrayMinimizarActionPerformed
        
        iniciaTraySurgi();
        traySurgi.mostraEsconde();
        
    }//GEN-LAST:event_jmTrayMinimizarActionPerformed

    private void jmiNumeracaoAtaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiNumeracaoAtaActionPerformed
        if (jfAta == null) {
            jfAta = new JfAta();
        }
        
        jfAta.setCodigoUsuario(codigoUsuario);
        jfAta.setVisible(true);

        try {
            iniciaLog();
            geraLog.criaLog(codigoUsuario, "Ata", "Abriu Janela");
        } catch (IOException ex) {
            Logger.getLogger(JfLogin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jmiNumeracaoAtaActionPerformed

    private void jmiCrachaComaeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCrachaComaeActionPerformed
        if (jfImpressosCrachaComae == null) {
            jfImpressosCrachaComae = new JfImpressosCrachaComae();
        }
        
        jfImpressosCrachaComae.setCodigoUsuario(codigoUsuario);
        jfImpressosCrachaComae.setVisible(true);
        
    }//GEN-LAST:event_jmiCrachaComaeActionPerformed

    private void jmiCrachaCmeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCrachaCmeActionPerformed
        if (jfImpressosCrachaCme == null) {
            jfImpressosCrachaCme = new JfImpressosCrachaCme();
        }
        
        jfImpressosCrachaCme.setCodigoUsuario(codigoUsuario);
        jfImpressosCrachaCme.setVisible(true);
    }//GEN-LAST:event_jmiCrachaCmeActionPerformed
    /**
     * @param args the command line arguments
     */
    /*public static void main(String args[]) {
     java.awt.EventQueue.invokeLater(new Runnable() {

     public void run() {
     new jfPrincipal().setVisible(true);
     }
     });
     }*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JLabel jlbVersao;
    private javax.swing.JMenu jmAgendamento;
    private javax.swing.JMenu jmArquivo;
    private javax.swing.JMenu jmAta;
    private javax.swing.JMenu jmCadastros;
    private javax.swing.JMenu jmEdital;
    private javax.swing.JMenu jmImpressos;
    private javax.swing.JMenu jmInstrucaoNormativa;
    private javax.swing.JMenu jmOficios;
    private javax.swing.JMenu jmPortarias;
    private javax.swing.JMenu jmRecarga;
    private javax.swing.JMenu jmResolucao;
    private javax.swing.JMenu jmSobre;
    private javax.swing.JMenu jmTransporte;
    private javax.swing.JMenuItem jmTrayMinimizar;
    private javax.swing.JMenuBar jmbPrincipal;
    private javax.swing.JMenuItem jmiAgendamento;
    private javax.swing.JMenuItem jmiAgendamentoOficio;
    private javax.swing.JMenuItem jmiAgendamentoPontoDigital;
    private javax.swing.JMenuItem jmiAluno;
    private javax.swing.JMenuItem jmiBloco;
    private javax.swing.JMenuItem jmiCadCartucho;
    private javax.swing.JMenuItem jmiCadDepartamentoDivisaoSetor;
    private javax.swing.JMenuItem jmiCadEntidade;
    private javax.swing.JMenuItem jmiCadEquipamentoEntidade;
    private javax.swing.JMenuItem jmiCadModeloCartucho;
    private javax.swing.JMenuItem jmiCadTipoEquipamento;
    private javax.swing.JMenuItem jmiCmei;
    private javax.swing.JMenuItem jmiCrachaCme;
    private javax.swing.JMenuItem jmiCrachaComae;
    private javax.swing.JMenuItem jmiCrachaSemed;
    private javax.swing.JMenuItem jmiEscola;
    private javax.swing.JMenuItem jmiImprAgendamento;
    private javax.swing.JMenuItem jmiImprCmeis;
    private javax.swing.JMenu jmiImprCrachas;
    private javax.swing.JMenuItem jmiImprEscolas;
    private javax.swing.JMenuItem jmiImprLog;
    private javax.swing.JMenuItem jmiImprMultimidia;
    private javax.swing.JMenuItem jmiImprOutros;
    private javax.swing.JMenuItem jmiImprPontoDigital;
    private javax.swing.JMenuItem jmiImprRecarga;
    private javax.swing.JMenuItem jmiLinha;
    private javax.swing.JMenuItem jmiLote;
    private javax.swing.JMenuItem jmiMultimidia;
    private javax.swing.JMenuItem jmiNumeracaoAta;
    private javax.swing.JMenuItem jmiNumeracaoEditalSemedGeral;
    private javax.swing.JMenuItem jmiNumeracaoInstrucaoNormativaSemedGeral;
    private javax.swing.JMenuItem jmiNumeracaoOficiosSemedGeral;
    private javax.swing.JMenuItem jmiNumeracaoPortariasSemedGeral;
    private javax.swing.JMenuItem jmiNumeracaoResolucaoSemedGeral;
    private javax.swing.JMenuItem jmiOutros;
    private javax.swing.JMenuItem jmiProtocoloEntregaRemanufaturados;
    private javax.swing.JMenuItem jmiRecarga;
    private javax.swing.JMenuItem jmiSair;
    private javax.swing.JMenuItem jmiSobre;
    private javax.swing.JMenuItem jmiSolicitacaoRecarga;
    private javax.swing.JMenuItem jmiSolicitacaoRemanufatura;
    private javax.swing.JMenuItem jmiUsuario;
    private javax.swing.JPanel jpAlteracoesSistema;
    // End of variables declaration//GEN-END:variables

//Outros Metodos ===========================================================================================================================================
    public void fechar() {

        try {
            geraLog.criaLog(codigoUsuario, "Principal", "Fez Logoff do Sistema");
        } catch (IOException ex) {
            Logger.getLogger(JfLogin.class.getName()).log(Level.SEVERE, null, ex);
        }

        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.dispose();

    }

//Geradores, Validadores===========================================================================================================================================
    public void iniciaAta() {
        
        if (ata == null) {
            ata = new Ata();
        }
        
    }
    
    public void iniciaClasseGeral() {
        
        if (classeGeral == null) {
            classeGeral = new ClasseGeral();
        }
        
    }
    
    public void iniciaDao() {
        
        if (dao == null) {
            dao = new DAO();
        }
        
    }

    public void iniciaEnviaEmail() {
        
        if (enviaEmail == null) {
            enviaEmail = new EnviaEmail();
        }
        
    }
    
    public void iniciaLog() {

        if (geraLog == null) {
            geraLog = new Log();
        }

    }
    
    public void iniciaJfLogin() {
        
        if (jfLogin == null) {
            jfLogin = new JfLogin();
        }
        
    }
    
    public void iniciaTraySurgi() {
        
        if (traySurgi == null) {
            traySurgi = new TraySurgi();
        }
        
    }
    
    public void iniciaValidaData() {
        
        if (validaData == null) {
            validaData = new ValidaData();
        }
        
    }
    
    public void listenerAtas() {
        
        if (gerarNumeracaoAtas) {
            
            iniciaClasseGeral();
            iniciaDao();
            iniciaValidaData();
            
            int ano;
            int dia;
            int mes;
            Date dataAta;
            List listaAtas = new ArrayList();
            
            dataAta = validaData.getDateAtual();
            
            ano = dataAta.getYear() + 1900;
            mes = dataAta.getMonth() + 1;
            dia = dataAta.getDate();
            
            dia += 30;
            
            if (mes == 1 || mes == 3 || mes == 5 || mes == 7 || mes == 8 || mes == 10 || mes == 12) {
                
                if (dia > 31) {
                    mes += 1;
                    dia = dia - 31;
                }
                
            } else if (mes == 2) {
                
                if (dia > 28) {
                    mes += 1;
                    dia = dia - 28;
                }
                
            } else {
                
                if (dia > 30) {
                    mes += 1;
                    dia = dia - 30;
                }
                
            }
            
            if (mes > 12) {
                ano += 1;
                mes = mes - 12;
            }
            
            dataAta.setDate(dia);
            dataAta.setMonth(mes);
            dataAta.setYear(ano);
            
            listaAtas = dao.listarAta(0, 0, 0, 0, validaData.getDateAtual(), dataAta, "", false);
            
            for (int i = 0; i < listaAtas.size(); i++) {
                
                iniciaAta();
                iniciaClasseGeral();
                iniciaEnviaEmail();
                
                ata = (Ata) listaAtas.get(i);
                
                if (ata.isEmailEnviado() == false) {
                    classeGeral.msgInforma("A Ata nº: " + ata.getNumeroAta() + " tem vencimento em " + ata.getDataPublicacaoVencimento().getDate() + "/" + 
                        (ata.getDataPublicacaoVencimento().getMonth()+1) + "/" + (ata.getDataPublicacaoVencimento().getYear()+1900));
                    enviaEmail.enviarEmailVencimentoAta(ata.getNumeroAta(), ata.getNumeroModalidade(), ata.getNumeroProcesso(), ata.getObjeto(), ata.getDataPublicacaoVencimento(), codigoUsuario);
                }
                
            }
            
        }
        
    }

//Getters and Setters===========================================================================================================================================
    public void getPermissaoAta() {
        Permissoes permissoes;
        iniciaDao();

        permissoes = (Permissoes) dao.buscaPermissoes(codigoUsuario);

        gerarNumeracaoAtas = permissoes.isGerarNumeracaoAtas();
    }
    
    public void setContraSenha(String tipoContraSenha) {

        this.tipoContraSenha = tipoContraSenha;
    }

    public void setTemaEscolhido(String temaEscolhido) {

        if (temaEscolhido.equals("PADRÃO")) {
        } else if (temaEscolhido.equals("LIQUIDO")) {

            try {
                UIManager.setLookAndFeel("com.birosoft.liquid.LiquidLookAndFeel");
                SwingUtilities.updateComponentTreeUI(this);
            } catch (Exception ex) {
                System.out.println(ex.getMessage());
            }

        } else if (temaEscolhido.equals("WINDOWS")) {

            //Visual estilo Windows
            LookAndFeelInfo[] laf = UIManager.getInstalledLookAndFeels();
            for (int i = 0; i < laf.length; i++) {
                System.out.println(laf[i].getName());
                if (laf[i].getName().equals("Windows")) {
                    try {
                        UIManager.setLookAndFeel(laf[i].getClassName());
                        SwingUtilities.updateComponentTreeUI(this);
                    } catch (Exception e) {
                    }
                }
                if (laf[i].getName().equals("GTK+")) {
                    try {
                        UIManager.setLookAndFeel(laf[i].getClassName());
                        SwingUtilities.updateComponentTreeUI(this);
                    } catch (Exception e) {
                    }
                }
            }

        }

    }

    public int getCodigoUsuario() {
        return codigoUsuario;
    }

    public void setCodigoUsuario(int codigoUsuario) {
        this.codigoUsuario = codigoUsuario;
        getPermissaoAta();
        listenerAtas();
    }
//Metodos DAO===========================================================================================================================================
}
