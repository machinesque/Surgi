/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * jfCadastroUsuario.java
 *
 * Created on 27/01/2010, 09:03:06
 */
package visual;

import controlador.*;
import dao.DAO;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.IOException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;
import modelo.DepartamentoDivisaoSetor;
import modelo.Permissoes;
import modelo.Usuario;

/**
 *
 * @author luiz
 */
public class JfCadastroUsuario extends javax.swing.JFrame {

    private static ControleVersao versao = new ControleVersao();
    private CadastroEmail cadastroEmail;
    private ClasseGeral classeGeral;
    private ControleDepartamentoDivisaoSetor controleDepartamentoDivisaoSetor;
    private ControleImagem controleImagem = new ControleImagem();
    private ControleUsuario controleUsuario;
    private DepartamentoDivisaoSetor departamentoDivisaoSetor;
    private EncriptaSenha criptaSenha;
    private DAO dao;
    private Log geraLog;
    private Usuario usuario;
    
    private JdBuscaUsuario jdbu;
    private JfPermissoes jfPermiss;
    
    private int codigo = 0;
    private int codigoUsuario;
    private String opcao = "salvar";
    private String senha;
    private String contraSenha = "toJqjcGCFv8pekaaZyaoAQ==";
    private String tipoContraSenha = "";
    private String usuarioVerificado;
    private boolean cadastrarUsuario;
    private boolean usuarioInativo = false;

    /** Creates new form jfCadastroUsuario */
    public JfCadastroUsuario() {
        super("Cadastro Usuários - " + versao.getVersao() + " - " + versao.getAno());
        initComponents();

        //Altera icone na barra de titulo
        Toolkit kit = Toolkit.getDefaultToolkit();
        Image img = kit.getImage("C:/SURGI/imagens/SURGI32x32.png");
        this.setIconImage(img);

        //centraliza tela
        setSize(getWidth(), getHeight());
        setLocationRelativeTo(null);

        try {
            jftfCelular.setFormatterFactory(getFormatoTelefone());
        } catch (ParseException ex) {
            iniciaClasseGeral();
            Logger.getLogger(JfCadastroEscola.class.getName()).log(Level.SEVERE, null, ex);
            classeGeral.msgErro("Não foi possivel formatar campo de telefone, \n Contate o Administrador!");
        }

        preencheComboDepartamentoDivisaoSetor();
        
        setNumeroCaracteres();

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpBotoes = new javax.swing.JPanel();
        jbSalvar = new javax.swing.JButton();
        jbBuscar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();
        jbAlterar = new javax.swing.JButton();
        jbPermissoes = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtfNomeUsuario = new javax.swing.JTextField();
        jtfMatriculaUsuario = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jcbTemaEscolhido = new javax.swing.JComboBox();
        jpswdfSenha = new javax.swing.JPasswordField();
        jftfCelular = new javax.swing.JFormattedTextField();
        jcboxUsuarioInativo = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        jcbDepartamentoDivisaoSetor = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jtfEmail = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jpswdfConfirmaSenha = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jpBotoes.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        jbSalvar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/OK.png"))); // NOI18N
        jbSalvar.setText("Salvar");
        jbSalvar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        jbBuscar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/pesquisar.png"))); // NOI18N
        jbBuscar.setText("Buscar");
        jbBuscar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jbCancelar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cancelar.png"))); // NOI18N
        jbCancelar.setText("Cancelar");
        jbCancelar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jbExcluir.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/delete.png"))); // NOI18N
        jbExcluir.setText("Excluir");
        jbExcluir.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbExcluir.setEnabled(false);
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jbAlterar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/reload.png"))); // NOI18N
        jbAlterar.setText("Alterar");
        jbAlterar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbAlterar.setEnabled(false);
        jbAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlterarActionPerformed(evt);
            }
        });

        jbPermissoes.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbPermissoes.setText("Permissões");
        jbPermissoes.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbPermissoes.setEnabled(false);
        jbPermissoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPermissoesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpBotoesLayout = new javax.swing.GroupLayout(jpBotoes);
        jpBotoes.setLayout(jpBotoesLayout);
        jpBotoesLayout.setHorizontalGroup(
            jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpBotoesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbPermissoes, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jpBotoesLayout.setVerticalGroup(
            jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbPermissoes, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel1.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Nome: ");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Matricula: ");

        jtfNomeUsuario.setBackground(new java.awt.Color(205, 204, 255));
        jtfNomeUsuario.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfNomeUsuario.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtfNomeUsuario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfNomeUsuarioFocusLost(evt);
            }
        });

        jtfMatriculaUsuario.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfMatriculaUsuario.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtfMatriculaUsuario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfMatriculaUsuarioFocusLost(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Tema: ");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("E-mail: ");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Celular: ");

        jcbTemaEscolhido.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbTemaEscolhido.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PADRÃO", "LIQUIDO", "WINDOWS" }));
        jcbTemaEscolhido.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jpswdfSenha.setBackground(new java.awt.Color(204, 204, 255));
        jpswdfSenha.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jpswdfSenha.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jftfCelular.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jftfCelular.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jcboxUsuarioInativo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcboxUsuarioInativo.setText("Usuário Inativo");
        jcboxUsuarioInativo.setEnabled(false);
        jcboxUsuarioInativo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcboxUsuarioInativoActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Departamento/Divisão/Setor: ");

        jcbDepartamentoDivisaoSetor.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbDepartamentoDivisaoSetor.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Senha: ");

        jtfEmail.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfEmail.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtfEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfEmailFocusLost(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("@cascavel.pr.gov.br");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Confirma Senha: ");

        jpswdfConfirmaSenha.setBackground(new java.awt.Color(204, 204, 255));
        jpswdfConfirmaSenha.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jpswdfConfirmaSenha.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel6)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jcboxUsuarioInativo)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jtfNomeUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
                                .addComponent(jcbDepartamentoDivisaoSetor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jtfMatriculaUsuario)
                                .addComponent(jftfCelular))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jpswdfSenha)
                                .addComponent(jcbTemaEscolhido, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jpswdfConfirmaSenha)))
                        .addGap(208, 208, 208))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jtfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11)
                        .addContainerGap(103, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtfNomeUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jcbDepartamentoDivisaoSetor, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtfMatriculaUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jftfCelular, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jcbTemaEscolhido, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jpswdfSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jpswdfConfirmaSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jcboxUsuarioInativo)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed

        verificaNomeUsuario();

        if (opcao.equals("salvar")) {

            if (!usuarioVerificado.isEmpty()) {
                iniciaClasseGeral();
                classeGeral.msgAtencao("Esse Usuário já existe!");
            } else {
                if (jpswdfConfirmaSenha.getText().equals(jpswdfSenha.getText())) {
                    salvar();
                    opcao = "salvar";
                } else {
                    iniciaClasseGeral();
                    classeGeral.msgAtencao("Senha não confere, digite-a novamente!");
                    jpswdfConfirmaSenha.setText("");
                    jpswdfSenha.setText("");
                }
            }

        } else if (opcao.equals("alterar")) {

            iniciaEncriptaSenha();
            
            String senhaAux;
            
            if (jpswdfSenha.getText().equals(senha)) {
                senhaAux = jpswdfSenha.getText();
                atualizar();
                opcao = "salvar";
            } else {
                senhaAux = criptaSenha.ResumirTexto(jpswdfSenha.getText());
                if (criptaSenha.ResumirTexto(jpswdfConfirmaSenha.getText()).equals(senhaAux)) {
                    atualizar();
                    opcao = "salvar";
                } else {
                    iniciaClasseGeral();
                    classeGeral.msgAtencao("Senha não confere, digite-a novamente!");
                    jpswdfConfirmaSenha.setText("");
                    jpswdfSenha.setText("");
                }
            }

        }

    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed

        if (jdbu == null) {
            jdbu = new JdBuscaUsuario(null, true);
        }

        jdbu.setVisible(true);

        setUsuarioBuscado(jdbu.getUsuario());
        jdbu.setUsuario();
    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        cancelar();
}//GEN-LAST:event_jbCancelarActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        excluir();
}//GEN-LAST:event_jbExcluirActionPerformed

    private void jbAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlterarActionPerformed

        jbAlterar.setEnabled(false);

        opcao = "alterar";

        abilitaCampos();

        jbSalvar.setEnabled(true);

    }//GEN-LAST:event_jbAlterarActionPerformed

    private void jtfNomeUsuarioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfNomeUsuarioFocusLost
        jtfNomeUsuario.setText(jtfNomeUsuario.getText().toUpperCase());
    }//GEN-LAST:event_jtfNomeUsuarioFocusLost

    private void jtfMatriculaUsuarioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfMatriculaUsuarioFocusLost
        jtfMatriculaUsuario.setText(jtfMatriculaUsuario.getText().toUpperCase());
    }//GEN-LAST:event_jtfMatriculaUsuarioFocusLost

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        fechar();
    }//GEN-LAST:event_formWindowClosing

    private void jbPermissoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPermissoesActionPerformed
        if (jtfNomeUsuario.getText().isEmpty()) {
            iniciaClasseGeral();
            classeGeral.msgAtencao("Escolha um Usuario para dar Permissões!");
        } else {

            iniciaDao();
            //DAO dao = new DAO();
            String usuarVerificado;

            usuarVerificado = dao.verificarNomeUsuario(jtfNomeUsuario.getText());

            if (usuarVerificado.isEmpty()) {
                iniciaClasseGeral();
                classeGeral.msgAtencao("Não Usuário cadastrado com esse nome!");
            } else {

                iniciaControleUsuario();
                
                if (jfPermiss == null) {
                    jfPermiss = new JfPermissoes();
                }

                System.out.println(jtfNomeUsuario.getText());
                jfPermiss.setCodigoUsuario(codigoUsuario);
                jfPermiss.setCodigoUsuarioPermissao(controleUsuario.getCodigoUsuario(jtfNomeUsuario.getText()));
                jfPermiss.setVisible(true);

            }

        }
    }//GEN-LAST:event_jbPermissoesActionPerformed

    private void jcboxUsuarioInativoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcboxUsuarioInativoActionPerformed

        if (jcboxUsuarioInativo.isSelected()) {
            usuarioInativo = true;
        } else {
            usuarioInativo = false;
        }

    }//GEN-LAST:event_jcboxUsuarioInativoActionPerformed

    private void jtfEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfEmailFocusLost
        jtfEmail.setText(jtfEmail.getText().toLowerCase());
            
        iniciaCadastroEmail();
        jtfEmail.setText(cadastroEmail.verificaArroba(jtfEmail.getText()));
        
        
    }//GEN-LAST:event_jtfEmailFocusLost
    /**
     * @param args the command line arguments
     */
    /*public static void main(String args[]) {
    java.awt.EventQueue.invokeLater(new Runnable() {
    public void run() {
    new jfCadastroUsuario().setVisible(true);
    }
    });
    }*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jbAlterar;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbPermissoes;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JComboBox jcbDepartamentoDivisaoSetor;
    private javax.swing.JComboBox jcbTemaEscolhido;
    private javax.swing.JCheckBox jcboxUsuarioInativo;
    private javax.swing.JFormattedTextField jftfCelular;
    private javax.swing.JPanel jpBotoes;
    private javax.swing.JPasswordField jpswdfConfirmaSenha;
    private javax.swing.JPasswordField jpswdfSenha;
    private javax.swing.JTextField jtfEmail;
    private javax.swing.JTextField jtfMatriculaUsuario;
    private javax.swing.JTextField jtfNomeUsuario;
    // End of variables declaration//GEN-END:variables

//Outros Metodos===================================================================================================================================
    public void fechar() {

        if (!jtfNomeUsuario.getText().isEmpty() || !jtfMatriculaUsuario.getText().isEmpty()) {

            iniciaClasseGeral();
            classeGeral.msgAtencao("Cancele ou Salve o Cadastro em Edição!");

        } else {

            dao = null;
            this.dispose();

        }
    }

    public void cancelar() {

        jtfNomeUsuario.setText("");
        jtfMatriculaUsuario.setText("");
        jtfEmail.setText("");
        jcbTemaEscolhido.setSelectedIndex(0);
        jftfCelular.setText("");
        jpswdfConfirmaSenha.setText("");
        jpswdfSenha.setText("");
        jcboxUsuarioInativo.setSelected(false);
        jcbDepartamentoDivisaoSetor.setSelectedIndex(0);

        abilitaCampos();

        desabilitaBotoes();

        jtfMatriculaUsuario.transferFocusBackward();

        opcao = "salvar";
        contraSenha = "toJqjcGCFv8pekaaZyaoAQ==";
        
        departamentoDivisaoSetor = null;
        cadastroEmail = null;
        controleDepartamentoDivisaoSetor = null;
        usuario = null;

    }

    public void abilitaCampos() {

        jtfNomeUsuario.setEditable(true);
        jtfMatriculaUsuario.setEditable(true);
        jtfEmail.setEditable(true);
        jcbTemaEscolhido.setEnabled(true);
        jftfCelular.setEditable(true);
        jpswdfSenha.setEditable(true);
        jcbDepartamentoDivisaoSetor.setEnabled(true);

        System.out.println(tipoContraSenha);
        if (tipoContraSenha.equals("ADMINISTRADOR")) {
            jcboxUsuarioInativo.setEnabled(true);
        } else {
            jcboxUsuarioInativo.setEnabled(false);
        }

    }

    public void desabilitaCampos() {

        jtfNomeUsuario.setEditable(false);
        jtfMatriculaUsuario.setEditable(false);
        jtfEmail.setEditable(false);
        jftfCelular.setEditable(false);
        jcbTemaEscolhido.setEnabled(false);
        jpswdfSenha.setEditable(false);
        jcboxUsuarioInativo.setEnabled(false);
        jcbDepartamentoDivisaoSetor.setEnabled(false);

    }

    public void abilitaPermissoes() {

        if (tipoContraSenha.equals("ADMINISTRADOR")) {
            jbPermissoes.setEnabled(true);
            jcboxUsuarioInativo.setEnabled(true);
        } else {
            jbPermissoes.setEnabled(false);
            jcboxUsuarioInativo.setEnabled(false);
        }

    }

    public void abilitaBotoes() {

        iniciaControleUsuario();
        
        jbCancelar.setEnabled(true);
        jbBuscar.setEnabled(true);

        if (cadastrarUsuario == true) {
            jbSalvar.setEnabled(false);
            jbExcluir.setEnabled(true);
            jbAlterar.setEnabled(true);
        } else if (jtfNomeUsuario.getText().equals(controleUsuario.getNomeUsuario(codigoUsuario))) {
            jbSalvar.setEnabled(false);
            jbExcluir.setEnabled(true);
            jbAlterar.setEnabled(true);
        } else {
            jbSalvar.setEnabled(false);
            jbExcluir.setEnabled(false);
            jbAlterar.setEnabled(false);
        }

    }

    public void desabilitaBotoes() {

        jbCancelar.setEnabled(true);
        jbBuscar.setEnabled(true);

        if (cadastrarUsuario == true) {
            jbSalvar.setEnabled(true);
            jbExcluir.setEnabled(false);
            jbAlterar.setEnabled(false);
        } else {
            jbSalvar.setEnabled(false);
            jbExcluir.setEnabled(false);
            jbAlterar.setEnabled(false);
        }

    }
    
    public void preencheComboDepartamentoDivisaoSetor() {
        
        iniciaDao();
        iniciaDepartamentoDivisaoSetor();
        
        List listaDepartamentoDivisaoSetor = new ArrayList();

        jcbDepartamentoDivisaoSetor.removeAllItems();
        jcbDepartamentoDivisaoSetor.addItem("");

        listaDepartamentoDivisaoSetor = dao.listarDepartamentoDivisaoSetor(0, "");

        for (int i = 0; i < listaDepartamentoDivisaoSetor.size(); i++) {
            departamentoDivisaoSetor = (DepartamentoDivisaoSetor) listaDepartamentoDivisaoSetor.get(i);
            jcbDepartamentoDivisaoSetor.addItem(departamentoDivisaoSetor.getNomeDepartamentoDivisaoSetor());
        }
        
        departamentoDivisaoSetor = null;
        
    }

//Geradores, Validadores, Verificadores===================================================================================================================================
    public void iniciaCadastroEmail() {
        
        if (cadastroEmail == null) {
            cadastroEmail = new CadastroEmail();
        }
        
    }
    
    public void iniciaClasseGeral() {
        
        if (classeGeral == null) {
            classeGeral = new ClasseGeral();
        }
        
    }
    
    public void iniciaControleDepartamentoDivisaoSetor() {
        
        if (controleDepartamentoDivisaoSetor == null) {
            controleDepartamentoDivisaoSetor = new ControleDepartamentoDivisaoSetor();
        }
        
    }
    
    public void iniciaControleUsuario() {
        
        if (controleUsuario == null) {
            controleUsuario = new ControleUsuario();
        }
        
    }
    
    public void iniciaDao() {

        if (dao == null) {
            dao = new DAO();
        }

    }
    
    public void iniciaDepartamentoDivisaoSetor() {
        
        if (departamentoDivisaoSetor == null) {
            departamentoDivisaoSetor = new DepartamentoDivisaoSetor();
        }
        
    }
    
    public void iniciaEncriptaSenha() {
        
        if (criptaSenha == null) {
            criptaSenha = new EncriptaSenha();
        }
        
    }
    
    public void iniciaGeraLog() {
        
        if (geraLog == null) {
            geraLog = new Log();
        }
        
    }
    
    public void iniciaUsuario() {
        
        if (usuario == null) {
            usuario = new Usuario();
        }
         
    }
    
    public void verificaNomeUsuario() {

        iniciaDao();
        //DAO dao = new DAO();

        usuarioVerificado = dao.verificarNomeUsuario(jtfNomeUsuario.getText());

    }

//Getters and Setters===================================================================================================================================
    public void setUsuarioBuscado(Usuario usuarioBuscado) {

        if (usuarioBuscado == null) {
        } else {

            iniciaCadastroEmail();
            iniciaDepartamentoDivisaoSetor();
            iniciaUsuario();
            
            jtfNomeUsuario.setText(usuarioBuscado.getNomeUsuario());
            
            departamentoDivisaoSetor = usuarioBuscado.getDepartamentoDivisaoSetor();
            jcbDepartamentoDivisaoSetor.setSelectedItem(departamentoDivisaoSetor.getNomeDepartamentoDivisaoSetor());
            
            jtfMatriculaUsuario.setText(usuarioBuscado.getMatricula());
            jftfCelular.setText(usuarioBuscado.getCelular());
            jcbTemaEscolhido.setSelectedItem(usuarioBuscado.getTemaEscolhido());
            jpswdfSenha.setText(usuarioBuscado.getSenha());
            senha = usuarioBuscado.getSenha();
            contraSenha = usuarioBuscado.getContraSenha();
            jcboxUsuarioInativo.setSelected(usuarioBuscado.isUsuarioInativo());

            try {
                jtfEmail.setText(cadastroEmail.verificaArroba(usuarioBuscado.getEmailUsuario()));
            } catch (Exception e) {
                System.out.println("Não possui email cadastrado!");
                jtfEmail.setText("");
            }
            
            codigo = usuarioBuscado.getCodigoUsuario();
            usuario = usuarioBuscado;
            usuario.setCodigoUsuario(codigo);

            desabilitaCampos();

            abilitaBotoes();

        }

    }

    public DefaultFormatterFactory getFormatoTelefone() throws ParseException {

        MaskFormatter comFoco = null;

        try {
            comFoco = new MaskFormatter("(##)####-####"); // passa telefone para o formato [(45)9999-9999]
        } catch (ParseException pe) {
        }

        DefaultFormatterFactory factory = new DefaultFormatterFactory(comFoco);
        return factory;

    }

    public void setNumeroCaracteres() {

        jtfNomeUsuario.setDocument(new FixedLengthDocument(120));
        jtfMatriculaUsuario.setDocument(new FixedLengthDocument(10));
        jtfEmail.setDocument(new FixedLengthDocument(120));

    }

    public String getTipoContraSenha() {
        return tipoContraSenha;
    }

    public void setTipoContraSenha(String tipoContraSenha) {
        this.tipoContraSenha = tipoContraSenha;
        abilitaPermissoes();
    }

    public int getCodigoUsuario() {
        return codigoUsuario;
    }

    public void setCodigoUsuario(int codigoUsuario) {
        this.codigoUsuario = codigoUsuario;
        getPermissoes();
        desabilitaBotoes();
    }

    public void getPermissoes() {
        Permissoes permissoes;
        iniciaDao();
        //DAO dao = new DAO();

        permissoes = (Permissoes) dao.buscaPermissoes(getCodigoUsuario());

        cadastrarUsuario = permissoes.isCadastrarUsuario();
    }

//Metodos DAO===================================================================================================================================
    public void salvar() {

        if (!jtfNomeUsuario.getText().isEmpty() || !jpswdfSenha.getText().isEmpty()) {

            iniciaDao();
            iniciaControleDepartamentoDivisaoSetor();
            iniciaDepartamentoDivisaoSetor();
            iniciaEncriptaSenha();
            iniciaUsuario();

            usuario.setMatricula(jtfMatriculaUsuario.getText());
            usuario.setNomeUsuario(jtfNomeUsuario.getText());
            usuario.setEmailUsuario(jtfEmail.getText() + "@cascavel.pr.gov.br");
            usuario.setSenha(criptaSenha.ResumirTexto(jpswdfSenha.getText()));
            usuario.setCelular(jftfCelular.getText());
            usuario.setContraSenha("");
            
            departamentoDivisaoSetor = (DepartamentoDivisaoSetor) dao.busca(departamentoDivisaoSetor, controleDepartamentoDivisaoSetor.getCodigoDepartamentoDivisaoSetor(jcbDepartamentoDivisaoSetor.getSelectedItem().toString()));
            dao.encerraSessao();
            usuario.setDepartamentoDivisaoSetor(departamentoDivisaoSetor);
            
            usuario.setTemaEscolhido(jcbTemaEscolhido.getSelectedItem().toString());
            usuario.setUsuarioInativo(usuarioInativo);

            try {
                iniciaGeraLog();
                geraLog.criaLog(codigoUsuario, "Cadastro Usuário", "Tentou Salvar Usuario " + usuario.getNomeUsuario() + " Matrícula: " + usuario.getMatricula());
            } catch (IOException ex) {
                Logger.getLogger(JfPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            dao.inserir(usuario, 7, codigoUsuario);
            cancelar();

        } else {
            iniciaClasseGeral();
            classeGeral.msgAtencao("Complete os Campos Obrigatórios, destacados em Azul!");
        }

    }

    public void atualizar() {

        if (!jtfNomeUsuario.getText().isEmpty()) {

            iniciaDao();
            iniciaControleDepartamentoDivisaoSetor();
            iniciaDepartamentoDivisaoSetor();
            iniciaEncriptaSenha();
            iniciaUsuario();

            usuario.setMatricula(jtfMatriculaUsuario.getText());
            usuario.setNomeUsuario(jtfNomeUsuario.getText());
            usuario.setEmailUsuario(jtfEmail.getText() + "@cascavel.pr.gov.br");
            usuario.setContraSenha("");
            
            departamentoDivisaoSetor = (DepartamentoDivisaoSetor) dao.busca(departamentoDivisaoSetor, controleDepartamentoDivisaoSetor.getCodigoDepartamentoDivisaoSetor(jcbDepartamentoDivisaoSetor.getSelectedItem().toString()));
            dao.encerraSessao();
            usuario.setDepartamentoDivisaoSetor(departamentoDivisaoSetor);
            
            usuario.setCelular(jftfCelular.getText());
            usuario.setTemaEscolhido(jcbTemaEscolhido.getSelectedItem().toString());
            usuario.setUsuarioInativo(usuarioInativo);

            if (jpswdfSenha.getText().equals(senha)) {
                usuario.setSenha(jpswdfSenha.getText());
            } else {
                usuario.setSenha(criptaSenha.ResumirTexto(jpswdfSenha.getText()));
            }

            try {
                iniciaGeraLog();
                geraLog.criaLog(codigoUsuario, "Cadastro Usuário", "Tentou Atualizar Usuário: " + usuario.getNomeUsuario() + " Código: " + usuario.getCodigoUsuario() + " Matrícula: " + usuario.getMatricula());
            } catch (IOException ex) {
                Logger.getLogger(JfPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            dao.atualizar(usuario, 7, codigoUsuario);
            cancelar();

        } else {
            iniciaClasseGeral();
            classeGeral.msgAtencao("Complete os Campos Obrigatórios, destacados em Azul!");
        }

    }

    public void excluir() {

        iniciaClasseGeral();

        if (classeGeral.msgConfirma("Deseja excluir o usuário ?")) {

            iniciaDao();
            iniciaUsuario();
            
            try {
                iniciaGeraLog();
                geraLog.criaLog(codigoUsuario, "Cadastro Usuário", "Tentou Excluir Usuário: " + usuario.getNomeUsuario() + " Código: " + usuario.getCodigoUsuario() + " Matrícula: " + usuario.getMatricula());
            } catch (IOException ex) {
                Logger.getLogger(JfPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            dao.excluir(usuario, codigoUsuario);
            cancelar();

        }
    }
}
