/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package visual;

import controlador.*;
import dao.DAO;
import excecoes.MensagensExcessao;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import modelo.Cartucho;
import modelo.Cmei;
import modelo.Escola;
import modelo.Outro;
import modelo.Recarga;

/**
 *
 * @author luizam
 */
public class JdAtualizarItemSolicitacaoRecarga extends javax.swing.JDialog implements Runnable {

    private static ControleVersao versao = new ControleVersao();
    private Cartucho cartucho;
    private Cmei cmei;
    private ControleCmei controleCmei;
    private ControleEscola controleEscola;
    private ControleOutro controleOutro;
    private DAO dao;
    private Escola escola;
    private Log log;
    private Formatos formato = new Formatos();
    private MensagensExcessao except;
    private Outro outro;
    private Recarga recarga;
    
    private Thread threadAtualizaHora = new Thread(this);

    private int codigoRecarga;
    private int codigoUsuario;
    private int numeroRecargas;
    private String codigoBarras = "";
    private String modeloCartucho = "";
    private String nomeEntidade;
    private String tipoEntidade = "";
    private String horaEntrega;
    private String observacao;
    private String opcao = "salvar";
    private boolean necessitaInserir;
    private Date dataEntrega;
    private Date dataRecarga;
    private Date dataDevolucao;
    
    /**
     * Creates new form jdAtualizarItemSolicitacaoRecarga
     */
    public JdAtualizarItemSolicitacaoRecarga(java.awt.Frame parent, boolean modal) {
        super(parent, "Atualizar Item Solicitacao Recarga - " + versao.getVersao() + " - " + versao.getAno(), modal);
        initComponents();
        
        //Altera icone na barra de titulo
        Toolkit kit = Toolkit.getDefaultToolkit();
        Image img = kit.getImage("C:/SURGI/imagens/SURGI32x32.png");
        this.setIconImage(img);

        //centraliza tela
        setSize(getWidth(), getHeight());
        setLocationRelativeTo(null);
        
        try {
            jftfHoraEntrega.setFormatterFactory(formato.getFormatoHora());
        } catch (ParseException ex) {
            Logger.getLogger(JfAgendamento.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel formatar campo de Hora Solicitacao, \n Contate o Administrador!", "Erro", 0, null);
        }
        
        setNumeroCaracteres();
        
        jtfNumeroRecargas.setEditable(false);
        jDateChooserDataEntrega.setDate(getDateHoje());
        jrbEscola.setSelected(true);
        
        preencheComboEscolas();
        threadAtualizaHora.start();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgTipoEntidade = new javax.swing.ButtonGroup();
        jpAtualizarItemSolicitacaoRecargaFundo = new javax.swing.JPanel();
        jpBotoes = new javax.swing.JPanel();
        jbFechar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jbConfirmar = new javax.swing.JButton();
        jbAlterar = new javax.swing.JButton();
        jpAtualizarItemSolicitacaoRecarga = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jrbEscola = new javax.swing.JRadioButton();
        jrbCmei = new javax.swing.JRadioButton();
        jrbOutros = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        jftfHoraEntrega = new javax.swing.JFormattedTextField();
        jDateChooserDataEntrega = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        jtfCodigoBarras = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtfModeloCartucho = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jDateChooserDataRecarga = new com.toedter.calendar.JDateChooser();
        jDateChooserDataDevolucao = new com.toedter.calendar.JDateChooser();
        jLabel9 = new javax.swing.JLabel();
        jcbNomeEntidade = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jtfNumeroRecargas = new javax.swing.JTextField();
        jcheckbCartuchoQueimado = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtaObservacao = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jpBotoes.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        jbFechar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbFechar.setText("Fechar");
        jbFechar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbFecharActionPerformed(evt);
            }
        });

        jbCancelar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cancelar.png"))); // NOI18N
        jbCancelar.setText("Cancelar");
        jbCancelar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jbConfirmar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbConfirmar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/OK.png"))); // NOI18N
        jbConfirmar.setText("Confirmar");
        jbConfirmar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbConfirmarActionPerformed(evt);
            }
        });

        jbAlterar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/reload.png"))); // NOI18N
        jbAlterar.setText("Alterar");
        jbAlterar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbAlterar.setEnabled(false);
        jbAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlterarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpBotoesLayout = new javax.swing.GroupLayout(jpBotoes);
        jpBotoes.setLayout(jpBotoesLayout);
        jpBotoesLayout.setHorizontalGroup(
            jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpBotoesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jpBotoesLayout.setVerticalGroup(
            jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpBotoesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        jpAtualizarItemSolicitacaoRecarga.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Tipo Entidade: ");

        btgTipoEntidade.add(jrbEscola);
        jrbEscola.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbEscola.setSelected(true);
        jrbEscola.setText("Escola");
        jrbEscola.setEnabled(false);
        jrbEscola.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbEscolaActionPerformed(evt);
            }
        });

        btgTipoEntidade.add(jrbCmei);
        jrbCmei.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbCmei.setText("Cmei");
        jrbCmei.setEnabled(false);
        jrbCmei.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbCmeiActionPerformed(evt);
            }
        });

        btgTipoEntidade.add(jrbOutros);
        jrbOutros.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbOutros.setText("Outros");
        jrbOutros.setEnabled(false);
        jrbOutros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbOutrosActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setText("Hora Entrega: ");

        jftfHoraEntrega.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jftfHoraEntrega.setEnabled(false);
        jftfHoraEntrega.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jDateChooserDataEntrega.setBackground(new java.awt.Color(204, 204, 255));
        jDateChooserDataEntrega.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(204, 204, 255), new java.awt.Color(204, 204, 255), null, new java.awt.Color(204, 204, 255)));
        jDateChooserDataEntrega.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Data Entrega: ");

        jtfCodigoBarras.setBackground(new java.awt.Color(204, 204, 255));
        jtfCodigoBarras.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfCodigoBarras.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtfCodigoBarras.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfCodigoBarrasKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfCodigoBarrasKeyReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("CÃ³digo de Barras: ");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Modelo Cartucho: ");

        jtfModeloCartucho.setEditable(false);
        jtfModeloCartucho.setBackground(new java.awt.Color(204, 204, 255));
        jtfModeloCartucho.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfModeloCartucho.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtfModeloCartucho.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfModeloCartuchoFocusLost(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Data Recarga: ");

        jDateChooserDataRecarga.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDateChooserDataRecarga.setEnabled(false);
        jDateChooserDataRecarga.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jDateChooserDataDevolucao.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDateChooserDataDevolucao.setEnabled(false);
        jDateChooserDataDevolucao.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("Data DevoluÃ§Ã£o: ");

        jcbNomeEntidade.setBackground(new java.awt.Color(204, 204, 255));
        jcbNomeEntidade.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbNomeEntidade.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 255), new java.awt.Color(204, 204, 255), null, new java.awt.Color(204, 204, 255)));
        jcbNomeEntidade.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Nome Entidade: ");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Numero Recargas: ");

        jtfNumeroRecargas.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfNumeroRecargas.setText("0");
        jtfNumeroRecargas.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jcheckbCartuchoQueimado.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcheckbCartuchoQueimado.setText("Cartucho Queimado");
        jcheckbCartuchoQueimado.setEnabled(false);

        jtaObservacao.setColumns(20);
        jtaObservacao.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtaObservacao.setLineWrap(true);
        jtaObservacao.setRows(5);
        jtaObservacao.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtaObservacao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtaObservacaoFocusLost(evt);
            }
        });
        jScrollPane1.setViewportView(jtaObservacao);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("ObservaÃ§Ã£o: ");

        javax.swing.GroupLayout jpAtualizarItemSolicitacaoRecargaLayout = new javax.swing.GroupLayout(jpAtualizarItemSolicitacaoRecarga);
        jpAtualizarItemSolicitacaoRecarga.setLayout(jpAtualizarItemSolicitacaoRecargaLayout);
        jpAtualizarItemSolicitacaoRecargaLayout.setHorizontalGroup(
            jpAtualizarItemSolicitacaoRecargaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpAtualizarItemSolicitacaoRecargaLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jpAtualizarItemSolicitacaoRecargaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpAtualizarItemSolicitacaoRecargaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpAtualizarItemSolicitacaoRecargaLayout.createSequentialGroup()
                        .addGroup(jpAtualizarItemSolicitacaoRecargaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfCodigoBarras)
                            .addGroup(jpAtualizarItemSolicitacaoRecargaLayout.createSequentialGroup()
                                .addComponent(jrbEscola)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jrbCmei)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jrbOutros))
                            .addComponent(jtfModeloCartucho)
                            .addComponent(jcbNomeEntidade, 0, 231, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jpAtualizarItemSolicitacaoRecargaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpAtualizarItemSolicitacaoRecargaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jDateChooserDataDevolucao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jDateChooserDataRecarga, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jDateChooserDataEntrega, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jftfHoraEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jpAtualizarItemSolicitacaoRecargaLayout.createSequentialGroup()
                        .addGroup(jpAtualizarItemSolicitacaoRecargaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jpAtualizarItemSolicitacaoRecargaLayout.createSequentialGroup()
                                .addComponent(jtfNumeroRecargas, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jcheckbCartuchoQueimado)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(127, 127, 127))
        );
        jpAtualizarItemSolicitacaoRecargaLayout.setVerticalGroup(
            jpAtualizarItemSolicitacaoRecargaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpAtualizarItemSolicitacaoRecargaLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jpAtualizarItemSolicitacaoRecargaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jpAtualizarItemSolicitacaoRecargaLayout.createSequentialGroup()
                        .addGroup(jpAtualizarItemSolicitacaoRecargaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jrbEscola)
                            .addComponent(jrbCmei)
                            .addComponent(jrbOutros)
                            .addComponent(jLabel10)
                            .addComponent(jftfHoraEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpAtualizarItemSolicitacaoRecargaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jtfCodigoBarras, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)))
                    .addComponent(jDateChooserDataEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpAtualizarItemSolicitacaoRecargaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jpAtualizarItemSolicitacaoRecargaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jtfModeloCartucho, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7))
                    .addComponent(jDateChooserDataRecarga, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpAtualizarItemSolicitacaoRecargaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpAtualizarItemSolicitacaoRecargaLayout.createSequentialGroup()
                        .addGroup(jpAtualizarItemSolicitacaoRecargaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jcbNomeEntidade, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpAtualizarItemSolicitacaoRecargaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jtfNumeroRecargas, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcheckbCartuchoQueimado))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpAtualizarItemSolicitacaoRecargaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jDateChooserDataDevolucao, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(59, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jpAtualizarItemSolicitacaoRecargaFundoLayout = new javax.swing.GroupLayout(jpAtualizarItemSolicitacaoRecargaFundo);
        jpAtualizarItemSolicitacaoRecargaFundo.setLayout(jpAtualizarItemSolicitacaoRecargaFundoLayout);
        jpAtualizarItemSolicitacaoRecargaFundoLayout.setHorizontalGroup(
            jpAtualizarItemSolicitacaoRecargaFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jpAtualizarItemSolicitacaoRecarga, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jpAtualizarItemSolicitacaoRecargaFundoLayout.setVerticalGroup(
            jpAtualizarItemSolicitacaoRecargaFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpAtualizarItemSolicitacaoRecargaFundoLayout.createSequentialGroup()
                .addComponent(jpAtualizarItemSolicitacaoRecarga, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpAtualizarItemSolicitacaoRecargaFundo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpAtualizarItemSolicitacaoRecargaFundo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jrbEscolaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbEscolaActionPerformed

        if (jrbEscola.isSelected()) {
            preencheComboEscolas();
            tipoEntidade = "ESCOLA";
        }
    }//GEN-LAST:event_jrbEscolaActionPerformed

    private void jrbCmeiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbCmeiActionPerformed

        if (jrbCmei.isSelected()) {
            preencheComboCmeis();
            tipoEntidade = "CMEI";
        }
    }//GEN-LAST:event_jrbCmeiActionPerformed

    private void jrbOutrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbOutrosActionPerformed

        if (jrbOutros.isSelected()) {
            preencheComboOutros();
            tipoEntidade = "OUTROS";
        }
    }//GEN-LAST:event_jrbOutrosActionPerformed

    private void jtfCodigoBarrasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCodigoBarrasKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            buscaRapidaRecarga();

        }
    }//GEN-LAST:event_jtfCodigoBarrasKeyPressed

    private void jtfCodigoBarrasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCodigoBarrasKeyReleased
        //buscaRapidaRecarga();
    }//GEN-LAST:event_jtfCodigoBarrasKeyReleased

    private void jtfModeloCartuchoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfModeloCartuchoFocusLost
        jtfModeloCartucho.setText(jtfModeloCartucho.getText().toUpperCase());
    }//GEN-LAST:event_jtfModeloCartuchoFocusLost

    private void jtaObservacaoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtaObservacaoFocusLost
        jtaObservacao.setText(jtaObservacao.getText().toUpperCase());
    }//GEN-LAST:event_jtaObservacaoFocusLost

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        fechar();
    }//GEN-LAST:event_formWindowClosing

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        cancelar();
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jbAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlterarActionPerformed
        
        abilitaCampos();

        jbAlterar.setEnabled(false);

        opcao = "alterar";

    }//GEN-LAST:event_jbAlterarActionPerformed

    private void jbFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbFecharActionPerformed
        fechar();
    }//GEN-LAST:event_jbFecharActionPerformed

    private void jbConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbConfirmarActionPerformed
        salvarRecarga();
    }//GEN-LAST:event_jbConfirmarActionPerformed

    /**
     * @param args the command line arguments
     */
    //public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        /*try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jdAtualizarItemSolicitacaoRecarga.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jdAtualizarItemSolicitacaoRecarga.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jdAtualizarItemSolicitacaoRecarga.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jdAtualizarItemSolicitacaoRecarga.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }*/
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        /*java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                jdAtualizarItemSolicitacaoRecarga dialog = new jdAtualizarItemSolicitacaoRecarga(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgTipoEntidade;
    private com.toedter.calendar.JDateChooser jDateChooserDataDevolucao;
    private com.toedter.calendar.JDateChooser jDateChooserDataEntrega;
    private com.toedter.calendar.JDateChooser jDateChooserDataRecarga;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbAlterar;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbConfirmar;
    private javax.swing.JButton jbFechar;
    private javax.swing.JComboBox jcbNomeEntidade;
    private javax.swing.JCheckBox jcheckbCartuchoQueimado;
    private javax.swing.JFormattedTextField jftfHoraEntrega;
    private javax.swing.JPanel jpAtualizarItemSolicitacaoRecarga;
    private javax.swing.JPanel jpAtualizarItemSolicitacaoRecargaFundo;
    private javax.swing.JPanel jpBotoes;
    private javax.swing.JRadioButton jrbCmei;
    private javax.swing.JRadioButton jrbEscola;
    private javax.swing.JRadioButton jrbOutros;
    private javax.swing.JTextArea jtaObservacao;
    private javax.swing.JTextField jtfCodigoBarras;
    private javax.swing.JTextField jtfModeloCartucho;
    private javax.swing.JTextField jtfNumeroRecargas;
    // End of variables declaration//GEN-END:variables

//Outros Metodos===================================================================================================================================
    public void fechar() {
        
        if (!jtfCodigoBarras.getText().isEmpty() || !jtfModeloCartucho.getText().isEmpty()
                || jcbNomeEntidade.getSelectedIndex() != 0 || jDateChooserDataRecarga.getDate() != null) {

            JOptionPane.showMessageDialog(null, "Cancele ou Confime a AtualizaÃ§Ã£o do Item em ediÃ§Ã£o!", "AtenÃ§Ã£o", JOptionPane.WARNING_MESSAGE, null);

        } else {
            
            this.dispose();
            
        }
        
    }
    
    public void cancelar() {

        jrbEscola.setSelected(true);
        preencheComboEscolas();
        
        jtfCodigoBarras.setText("");
        jtfModeloCartucho.setText("");
        jtfNumeroRecargas.setText("0");
        jcbNomeEntidade.setSelectedIndex(0);
        jftfHoraEntrega.setText(getHoraAtual());
        jDateChooserDataRecarga.setDate(null);
        jDateChooserDataDevolucao.setDate(null);
        jDateChooserDataEntrega.setDate(getDateHoje());
        jtaObservacao.setText("");
        jcheckbCartuchoQueimado.setSelected(false);

        abilitaCampos();

        cartucho = null;
        codigoRecarga = 0 ;
        opcao = "salvar";
        jbAlterar.setEnabled(false);
        
        jDateChooserDataEntrega.transferFocusBackward();

    }
    
    public void abilitaCampos() {

        jtfCodigoBarras.setEditable(true);
        jtfModeloCartucho.setEditable(false);
        jcbNomeEntidade.setEnabled(false);
        jDateChooserDataRecarga.setEnabled(true);
        //jDateChooserDataEntrega.setEnabled(true);
        //jDateChooserDataDevolucao.setEnabled(true);
        jtaObservacao.setEditable(true);

    }

    public void desabilitaCampos() {

        jtfCodigoBarras.setEditable(false);
        jtfModeloCartucho.setEditable(false);
        jcbNomeEntidade.setEnabled(false);
        jDateChooserDataEntrega.setEnabled(false);
        jDateChooserDataRecarga.setEnabled(false);
        jDateChooserDataDevolucao.setEnabled(false);

    }
    
    public void preencheComboEscolas() {

        iniciaDao();

        List listaEscolas = new ArrayList();

        jcbNomeEntidade.removeAllItems();
        jcbNomeEntidade.addItem("");

        listaEscolas = dao.listarEscolas(0, "", "");

        for (int i = 0; i < listaEscolas.size(); i++) {
            iniciaEscola();
            escola = (Escola) listaEscolas.get(i);
            jcbNomeEntidade.addItem(escola.getNomeEscola());
        }

    }

    public void preencheComboCmeis() {

        iniciaDao();

        List listaCmeis = new ArrayList();

        jcbNomeEntidade.removeAllItems();
        jcbNomeEntidade.addItem("");

        listaCmeis = dao.listarCmeis(0, "", "");

        for (int i = 0; i < listaCmeis.size(); i++) {
            iniciaCmei();
            cmei = (Cmei) listaCmeis.get(i);
            jcbNomeEntidade.addItem(cmei.getNomeCmei());
        }
    }

    public void preencheComboOutros() {

        iniciaDao();

        List listaOutros = new ArrayList();

        jcbNomeEntidade.removeAllItems();
        jcbNomeEntidade.addItem("");

        listaOutros = dao.listarOutros(0, "", "");

        for (int i = 0; i < listaOutros.size(); i++) {
            iniciaOutro();
            outro = (Outro) listaOutros.get(i);
            jcbNomeEntidade.addItem(outro.getNomeOutro());
        }

    }
    
    public void buscaRapidaRecarga() {

        iniciaDao();
        iniciaCartucho();
        iniciaRecarga();

        Recarga recar = new Recarga();
        
        cartucho = (Cartucho) dao.buscaCartucho(0, 0, 0, "", jtfCodigoBarras.getText(), "", false);
        
        recar = (Recarga) dao.buscaRecarga(0, 0, 0, 0, cartucho.getCodigoCartucho(), "", null, "");

        if (recar == null) {
            
            recar = new Recarga();
            
        }
        
        recar.setCartucho(cartucho);
        //recar.setCodigoBarra(cartucho.getCodigoBarra());
        //recar.setModeloCartucho(cartucho.getModeloCartucho().getNomeModeloCartucho());
        recar.setTipoEntidade(cartucho.getTipoEntidade());
        
        
        switch (recar.getTipoEntidade()) {
            
            case "ESCOLA":
                iniciaEscola();
                tipoEntidade = "ESCOLA";
                jrbEscola.setSelected(true);
                jrbCmei.setSelected(false);
                jrbOutros.setSelected(false);
                preencheComboEscolas();
                
                escola = (Escola) recar.getCartucho().getEscola();
                jcbNomeEntidade.setSelectedItem(escola.getNomeEscola());
                break;
                
            case "CMEI":
                iniciaCmei();
                tipoEntidade = "CMEI";
                jrbCmei.setSelected(true);
                jrbEscola.setSelected(false);
                jrbOutros.setSelected(false);
                preencheComboCmeis();
                
                cmei = (Cmei) recar.getCartucho().getCmei();
                jcbNomeEntidade.setSelectedItem(cmei.getNomeCmei());
                break;
                
            case "OUTROS":
                iniciaOutro();
                tipoEntidade = "OUTROS";
                jrbOutros.setSelected(true);
                jrbCmei.setSelected(false);
                jrbEscola.setSelected(false);
                preencheComboOutros();
                
                outro = (Outro) recar.getCartucho().getOutro();
                jcbNomeEntidade.setSelectedItem(outro.getNomeOutro());
                break;
            
        }
        
        jtfModeloCartucho.setText(recar.getCartucho().getModeloCartucho().getNomeModeloCartucho());
        jcheckbCartuchoQueimado.setSelected(recar.getCartucho().isCartuchoQueimado());
        //jDateChooserDataDevolucao.setDate(recarga.getDataDevolucao());
        jtaObservacao.setText(recar.getObservacao());

        codigoRecarga = recar.getCodigoRecarga();
        recarga.setCodigoRecarga(codigoRecarga);

        if (recar.getDataEntrega() != null && recar.getDataRecarga() == null && recar.getDataDevolucao() == null) {
            
            necessitaInserir = false;
            jftfHoraEntrega.setText(recar.getHoraEntrega());
            jDateChooserDataEntrega.setDate(recar.getDataEntrega());
            //jDateChooserDataRecarga.setDate(getDateHoje());
            jtfNumeroRecargas.setText("" + recar.getNumeroRecargas());

            desabilitaCampos();

            opcao = "alterar";
            
            jbAlterar.setEnabled(true);
            
        } else if (recar.getDataEntrega() != null && recar.getDataRecarga() != null && recar.getDataDevolucao() == null) {

            necessitaInserir = false;
            jftfHoraEntrega.setText(recar.getHoraEntrega());
            jDateChooserDataEntrega.setDate(recar.getDataEntrega());
            jDateChooserDataRecarga.setDate(recar.getDataRecarga());
            //jDateChooserDataDevolucao.setDate(getDateHoje());
            jtfNumeroRecargas.setText("" + recar.getNumeroRecargas());

            jtfCodigoBarras.setEditable(false);
            jtfModeloCartucho.setEditable(false);
            jcbNomeEntidade.setEnabled(false);
            jDateChooserDataEntrega.setEnabled(false);
            jDateChooserDataRecarga.setEnabled(false);

            opcao = "alterar";
            
            jbAlterar.setEnabled(true);

        } else {

            necessitaInserir = true;
            jDateChooserDataEntrega.setDate(getDateHoje());

            jtfNumeroRecargas.setText("" + (recar.getNumeroRecargas() + 1));

            jtfCodigoBarras.setEditable(false);
            jtfModeloCartucho.setEditable(false);
            jcbNomeEntidade.setEnabled(false);
            jDateChooserDataEntrega.setEnabled(false);

        }

        jbCancelar.transferFocusBackward();

    }
    
    public void atualizaHora() {
        jftfHoraEntrega.setText(getHoraAtual());
    }
    
    public void run() {

        for (int i = 0; i == 0; i = 0) {
            try {
                //atualizaNumeroOficio();
                if (opcao.equals("salvar")) {
                    
                    iniciaDao();
                    //DAO dao = new DAO();

                    atualizaHora();
                    
                }

                threadAtualizaHora.sleep(5000);

                //this.finalize();
            } catch (Throwable ex) {
                //Logger.getLogger(AtualizaNumeroOficios.class.getName()).log(Level.SEVERE, null, ex);
                except.setMensagemErro("NÃ£o foi possivel atualizar o nÃºmero da SolicitaÃ§Ã£o!");
            }
        }

    }
    
//Geradores, Validadores===================================================================================================================================
    public void iniciaCartucho() {
        
        if (cartucho == null) {
            cartucho = new Cartucho();
        }
        
    }
    
    public void iniciaCmei() {
        
        
        if (cmei == null) {
            cmei = new Cmei();
        }
        
    }
    
    public void iniciaControleCmei() {
        
        if (controleCmei == null) {
            controleCmei = new ControleCmei();
        }
        
    }
    
    public void iniciaControleEscola() {
        
        if (controleEscola == null) {
            controleEscola = new ControleEscola();
        }
        
    }
    
    public void iniciaControleOutro() {
        
        if (controleOutro == null) {
            controleOutro = new ControleOutro();
        }
        
    }
    
    public void iniciaDao() {
        
        if (dao == null) {
            dao = new DAO();
        }
        
    }
    
    public void iniciaEscola() {
        
        if (escola == null) {
            escola = new Escola();
        }
        
    }
    
    public void iniciaOutro() {
        
        if (outro == null) {
            outro = new Outro();
        }
         
    }
    
    public void iniciaRecarga() {
        
        if (recarga == null) {
            recarga = new Recarga();
        }
        
    }
    
//Getters and Setters===================================================================================================================================
    public Date getDateHoje() {

        GregorianCalendar calendar = new GregorianCalendar();
        Date data = calendar.getTime();

        return data;

    }
    
    public String getHoraAtual() {

        GregorianCalendar calendar = new GregorianCalendar();
        Date data = calendar.getTime();

        String hora;
        String minuto;

        if (data.getHours() < 10) {
            hora = "0" + data.getHours();
        } else {
            hora = String.valueOf(data.getHours());
        }

        if (data.getMinutes() < 10) {
            minuto = "0" + data.getMinutes();
        } else {
            minuto = String.valueOf(data.getMinutes());
        }

        return hora + minuto;

    }
    
    public void setNumeroCaracteres() {

        jtfCodigoBarras.setDocument(new FixedLengthDocument(80));
        jtfModeloCartucho.setDocument(new FixedLengthDocument(60));

    }
    
    public String getCodigoBarras() {
        return codigoBarras;
    }

    public void setCodigoBarras(String codigoBarras) {
        this.codigoBarras = codigoBarras;
    }

    public Date getDataDevolucao() {
        return dataDevolucao;
    }

    public void setDataDevolucao(Date dataDevolucao) {
        this.dataDevolucao = dataDevolucao;
    }

    public Date getDataEntrega() {
        return dataEntrega;
    }

    public void setDataEntrega(Date dataEntrega) {
        this.dataEntrega = dataEntrega;
    }

    public Date getDataRecarga() {
        return dataRecarga;
    }

    public void setDataRecarga(Date dataRecarga) {
        this.dataRecarga = dataRecarga;
    }

    public String getHoraEntrega() {
        return horaEntrega;
    }

    public void setHoraEntrega(String horaEntrega) {
        this.horaEntrega = horaEntrega;
    }

    public String getModeloCartucho() {
        return modeloCartucho;
    }

    public void setModeloCartucho(String modeloCartucho) {
        this.modeloCartucho = modeloCartucho;
    }

    public String getNomeEntidade() {
        return nomeEntidade;
    }

    public void setNomeEntidade(String nomeEntidade) {
        this.nomeEntidade = nomeEntidade;
    }

    public int getNumeroRecargas() {
        return numeroRecargas;
    }

    public void setNumeroRecargas(int numeroRecargas) {
        this.numeroRecargas = numeroRecargas;
    }

    public String getObservacao() {
        return observacao;
    }

    public void setObservacao(String observacao) {
        this.observacao = observacao;
    }

    public String getTipoEntidade() {
        return tipoEntidade;
    }

    public void setTipoEntidade(String tipoEntidade) {
        this.tipoEntidade = tipoEntidade;
    }

    public int getCodigoUsuario() {
        return codigoUsuario;
    }

    public void setCodigoUsuario(int codigoUsuario) {
        this.codigoUsuario = codigoUsuario;
    }
    
//Metodos DAO===================================================================================================================================
    public void salvarRecarga() {
            
        if (necessitaInserir) {
            
            iniciaDao();
            iniciaRecarga();
        
            //recarga.setCartuchoQueimado(jcheckbCartuchoQueimado.isSelected());
            //recarga.setCodigoBarra(jtfCodigoBarras.getText());
            recarga.setDataDevolucao(jDateChooserDataDevolucao.getDate());
            recarga.setDataEntrega(jDateChooserDataEntrega.getDate());
            recarga.setDataRecarga(jDateChooserDataRecarga.getDate());
            recarga.setHoraEntrega(jftfHoraEntrega.getText());
            //recarga.setModeloCartucho(jtfModeloCartucho.getText());
            
            /*switch (tipoEntidade) {
                
                case "ESCOLA":
                    iniciaControleEscola();
                    iniciaEscola();
                    
                    escola = (Escola) dao.busca(escola, controleEscola.getCodigoEscola(jcbNomeEntidade.getSelectedItem().toString()));
                    dao.encerraSessao();
                    recarga.setEscola(escola);
                    break;
                
                case "CMEI":
                    iniciaCmei();
                    iniciaControleCmei();
                    
                    cmei = (Cmei) dao.busca(cmei, controleCmei.getCodigoCmei(jcbNomeEntidade.getSelectedItem().toString()));
                    dao.encerraSessao();
                    recarga.setCmei(cmei);
                    break;
                
                case "OUTROS":
                    iniciaControleOutro();
                    iniciaOutro();
                    
                    outro = (Outro) dao.busca(outro, controleOutro.getCodigoOutro(jcbNomeEntidade.getSelectedItem().toString()));
                    dao.encerraSessao();
                    recarga.setOutro(outro);
                    break;
                
            }*/
            
            recarga.setNumeroRecargas(Integer.parseInt(jtfNumeroRecargas.getText()));
            recarga.setObservacao(jtaObservacao.getText());
            recarga.setTipoEntidade(tipoEntidade);
            
            dao.inserir(recarga, 7, codigoUsuario);
            
        }
        
        modeloCartucho = jtfModeloCartucho.getText();
        codigoBarras = jtfCodigoBarras.getText();
        
        cancelar();
        fechar();
        
    }
    
}
