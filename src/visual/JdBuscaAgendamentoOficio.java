/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package visual;

import controlador.ClasseGeral;
import controlador.ControleCmei;
import controlador.ControleEscola;
import controlador.ControleImagem;
import controlador.ControleOutro;
import controlador.ControleVersao;
import controlador.EditaOrdemTabela;
import dao.DAO;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.print.PrinterException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import modelo.AgendamentoOficio;
import modelo.Cmei;
import modelo.DepartamentoDivisaoSetor;
import modelo.Escola;
import modelo.Outro;
import modelo.Permissoes;
import modelo.Usuario;



/**
 *
 * @author luizam
 */
public class JdBuscaAgendamentoOficio extends javax.swing.JDialog {
    
    private static ControleVersao versao = new ControleVersao();
    private AgendamentoOficio agendamentoOficio;
    private ClasseGeral classeGeral;
    private Cmei cmei;
    private ControleCmei controleCmei;
    private ControleEscola controleEscola;
    private ControleImagem controleImagem = new ControleImagem();
    private ControleOutro controleOutro;
    private DAO dao;
    private DepartamentoDivisaoSetor departamentoDivisaoSetor;
    private EditaOrdemTabela editaOrdemTabela;
    private Escola escola;
    private Outro outro;
    private Usuario usuario;
    
    private int codigoUsuario;
    private String localEntid = "";
    private String tipoEntid = "TODOS";
    private String tipoStat = "";
    private String opcao = "salvar";
    private boolean visualizarTodosAgendamentosOficio;
    
    /**
     * Creates new form jdBuscaAgendamentoOficio
     */
    public JdBuscaAgendamentoOficio(java.awt.Frame parent, boolean modal) {
        super(parent, "Buscar Agendamento de Ofício - " + versao.getVersao() + " - " + versao.getAno(), modal);
        initComponents();

        //Altera icone na barra de titulo
        Toolkit kit = Toolkit.getDefaultToolkit();
        Image img = kit.getImage("C:/SURGI/imagens/SURGI32x32.png");
        this.setIconImage(img);

        //maximiza tela
        //this.setExtendedState(MAXIMIZED_BOTH);

        //centraliza tela
        setSize(getWidth(), getHeight());
        setLocationRelativeTo(null);

        jrbTodosEntidade.setSelected(true);

        jrbTodosStatus.setSelected(true);

        setNumeroAgendamentos(versao.getAno());

        jcbBuscaNomeEntidade.setEnabled(false);

        /*try {
        jftfBuscaDataSolicitacao.setFormatterFactory(getFormatoData());
        } catch (ParseException ex) {
        Logger.getLogger(jdBuscaAgendamento.class.getName()).log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(null, "Não foi possivel formatar o campo data!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE, null);
        }*/
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpBuscaOficio = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbBuscaOficio = new javax.swing.JTable();
        jcbBuscaNomeEntidade = new javax.swing.JComboBox();
        jrbEscola = new javax.swing.JRadioButton();
        jrbCmei = new javax.swing.JRadioButton();
        jDateChooserBuscaSolicitacaoInicio = new com.toedter.calendar.JDateChooser();
        jrbOutros = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        jrbTodosStatus = new javax.swing.JRadioButton();
        jrbAtendidos = new javax.swing.JRadioButton();
        jrbAgendados = new javax.swing.JRadioButton();
        jrbTodosEntidade = new javax.swing.JRadioButton();
        jrbEmAtendimento = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        jYearChooserAno = new com.toedter.calendar.JYearChooser();
        jLabel11 = new javax.swing.JLabel();
        jDateChooserBuscaSolicitacaoTermino = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jcbBuscaNomeDepartamentoDivisaoSetorDestinado = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jtfBuscaNumeroOficio = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jDateChooserBuscaResolucaoInicio = new com.toedter.calendar.JDateChooser();
        jLabel15 = new javax.swing.JLabel();
        jDateChooserBuscaResolucaoTermino = new com.toedter.calendar.JDateChooser();
        jpNrAgendamentosOficio = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        lbAtendidos = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lbAgendados = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lbEmAtendimento = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        lbAgendamentosNaTabela = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lbTotal = new javax.swing.JLabel();
        jpBotoes = new javax.swing.JPanel();
        jbBuscaFechar = new javax.swing.JButton();
        jbBuscaEnviarDados = new javax.swing.JButton();
        jbBuscaCancelar = new javax.swing.JButton();
        jbBuscaPesquisar = new javax.swing.JButton();
        jbBuscaImprimirTabela = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jpBuscaOficio.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Data Solicitação por Período: ");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Data Resolução por Período: ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Tipo de Status: ");

        jtbBuscaOficio.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jtbBuscaOficio.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtbBuscaOficio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ordem", "Nº Ofício", "Tipo de Entidade", "Nome da Entidade", "Problema Informado", "Data Solicitação", "Data Resolução", "Status", "Código"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtbBuscaOficio.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jtbBuscaOficio.setGridColor(new java.awt.Color(204, 204, 204));
        jtbBuscaOficio.setRowHeight(19);
        jtbBuscaOficio.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jtbBuscaOficio.getTableHeader().setReorderingAllowed(false);
        jtbBuscaOficio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbBuscaOficioMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtbBuscaOficio);

        jcbBuscaNomeEntidade.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbBuscaNomeEntidade.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));
        jcbBuscaNomeEntidade.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jrbEscola.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbEscola.setText("Escola");
        jrbEscola.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jrbEscola.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbEscolaActionPerformed(evt);
            }
        });

        jrbCmei.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbCmei.setText("Cmei");
        jrbCmei.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jrbCmei.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbCmeiActionPerformed(evt);
            }
        });

        jDateChooserBuscaSolicitacaoInicio.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDateChooserBuscaSolicitacaoInicio.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jDateChooserBuscaSolicitacaoInicio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jDateChooserBuscaSolicitacaoInicioFocusLost(evt);
            }
        });

        jrbOutros.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbOutros.setText("Outros");
        jrbOutros.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jrbOutros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbOutrosActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Tipo Entidade: ");

        jrbTodosStatus.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbTodosStatus.setSelected(true);
        jrbTodosStatus.setText("Todos");
        jrbTodosStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbTodosStatusActionPerformed(evt);
            }
        });

        jrbAtendidos.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbAtendidos.setText("Atendidos");
        jrbAtendidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbAtendidosActionPerformed(evt);
            }
        });

        jrbAgendados.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbAgendados.setText("Agendados");
        jrbAgendados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbAgendadosActionPerformed(evt);
            }
        });

        jrbTodosEntidade.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbTodosEntidade.setSelected(true);
        jrbTodosEntidade.setText("Todos");
        jrbTodosEntidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbTodosEntidadeActionPerformed(evt);
            }
        });

        jrbEmAtendimento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbEmAtendimento.setText("Em Atendimento");
        jrbEmAtendimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbEmAtendimentoActionPerformed(evt);
            }
        });

        jLabel9.setText("Ano: ");

        jYearChooserAno.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel11.setText("até");

        jDateChooserBuscaSolicitacaoTermino.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDateChooserBuscaSolicitacaoTermino.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Unidade: ");

        jcbBuscaNomeDepartamentoDivisaoSetorDestinado.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbBuscaNomeDepartamentoDivisaoSetorDestinado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));
        jcbBuscaNomeDepartamentoDivisaoSetorDestinado.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jcbBuscaNomeDepartamentoDivisaoSetorDestinado.setEnabled(false);

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel12.setText("Depto./Divisão/Setor Destinado: ");

        jtfBuscaNumeroOficio.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfBuscaNumeroOficio.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtfBuscaNumeroOficio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfBuscaNumeroOficioFocusLost(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel14.setText("Nº Ofício: ");

        jDateChooserBuscaResolucaoInicio.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDateChooserBuscaResolucaoInicio.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jDateChooserBuscaResolucaoInicio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jDateChooserBuscaResolucaoInicioFocusLost(evt);
            }
        });

        jLabel15.setText("até");

        jDateChooserBuscaResolucaoTermino.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDateChooserBuscaResolucaoTermino.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        javax.swing.GroupLayout jpBuscaOficioLayout = new javax.swing.GroupLayout(jpBuscaOficio);
        jpBuscaOficio.setLayout(jpBuscaOficioLayout);
        jpBuscaOficioLayout.setHorizontalGroup(
            jpBuscaOficioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBuscaOficioLayout.createSequentialGroup()
                .addGroup(jpBuscaOficioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpBuscaOficioLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1041, Short.MAX_VALUE))
                    .addGroup(jpBuscaOficioLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(jpBuscaOficioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpBuscaOficioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpBuscaOficioLayout.createSequentialGroup()
                                .addComponent(jrbTodosStatus)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jrbAtendidos)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jrbAgendados)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jrbEmAtendimento))
                            .addGroup(jpBuscaOficioLayout.createSequentialGroup()
                                .addComponent(jrbTodosEntidade)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jrbEscola)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jrbCmei)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jrbOutros))
                            .addGroup(jpBuscaOficioLayout.createSequentialGroup()
                                .addComponent(jDateChooserBuscaSolicitacaoInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jDateChooserBuscaSolicitacaoTermino, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(jLabel9)
                                .addGap(4, 4, 4)
                                .addComponent(jYearChooserAno, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jpBuscaOficioLayout.createSequentialGroup()
                                .addComponent(jDateChooserBuscaResolucaoInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jDateChooserBuscaResolucaoTermino, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jpBuscaOficioLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jpBuscaOficioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel12)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpBuscaOficioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpBuscaOficioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jcbBuscaNomeEntidade, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jcbBuscaNomeDepartamentoDivisaoSetorDestinado, javax.swing.GroupLayout.PREFERRED_SIZE, 677, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jtfBuscaNumeroOficio, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpBuscaOficioLayout.setVerticalGroup(
            jpBuscaOficioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBuscaOficioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpBuscaOficioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jrbTodosEntidade)
                    .addComponent(jrbEscola)
                    .addComponent(jrbCmei)
                    .addComponent(jrbOutros))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpBuscaOficioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jrbTodosStatus)
                    .addComponent(jrbAtendidos)
                    .addComponent(jrbAgendados)
                    .addComponent(jrbEmAtendimento))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpBuscaOficioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jDateChooserBuscaSolicitacaoInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel11)
                    .addComponent(jDateChooserBuscaSolicitacaoTermino, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jYearChooserAno, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpBuscaOficioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jDateChooserBuscaResolucaoTermino, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(jDateChooserBuscaResolucaoInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpBuscaOficioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbBuscaNomeEntidade, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpBuscaOficioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jcbBuscaNomeDepartamentoDivisaoSetorDestinado, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpBuscaOficioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jtfBuscaNumeroOficio, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE)
                .addContainerGap())
        );

        jpNrAgendamentosOficio.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nº de Agendamentos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Atendidos: ");

        lbAtendidos.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbAtendidos.setText("lbAtendidos");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Agendados:");

        lbAgendados.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbAgendados.setText("lbAgendados");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("Em Atendimento: ");

        lbEmAtendimento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbEmAtendimento.setText("lbEmAtendimento");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setText("Agendamentos na Tabela: ");

        lbAgendamentosNaTabela.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbAgendamentosNaTabela.setText("lbAgendamentosNaTabela");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Total:");

        lbTotal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbTotal.setText("lbTotal");

        javax.swing.GroupLayout jpNrAgendamentosOficioLayout = new javax.swing.GroupLayout(jpNrAgendamentosOficio);
        jpNrAgendamentosOficio.setLayout(jpNrAgendamentosOficioLayout);
        jpNrAgendamentosOficioLayout.setHorizontalGroup(
            jpNrAgendamentosOficioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpNrAgendamentosOficioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbTotal)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbAtendidos, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbAgendados, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbEmAtendimento, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbAgendamentosNaTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpNrAgendamentosOficioLayout.setVerticalGroup(
            jpNrAgendamentosOficioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpNrAgendamentosOficioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpNrAgendamentosOficioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(lbTotal)
                    .addComponent(jLabel6)
                    .addComponent(lbAtendidos)
                    .addComponent(lbAgendados)
                    .addComponent(jLabel10)
                    .addComponent(lbEmAtendimento)
                    .addComponent(jLabel13)
                    .addComponent(lbAgendamentosNaTabela)
                    .addComponent(jLabel7))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jpBotoes.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        jbBuscaFechar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbBuscaFechar.setMnemonic('f');
        jbBuscaFechar.setText("Fechar");
        jbBuscaFechar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbBuscaFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscaFecharActionPerformed(evt);
            }
        });

        jbBuscaEnviarDados.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbBuscaEnviarDados.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Enviar.png"))); // NOI18N
        jbBuscaEnviarDados.setMnemonic('d');
        jbBuscaEnviarDados.setText("Enviar Dados");
        jbBuscaEnviarDados.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbBuscaEnviarDados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscaEnviarDadosActionPerformed(evt);
            }
        });

        jbBuscaCancelar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbBuscaCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cancelar.png"))); // NOI18N
        jbBuscaCancelar.setMnemonic('z');
        jbBuscaCancelar.setText("Cancelar");
        jbBuscaCancelar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbBuscaCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscaCancelarActionPerformed(evt);
            }
        });

        jbBuscaPesquisar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbBuscaPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/pesquisar.png"))); // NOI18N
        jbBuscaPesquisar.setMnemonic('p');
        jbBuscaPesquisar.setText("Pesquisar");
        jbBuscaPesquisar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbBuscaPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscaPesquisarActionPerformed(evt);
            }
        });

        jbBuscaImprimirTabela.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbBuscaImprimirTabela.setMnemonic('t');
        jbBuscaImprimirTabela.setText("Imprimir Tabela");
        jbBuscaImprimirTabela.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbBuscaImprimirTabela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscaImprimirTabelaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpBotoesLayout = new javax.swing.GroupLayout(jpBotoes);
        jpBotoes.setLayout(jpBotoesLayout);
        jpBotoesLayout.setHorizontalGroup(
            jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpBotoesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbBuscaImprimirTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbBuscaPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbBuscaCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbBuscaEnviarDados, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbBuscaFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jpBotoesLayout.setVerticalGroup(
            jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbBuscaEnviarDados, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscaFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscaCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscaPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscaImprimirTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpBuscaOficio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jpNrAgendamentosOficio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jpBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jpBuscaOficio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpNrAgendamentosOficio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtbBuscaOficioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbBuscaOficioMouseClicked

        if (evt.getClickCount() == 2) {

            buscaDados();

        }
    }//GEN-LAST:event_jtbBuscaOficioMouseClicked

    private void jrbEscolaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbEscolaActionPerformed

        jcbBuscaNomeEntidade.setEnabled(true);
        if (jrbEscola.isSelected()) {
            preencheComboEscolas();
            tipoEntid = "ESCOLA";
        }
    }//GEN-LAST:event_jrbEscolaActionPerformed

    private void jrbCmeiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbCmeiActionPerformed

        jcbBuscaNomeEntidade.setEnabled(true);
        if (jrbCmei.isSelected()) {
            preencheComboCmeis();
            tipoEntid = "CMEI";
        }
    }//GEN-LAST:event_jrbCmeiActionPerformed

    private void jDateChooserBuscaSolicitacaoInicioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jDateChooserBuscaSolicitacaoInicioFocusLost
        if (jDateChooserBuscaSolicitacaoInicio.getDate() != null) {
            jDateChooserBuscaSolicitacaoTermino.setEnabled(true);
        } else {
            jDateChooserBuscaSolicitacaoTermino.setDate(null);
            jDateChooserBuscaSolicitacaoTermino.setEnabled(false);
        }
    }//GEN-LAST:event_jDateChooserBuscaSolicitacaoInicioFocusLost

    private void jrbOutrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbOutrosActionPerformed

        jcbBuscaNomeEntidade.setEnabled(true);
        if (jrbOutros.isSelected()) {
            preencheComboOutros();
            tipoEntid = "OUTROS";
        }
    }//GEN-LAST:event_jrbOutrosActionPerformed

    private void jrbTodosStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbTodosStatusActionPerformed


        if (jrbTodosStatus.isSelected()) {
            tipoStat = "A";
        }
    }//GEN-LAST:event_jrbTodosStatusActionPerformed

    private void jrbAtendidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbAtendidosActionPerformed

        if (jrbAtendidos.isSelected()) {
            tipoStat = "ATENDIDO";
        }
    }//GEN-LAST:event_jrbAtendidosActionPerformed

    private void jrbAgendadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbAgendadosActionPerformed

        if (jrbAgendados.isSelected()) {
            tipoStat = "AGENDADO";
        }
    }//GEN-LAST:event_jrbAgendadosActionPerformed

    private void jrbTodosEntidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbTodosEntidadeActionPerformed

        jcbBuscaNomeEntidade.setSelectedIndex(0);
        jcbBuscaNomeEntidade.setEnabled(false);
        if (jrbTodosEntidade.isSelected()) {
            tipoEntid = "TODOS";
        }
    }//GEN-LAST:event_jrbTodosEntidadeActionPerformed

    private void jrbEmAtendimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbEmAtendimentoActionPerformed

        if (jrbEmAtendimento.isSelected()) {
            tipoStat = "EM ATENDIMENTO";
        }
    }//GEN-LAST:event_jrbEmAtendimentoActionPerformed

    private void jbBuscaFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscaFecharActionPerformed
        fechar();
    }//GEN-LAST:event_jbBuscaFecharActionPerformed

    private void jbBuscaEnviarDadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscaEnviarDadosActionPerformed
        buscaDados();
        fechar();
    }//GEN-LAST:event_jbBuscaEnviarDadosActionPerformed

    private void jbBuscaCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscaCancelarActionPerformed
        cancelar();
    }//GEN-LAST:event_jbBuscaCancelarActionPerformed

    private void jbBuscaPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscaPesquisarActionPerformed
        pesquisar();
        setNumeroAgendamentos(versao.getAno());
    }//GEN-LAST:event_jbBuscaPesquisarActionPerformed

    private void jbBuscaImprimirTabelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscaImprimirTabelaActionPerformed
        try {

            if (jtbBuscaOficio.getRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "Não há nada na Tabela para ser impresso!", "Atenção", JOptionPane.WARNING_MESSAGE, null);
            } else {
                jtbBuscaOficio.print();
            }

        } catch (PrinterException ex) {
            Logger.getLogger(JdBuscaAgendamento.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbBuscaImprimirTabelaActionPerformed

    private void jtfBuscaNumeroOficioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfBuscaNumeroOficioFocusLost
        jtfBuscaNumeroOficio.setText(jtfBuscaNumeroOficio.getText().toUpperCase());
    }//GEN-LAST:event_jtfBuscaNumeroOficioFocusLost

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        fechar();
    }//GEN-LAST:event_formWindowClosing

    private void jDateChooserBuscaResolucaoInicioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jDateChooserBuscaResolucaoInicioFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jDateChooserBuscaResolucaoInicioFocusLost

    /**
     * @param args the command line arguments
     */
    //public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        /*try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jdBuscaAgendamentoOficio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jdBuscaAgendamentoOficio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jdBuscaAgendamentoOficio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jdBuscaAgendamentoOficio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }*/
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        /*java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                jdBuscaAgendamentoOficio dialog = new jdBuscaAgendamentoOficio(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser jDateChooserBuscaResolucaoInicio;
    private com.toedter.calendar.JDateChooser jDateChooserBuscaResolucaoTermino;
    private com.toedter.calendar.JDateChooser jDateChooserBuscaSolicitacaoInicio;
    private com.toedter.calendar.JDateChooser jDateChooserBuscaSolicitacaoTermino;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JYearChooser jYearChooserAno;
    private javax.swing.JButton jbBuscaCancelar;
    private javax.swing.JButton jbBuscaEnviarDados;
    private javax.swing.JButton jbBuscaFechar;
    private javax.swing.JButton jbBuscaImprimirTabela;
    private javax.swing.JButton jbBuscaPesquisar;
    private javax.swing.JComboBox jcbBuscaNomeDepartamentoDivisaoSetorDestinado;
    private javax.swing.JComboBox jcbBuscaNomeEntidade;
    private javax.swing.JPanel jpBotoes;
    private javax.swing.JPanel jpBuscaOficio;
    private javax.swing.JPanel jpNrAgendamentosOficio;
    private javax.swing.JRadioButton jrbAgendados;
    private javax.swing.JRadioButton jrbAtendidos;
    private javax.swing.JRadioButton jrbCmei;
    private javax.swing.JRadioButton jrbEmAtendimento;
    private javax.swing.JRadioButton jrbEscola;
    private javax.swing.JRadioButton jrbOutros;
    private javax.swing.JRadioButton jrbTodosEntidade;
    private javax.swing.JRadioButton jrbTodosStatus;
    private javax.swing.JTable jtbBuscaOficio;
    private javax.swing.JTextField jtfBuscaNumeroOficio;
    private javax.swing.JLabel lbAgendados;
    private javax.swing.JLabel lbAgendamentosNaTabela;
    private javax.swing.JLabel lbAtendidos;
    private javax.swing.JLabel lbEmAtendimento;
    private javax.swing.JLabel lbTotal;
    // End of variables declaration//GEN-END:variables

//Outros Metodos ===========================================================================================================================================
    public void fechar() {

        cancelar();
        dao = null;
        this.dispose();

    }

    public void cancelar() {

        DefaultTableModel modelo = (DefaultTableModel) jtbBuscaOficio.getModel();

        jtfBuscaNumeroOficio.setText("");
        jcbBuscaNomeEntidade.setSelectedIndex(0);
        jDateChooserBuscaSolicitacaoInicio.setDate(null);
        //jftfBuscaDataSolicitacao.setText("");
        jrbEscola.setSelected(false);
        localEntid = "";
        tipoEntid = "TODOS";
        jrbCmei.setSelected(false);
        jrbOutros.setSelected(false);
        jrbTodosStatus.setSelected(true);
        tipoStat = "A";
        jrbAgendados.setSelected(false);
        jrbAtendidos.setSelected(false);
        jrbTodosEntidade.setSelected(true);
        preencheComboEscolas();
        setNumeroAgendamentosNaTabela("0");
        
        abilitaCampoSetor();

        modelo.setRowCount(0);

    }

    public void pesquisar() {

        DefaultTableModel modelo = (DefaultTableModel) jtbBuscaOficio.getModel();
        final TableRowSorter<TableModel> tabelaSorter = new TableRowSorter<TableModel>(modelo);
        jtbBuscaOficio.setRowSorter(tabelaSorter);
        
        iniciaDao();
        AgendamentoOficio agendOficio;
        DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
        List listaAgendamentoOficio = new ArrayList();
        
        int codigoCmei = 0;
        int codigoDeptoDivSet;
        int codigoEscola = 0;
        int codigoOutro = 0;
        String nomeEntid;
        Date dataSolicInicio;
        Date dataSolicTermino;
        Date dataResolInicio;
        Date dataResolTermino;
        localEntid = jtfBuscaNumeroOficio.getText();

        if (jcbBuscaNomeDepartamentoDivisaoSetorDestinado.getSelectedIndex() == 0) {
            codigoDeptoDivSet = 0;
        } else {
            iniciaDepartamentoDivisaoSetor();
            
            departamentoDivisaoSetor = (DepartamentoDivisaoSetor) dao.buscaDepartamentoDivisaoSetor(0, jcbBuscaNomeDepartamentoDivisaoSetorDestinado.getSelectedItem().toString());
            
            codigoDeptoDivSet = departamentoDivisaoSetor.getCodigoDepartamentoDivisaoSetor();
        }
        
        if (jDateChooserBuscaSolicitacaoInicio.getDate() == null) {
            dataSolicInicio = null;
        } else {
            dataSolicInicio = jDateChooserBuscaSolicitacaoInicio.getDate();
        }
        
        if (jDateChooserBuscaSolicitacaoTermino.getDate() == null) {
            dataSolicTermino = null;
        } else {
            dataSolicTermino = jDateChooserBuscaSolicitacaoTermino.getDate();
        }
        
        if (jDateChooserBuscaResolucaoInicio.getDate() == null) {
            dataResolInicio = null;
        } else {
            dataResolInicio = jDateChooserBuscaResolucaoInicio.getDate();
        }
        
        if (jDateChooserBuscaResolucaoTermino.getDate() == null) {
            dataResolTermino = null;
        } else {
            dataResolTermino = jDateChooserBuscaResolucaoTermino.getDate();
        }

        if (jcbBuscaNomeEntidade.getSelectedIndex() == 0) {
            
            switch (tipoEntid) {
                
                case "CMEI":
                    iniciaControleCmei();
                    codigoCmei = controleCmei.getCodigoCmei(jcbBuscaNomeEntidade.getSelectedItem().toString());
                    break;
                    
                case "ESCOLA":
                    iniciaControleEscola();
                    codigoEscola = controleEscola.getCodigoEscola(jcbBuscaNomeEntidade.getSelectedItem().toString());
                    break;
                    
                case "OUTROS":
                    iniciaOutro();
                    codigoOutro = controleOutro.getCodigoOutro(jcbBuscaNomeEntidade.getSelectedItem().toString());
                    break;
                
            }
            
        } 
        
        listaAgendamentoOficio = dao.listarAgendamentoOficio(codigoCmei, codigoEscola, codigoOutro, dataSolicInicio, dataSolicTermino, dataResolInicio, dataResolTermino, tipoEntid, tipoStat, String.valueOf(jYearChooserAno.getYear()), codigoDeptoDivSet);

        //listaAgendamento = dao.listarAgendamento(nomeEntid, new java.sql.Date(dataSolic.getTime()), tipoEntid);Usando jFormatedTextField

        modelo.setRowCount(0);
        iniciaEditaOrdemTabela();

        for (int i = 0; i < listaAgendamentoOficio.size(); i++) {

            String nomeUnidade = "";
            
            agendOficio = (AgendamentoOficio) listaAgendamentoOficio.get(i);

            switch (agendOficio.getTipoEntidade()) {
                
                case "ESCOLA":
                    iniciaEscola();
                    escola = (Escola) agendOficio.getEscola();
                    nomeUnidade = escola.getNomeEscola();
                    break;
                    
                case "CMEI":
                    iniciaCmei();
                    cmei = (Cmei) agendOficio.getCmei();
                    nomeUnidade = cmei.getNomeCmei();
                    break;
                    
                case "OUTROS":
                    iniciaOutro();
                    outro = (Outro) agendOficio.getOutro();
                    nomeUnidade = outro.getNomeOutro();
                    break;
                
            }
            
            modelo.addRow(new String[]{editaOrdemTabela.editaOrdem(i + 1), String.valueOf(agendOficio.getNumeroOficio()), agendOficio.getTipoEntidade(), nomeUnidade, agendOficio.getProblemaInformado(), String.valueOf(agendOficio.getDataSolicitacao()), String.valueOf(agendOficio.getDataResolucao()), agendOficio.getStatus(), String.valueOf(agendOficio.getCodigoAgendamentoOficio())});

        }

        if (jtbBuscaOficio.getRowCount() > 0) {
            jtbBuscaOficio.getSelectionModel().setSelectionInterval(0, 0);
        } else {
            iniciaClasseGeral();
            
            classeGeral.msgInforma("Não há Agendamento de Ofício com estes dados!");
        }

        setNumeroAgendamentosNaTabela(String.valueOf(modelo.getRowCount()));

    }

    public void buscaDados() {

        iniciaDao();
        iniciaAgendamentoOficio();
        //DAO dao = new DAO();

        int codigo;

        codigo = Integer.valueOf((String) jtbBuscaOficio.getValueAt(jtbBuscaOficio.getSelectedRow(), 8));

        agendamentoOficio = (AgendamentoOficio) dao.busca(agendamentoOficio, codigo);
        dao.encerraSessao();

    }

    /*public void preencheCombo() {

    if (jcbBuscaTipoEntidade.getSelectedIndex() == 0) {
    preencheComboEscolas();
    } else {
    preencheComboCmeis();
    }

    }*/
    public void preencheComboEscolas() {

        iniciaDao();
        
        List listaEscolas = new ArrayList();

        jcbBuscaNomeEntidade.removeAllItems();
        jcbBuscaNomeEntidade.addItem("");

        listaEscolas = dao.listarEscolas(0, "", "");

        for (int i = 0; i < listaEscolas.size(); i++) {
            iniciaEscola();
            escola = (Escola) listaEscolas.get(i);
            jcbBuscaNomeEntidade.addItem(escola.getNomeEscola());
        }

    }

    public void preencheComboCmeis() {

        iniciaDao();
        
        List listaCmeis = new ArrayList();

        jcbBuscaNomeEntidade.removeAllItems();
        jcbBuscaNomeEntidade.addItem("");

        listaCmeis = dao.listarCmeis(0, "", "");

        for (int i = 0; i < listaCmeis.size(); i++) {
            iniciaCmei();
            cmei = (Cmei) listaCmeis.get(i);
            jcbBuscaNomeEntidade.addItem(cmei.getNomeCmei());
        }

    }

    public void preencheComboOutros() {

        iniciaDao();
        
        List listaOutros = new ArrayList();

        jcbBuscaNomeEntidade.removeAllItems();
        jcbBuscaNomeEntidade.addItem("");

        listaOutros = dao.listarOutros(0, "", "");

        for (int i = 0; i < listaOutros.size(); i++) {
            iniciaOutro();
            outro = (Outro) listaOutros.get(i);
            jcbBuscaNomeEntidade.addItem(outro.getNomeOutro());
        }

    }
    
    public void preencheComboSetor() {
        
        iniciaDao();

        List listaDeptoDivSet = new ArrayList();

        jcbBuscaNomeDepartamentoDivisaoSetorDestinado.removeAllItems();
        jcbBuscaNomeDepartamentoDivisaoSetorDestinado.addItem("");

        listaDeptoDivSet = dao.listarDepartamentoDivisaoSetor(0, "");

        for (int i = 0; i < listaDeptoDivSet.size(); i++) {
            iniciaDepartamentoDivisaoSetor();
            departamentoDivisaoSetor = (DepartamentoDivisaoSetor) listaDeptoDivSet.get(i);
            jcbBuscaNomeDepartamentoDivisaoSetorDestinado.addItem(departamentoDivisaoSetor.getNomeDepartamentoDivisaoSetor());
        }
        
    }
    
    public void abilitaCampoSetor() {
        
        iniciaDao();
        iniciaDepartamentoDivisaoSetor();
        iniciaUsuario();
        
        usuario = (Usuario) dao.busca(usuario, codigoUsuario);
        dao.encerraSessao();
        
        departamentoDivisaoSetor = usuario.getDepartamentoDivisaoSetor();
        jcbBuscaNomeDepartamentoDivisaoSetorDestinado.setSelectedItem(departamentoDivisaoSetor.getNomeDepartamentoDivisaoSetor());
        
        if (visualizarTodosAgendamentosOficio) {
            jcbBuscaNomeDepartamentoDivisaoSetorDestinado.setEnabled(true);
        }
        
    }

//Geradores, Validadores===========================================================================================================================================
    public void iniciaAgendamentoOficio() {
        
        if (agendamentoOficio == null) {
            agendamentoOficio = new AgendamentoOficio();
        }
        
    }
    
    public void iniciaClasseGeral() {
        
        if (classeGeral == null) {
            classeGeral = new ClasseGeral();
        }
        
    }
    
    private void iniciaCmei() {
        
        if (cmei == null) {
            cmei = new Cmei();
        }
        
    }
    
    public void iniciaControleCmei() {
        
        if (controleCmei == null) {
            controleCmei = new ControleCmei();
        }
        
    }
    
    public void iniciaControleEscola() {
        
        if (controleEscola == null) {
            controleEscola = new ControleEscola();
        }
        
    }
    
    public void iniciaControleOutro() {
        
        if (controleOutro == null) {
            controleOutro = new ControleOutro();
        }
        
    }
    
    private void iniciaDepartamentoDivisaoSetor() {
        
        if (departamentoDivisaoSetor == null) {
            departamentoDivisaoSetor = new DepartamentoDivisaoSetor();
        }
        
    }
    
    public void iniciaEditaOrdemTabela() {
        
        if (editaOrdemTabela == null) {
            editaOrdemTabela = new EditaOrdemTabela();
        }
        
    }
    
    public void iniciaEscola() {
        
        if (escola == null) {
            escola = new Escola();
        }
        
    }
    
    public void iniciaOutro() {
        
        if (outro == null) {
            outro = new Outro();
        }
        
    }
    
    public void iniciaUsuario() {
        
        if (usuario == null) {
            usuario = new Usuario();
        }
        
    }
    
//Getters and Setters===========================================================================================================================================
    public void setNumeroAgendamentos(String ano) {

        iniciaDao();
        //DAO dao = new DAO();

        lbTotal.setText("" + dao.getNumeroAgendamentosOficio(ano));
        lbAtendidos.setText("" + dao.getNumeroAgendamentosOficioAtendidos(ano));
        lbAgendados.setText("" + dao.getNumeroAgendamentosOficioAgendados(ano));
        lbEmAtendimento.setText("" + dao.getNumeroAgendamentosOficioEmAtendimento(ano));

    }

    public void setNumeroAgendamentosNaTabela(String numeroAgendamentosNaTabela) {

        lbAgendamentosNaTabela.setText(numeroAgendamentosNaTabela);

    }

    public int getCodigoUsuario() {
        return codigoUsuario;
    }

    public void setCodigoUsuario(int codigoUsuario) {
        this.codigoUsuario = codigoUsuario;
        preencheComboSetor();
        getPermissoes();
        abilitaCampoSetor();
        setNumeroAgendamentosNaTabela("0");
    }

    public AgendamentoOficio getAgendamentoOficio() {

        return agendamentoOficio;

    }

    public void setAgendamentoOficio() {
        agendamentoOficio = null;
    }

    public void getPermissoes() {
        Permissoes permissoes;
        iniciaDao();
        //DAO dao = new DAO();

        permissoes = (Permissoes) dao.buscaPermissoes(getCodigoUsuario());

        visualizarTodosAgendamentosOficio = permissoes.isVisualizarTodosAgendamentosOficio();
        
    }

//Metodos DAO===========================================================================================================================================
    public void iniciaDao() {

        if (dao == null) {
            dao = new DAO();
        }

    }

    public void atualizar() {

        iniciaDao();
        iniciaAgendamentoOficio();

        agendamentoOficio.setStatus("EM ATENDIMENTO");

        dao.atualizar(agendamentoOficio, 7, codigoUsuario);
        pesquisar();

    }
    
}
