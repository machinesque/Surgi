/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * jdBuscaAgendamento.java
 *
 * Created on 02/02/2010, 09:10:34
 */
package visual;

import controlador.*;
import dao.DAO;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.print.PrinterException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import modelo.Agendamento;
import modelo.Cmei;
import modelo.Escola;
import modelo.Outro;
import modelo.Permissoes;

/**
 *
 * @author luizam
 */
public class JdBuscaAgendamento extends javax.swing.JDialog {

    private static ControleVersao versao = new ControleVersao();
    private Agendamento agendamento;
    private ClasseGeral classeGeral;
    private Cmei cmei;
    private ControleCmei controleCmei;
    private ControleEscola controleEscola;
    private ControleImagem controleImagem = new ControleImagem();
    private ControleOutro controleOutro;
    private DAO dao;
    private EditaOrdemTabela editaOrdemTabela;
    private Escola escola;
    private Log log;
    private Outro outro;

    private int codigoUsuario;
    private String tipoEntid = "";
    private String tipoStat = "";
    private String tipoAgend = "AGENDAMENTO";
    private String opcao = "salvar";
    private boolean agendarAgendamento;

    /** Creates new form jdBuscaAgendamento */
    public JdBuscaAgendamento(java.awt.Frame parent, boolean modal) {
        super(parent, "Buscar Agendamento - " + versao.getVersao() + " - " + versao.getAno(), modal);
        initComponents();

        //Altera icone na barra de titulo
        Toolkit kit = Toolkit.getDefaultToolkit();
        Image img = kit.getImage("C:/SURGI/imagens/SURGI32x32.png");
        this.setIconImage(img);

        //centraliza tela
        setSize(getWidth(), getHeight());
        setLocationRelativeTo(null);

        jrbTodosEntidade.setSelected(true);

        jrbTodosStatus.setSelected(true);

        setNumeroAgendamentos(versao.getAno());

        jcbBuscaNomeEntidade.setEnabled(false);

        /*try {
        jftfBuscaDataSolicitacao.setFormatterFactory(getFormatoData());
        } catch (ParseException ex) {
        Logger.getLogger(jdBuscaAgendamento.class.getName()).log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(null, "Não foi possivel formatar o campo data!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE, null);
        }*/

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgTipoEntidade = new javax.swing.ButtonGroup();
        btgTipoStatus = new javax.swing.ButtonGroup();
        jpmBuscaAgendamento = new javax.swing.JPopupMenu();
        jmiAtender = new javax.swing.JMenuItem();
        btgTipoAgendamento = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jbBuscaFechar = new javax.swing.JButton();
        jbBuscaEnviarDados = new javax.swing.JButton();
        jbBuscaCancelar = new javax.swing.JButton();
        jbBuscaPesquisar = new javax.swing.JButton();
        jbBuscaImprimirTabela = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbBuscaAgendamento = new javax.swing.JTable();
        jcbBuscaNomeEntidade = new javax.swing.JComboBox();
        jrbEscola = new javax.swing.JRadioButton();
        jrbCmei = new javax.swing.JRadioButton();
        jDateChooserBuscaSolicitacaoInicio = new com.toedter.calendar.JDateChooser();
        jrbOutros = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        jrbTodosStatus = new javax.swing.JRadioButton();
        jrbAtendidos = new javax.swing.JRadioButton();
        jrbAgendados = new javax.swing.JRadioButton();
        jrbTodosEntidade = new javax.swing.JRadioButton();
        jrbEmAtendimento = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        jrbTodosTipoAgendamento = new javax.swing.JRadioButton();
        jrbNormalTipoAgendamento = new javax.swing.JRadioButton();
        jrbPontoDigitalTipoAgendamento = new javax.swing.JRadioButton();
        jLabel11 = new javax.swing.JLabel();
        jYearChooserAno = new com.toedter.calendar.JYearChooser();
        jLabel12 = new javax.swing.JLabel();
        jDateChooserBuscaSolicitacaoTermino = new com.toedter.calendar.JDateChooser();
        jrbOficioTipoAgendamento = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        jDateChooserBuscaResolucaoInicio = new com.toedter.calendar.JDateChooser();
        jLabel14 = new javax.swing.JLabel();
        jDateChooserBuscaResolucaoTermino = new com.toedter.calendar.JDateChooser();
        jpNrAgendamentos = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        lbTotal = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lbAtendidos = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lbEmAtendimento = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lbAgendados = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        lbAgendamentosNaTabela = new javax.swing.JLabel();

        jmiAtender.setText("Atender");
        jmiAtender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAtenderActionPerformed(evt);
            }
        });
        jpmBuscaAgendamento.add(jmiAtender);

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        jbBuscaFechar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbBuscaFechar.setMnemonic('f');
        jbBuscaFechar.setText("Fechar");
        jbBuscaFechar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbBuscaFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscaFecharActionPerformed(evt);
            }
        });

        jbBuscaEnviarDados.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbBuscaEnviarDados.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Enviar.png"))); // NOI18N
        jbBuscaEnviarDados.setMnemonic('d');
        jbBuscaEnviarDados.setText("Enviar Dados");
        jbBuscaEnviarDados.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbBuscaEnviarDados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscaEnviarDadosActionPerformed(evt);
            }
        });

        jbBuscaCancelar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbBuscaCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cancelar.png"))); // NOI18N
        jbBuscaCancelar.setMnemonic('z');
        jbBuscaCancelar.setText("Cancelar");
        jbBuscaCancelar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbBuscaCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscaCancelarActionPerformed(evt);
            }
        });

        jbBuscaPesquisar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbBuscaPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/pesquisar.png"))); // NOI18N
        jbBuscaPesquisar.setMnemonic('p');
        jbBuscaPesquisar.setText("Pesquisar");
        jbBuscaPesquisar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbBuscaPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscaPesquisarActionPerformed(evt);
            }
        });

        jbBuscaImprimirTabela.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbBuscaImprimirTabela.setMnemonic('t');
        jbBuscaImprimirTabela.setText("Imprimir Tabela");
        jbBuscaImprimirTabela.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbBuscaImprimirTabela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscaImprimirTabelaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbBuscaImprimirTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbBuscaPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbBuscaCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbBuscaEnviarDados, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbBuscaFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbBuscaEnviarDados, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscaFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscaCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscaPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscaImprimirTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Data Solicitação Período: ");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Unidade: ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Tipo de Status: ");

        jtbBuscaAgendamento.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jtbBuscaAgendamento.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtbBuscaAgendamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ordem", "Tipo de Entidade", "Nome da Entidade", "Problema Informado", "Data Solicitação", "Data Resolução", "Status", "Código"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtbBuscaAgendamento.setToolTipText("Existem opções clicando com o botão direito na tabela");
        jtbBuscaAgendamento.setComponentPopupMenu(jpmBuscaAgendamento);
        jtbBuscaAgendamento.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jtbBuscaAgendamento.setGridColor(new java.awt.Color(204, 204, 204));
        jtbBuscaAgendamento.setRowHeight(19);
        jtbBuscaAgendamento.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jtbBuscaAgendamento.getTableHeader().setReorderingAllowed(false);
        jtbBuscaAgendamento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbBuscaAgendamentoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtbBuscaAgendamento);

        jcbBuscaNomeEntidade.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbBuscaNomeEntidade.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));
        jcbBuscaNomeEntidade.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btgTipoEntidade.add(jrbEscola);
        jrbEscola.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbEscola.setText("Escola");
        jrbEscola.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jrbEscola.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbEscolaActionPerformed(evt);
            }
        });

        btgTipoEntidade.add(jrbCmei);
        jrbCmei.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbCmei.setText("Cmei");
        jrbCmei.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jrbCmei.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbCmeiActionPerformed(evt);
            }
        });

        jDateChooserBuscaSolicitacaoInicio.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDateChooserBuscaSolicitacaoInicio.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jDateChooserBuscaSolicitacaoInicio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jDateChooserBuscaSolicitacaoInicioFocusLost(evt);
            }
        });

        btgTipoEntidade.add(jrbOutros);
        jrbOutros.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbOutros.setText("Outros");
        jrbOutros.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jrbOutros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbOutrosActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Tipo Entidade: ");

        btgTipoStatus.add(jrbTodosStatus);
        jrbTodosStatus.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbTodosStatus.setSelected(true);
        jrbTodosStatus.setText("Todos");
        jrbTodosStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbTodosStatusActionPerformed(evt);
            }
        });

        btgTipoStatus.add(jrbAtendidos);
        jrbAtendidos.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbAtendidos.setText("Atendidos");
        jrbAtendidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbAtendidosActionPerformed(evt);
            }
        });

        btgTipoStatus.add(jrbAgendados);
        jrbAgendados.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbAgendados.setText("Agendados");
        jrbAgendados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbAgendadosActionPerformed(evt);
            }
        });

        btgTipoEntidade.add(jrbTodosEntidade);
        jrbTodosEntidade.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbTodosEntidade.setSelected(true);
        jrbTodosEntidade.setText("Todos");
        jrbTodosEntidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbTodosEntidadeActionPerformed(evt);
            }
        });

        btgTipoStatus.add(jrbEmAtendimento);
        jrbEmAtendimento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbEmAtendimento.setText("Em Atendimento");
        jrbEmAtendimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbEmAtendimentoActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("Tipo Agendamento: ");

        btgTipoAgendamento.add(jrbTodosTipoAgendamento);
        jrbTodosTipoAgendamento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbTodosTipoAgendamento.setSelected(true);
        jrbTodosTipoAgendamento.setText("Todos");
        jrbTodosTipoAgendamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbTodosTipoAgendamentoActionPerformed(evt);
            }
        });

        btgTipoAgendamento.add(jrbNormalTipoAgendamento);
        jrbNormalTipoAgendamento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbNormalTipoAgendamento.setText("Normal");
        jrbNormalTipoAgendamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbNormalTipoAgendamentoActionPerformed(evt);
            }
        });

        btgTipoAgendamento.add(jrbPontoDigitalTipoAgendamento);
        jrbPontoDigitalTipoAgendamento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbPontoDigitalTipoAgendamento.setText("Ponto Digital");
        jrbPontoDigitalTipoAgendamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbPontoDigitalTipoAgendamentoActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("Ano: ");

        jYearChooserAno.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jYearChooserAno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jYearChooserAnoMouseExited(evt);
            }
        });
        jYearChooserAno.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jYearChooserAnoFocusLost(evt);
            }
        });

        jLabel12.setText("até");

        jDateChooserBuscaSolicitacaoTermino.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDateChooserBuscaSolicitacaoTermino.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        btgTipoAgendamento.add(jrbOficioTipoAgendamento);
        jrbOficioTipoAgendamento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbOficioTipoAgendamento.setText("Ofício");
        jrbOficioTipoAgendamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbOficioTipoAgendamentoActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Data Resolução Período: ");

        jDateChooserBuscaResolucaoInicio.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDateChooserBuscaResolucaoInicio.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jDateChooserBuscaResolucaoInicio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jDateChooserBuscaResolucaoInicioFocusLost(evt);
            }
        });

        jLabel14.setText("até");

        jDateChooserBuscaResolucaoTermino.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDateChooserBuscaResolucaoTermino.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jrbTodosStatus)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jrbAtendidos)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jrbAgendados)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jrbEmAtendimento))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jrbTodosEntidade)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jrbEscola)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jrbCmei)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jrbOutros))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jrbTodosTipoAgendamento)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jrbNormalTipoAgendamento)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jrbPontoDigitalTipoAgendamento)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jrbOficioTipoAgendamento))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jDateChooserBuscaSolicitacaoInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel12)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jDateChooserBuscaSolicitacaoTermino, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jDateChooserBuscaResolucaoInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel14)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jDateChooserBuscaResolucaoTermino, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(27, 27, 27)
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jYearChooserAno, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jcbBuscaNomeEntidade, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jrbTodosTipoAgendamento)
                    .addComponent(jrbNormalTipoAgendamento)
                    .addComponent(jrbPontoDigitalTipoAgendamento)
                    .addComponent(jrbOficioTipoAgendamento))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jrbTodosEntidade)
                    .addComponent(jrbEscola)
                    .addComponent(jrbCmei)
                    .addComponent(jrbOutros))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jrbTodosStatus)
                    .addComponent(jrbAtendidos)
                    .addComponent(jrbAgendados)
                    .addComponent(jrbEmAtendimento))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jDateChooserBuscaSolicitacaoInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel12)
                    .addComponent(jDateChooserBuscaSolicitacaoTermino, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jYearChooserAno, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel4)
                    .addComponent(jDateChooserBuscaResolucaoInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(jDateChooserBuscaResolucaoTermino, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel2)
                    .addComponent(jcbBuscaNomeEntidade, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE)
                .addContainerGap())
        );

        jpNrAgendamentos.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nº de Agendamentos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        jpNrAgendamentos.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Total:");

        lbTotal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbTotal.setText("lbTotal");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Atendidos: ");

        lbAtendidos.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbAtendidos.setText("lbAtendidos");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("Em Atendimento: ");

        lbEmAtendimento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbEmAtendimento.setText("lbEmAtendimento");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Agendados:");

        lbAgendados.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbAgendados.setText("lbAgendados");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setText("Agendamentos na Tabela: ");

        lbAgendamentosNaTabela.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbAgendamentosNaTabela.setText("lbAgendamentosNaTabela");

        javax.swing.GroupLayout jpNrAgendamentosLayout = new javax.swing.GroupLayout(jpNrAgendamentos);
        jpNrAgendamentos.setLayout(jpNrAgendamentosLayout);
        jpNrAgendamentosLayout.setHorizontalGroup(
            jpNrAgendamentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpNrAgendamentosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbTotal)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbAtendidos, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbEmAtendimento, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbAgendados, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbAgendamentosNaTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(293, Short.MAX_VALUE))
        );
        jpNrAgendamentosLayout.setVerticalGroup(
            jpNrAgendamentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpNrAgendamentosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpNrAgendamentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpNrAgendamentosLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jpNrAgendamentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(lbTotal))
                        .addGap(36, 36, 36))
                    .addGroup(jpNrAgendamentosLayout.createSequentialGroup()
                        .addGroup(jpNrAgendamentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(lbAtendidos)
                            .addComponent(jLabel10)
                            .addComponent(lbEmAtendimento)
                            .addComponent(jLabel7)
                            .addComponent(lbAgendados)
                            .addComponent(jLabel13)
                            .addComponent(lbAgendamentosNaTabela))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jpNrAgendamentos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpNrAgendamentos, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        fechar();
    }//GEN-LAST:event_formWindowClosing

    private void jbBuscaFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscaFecharActionPerformed
        fechar();
    }//GEN-LAST:event_jbBuscaFecharActionPerformed

    private void jbBuscaPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscaPesquisarActionPerformed
        pesquisar();
        setNumeroAgendamentos(versao.getAno());
    }//GEN-LAST:event_jbBuscaPesquisarActionPerformed

    private void jbBuscaCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscaCancelarActionPerformed
        cancelar();
    }//GEN-LAST:event_jbBuscaCancelarActionPerformed

    private void jbBuscaEnviarDadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscaEnviarDadosActionPerformed
        buscaDados();
        fechar();
    }//GEN-LAST:event_jbBuscaEnviarDadosActionPerformed

    private void jrbEscolaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbEscolaActionPerformed

        jcbBuscaNomeEntidade.setEnabled(true);
        if (jrbEscola.isSelected()) {
            preencheComboEscolas();
            tipoEntid = "ESCOLA";
        }

    }//GEN-LAST:event_jrbEscolaActionPerformed

    private void jrbCmeiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbCmeiActionPerformed

        jcbBuscaNomeEntidade.setEnabled(true);
        if (jrbCmei.isSelected()) {
            preencheComboCmeis();
            tipoEntid = "CMEI";
        }

    }//GEN-LAST:event_jrbCmeiActionPerformed

    private void jrbOutrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbOutrosActionPerformed

        jcbBuscaNomeEntidade.setEnabled(true);
        if (jrbOutros.isSelected()) {
            preencheComboOutros();
            tipoEntid = "OUTROS";
        }

    }//GEN-LAST:event_jrbOutrosActionPerformed

    private void jrbTodosStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbTodosStatusActionPerformed

        if (jrbTodosStatus.isSelected()) {
            tipoStat = "A";
        }

    }//GEN-LAST:event_jrbTodosStatusActionPerformed

    private void jrbAtendidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbAtendidosActionPerformed

        if (jrbAtendidos.isSelected()) {
            tipoStat = "ATENDIDO";
        }

    }//GEN-LAST:event_jrbAtendidosActionPerformed

    private void jrbAgendadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbAgendadosActionPerformed

        if (jrbAgendados.isSelected()) {
            tipoStat = "AGENDADO";
        }

    }//GEN-LAST:event_jrbAgendadosActionPerformed

    private void jtbBuscaAgendamentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbBuscaAgendamentoMouseClicked

        if (evt.getClickCount() == 2) {

            buscaDados();

        }

    }//GEN-LAST:event_jtbBuscaAgendamentoMouseClicked

    private void jrbTodosEntidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbTodosEntidadeActionPerformed

        jcbBuscaNomeEntidade.setSelectedIndex(0);
        jcbBuscaNomeEntidade.setEnabled(false);
        if (jrbTodosEntidade.isSelected()) {
            tipoEntid = "";
        }

    }//GEN-LAST:event_jrbTodosEntidadeActionPerformed

    private void jrbEmAtendimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbEmAtendimentoActionPerformed

        if (jrbEmAtendimento.isSelected()) {
            tipoStat = "EM ATENDIMENTO";
        }

    }//GEN-LAST:event_jrbEmAtendimentoActionPerformed

    private void jmiAtenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAtenderActionPerformed

        if (agendarAgendamento == true) {
            iniciaClasseGeral();

            if (classeGeral.msgConfirmaAtualizacao("Deseja atualizar o AGENDAMENTO selecionado para o status 'EM ATENDIMENTO'?")) {
                iniciaAgendamento();
                buscaDados();

                if (agendamento.getStatus().equals("AGENDADO")) {
                    atualizar();
                } else if (agendamento.getStatus().equals("EM ATENDIMENTO")) {
                    JOptionPane.showMessageDialog(null, "Este agendamento já está Em Atendimento!", "Atenção", JOptionPane.WARNING_MESSAGE, null);
                } else {
                    JOptionPane.showMessageDialog(null, "Este agendamento já foi Concluído!", "Atenção", JOptionPane.WARNING_MESSAGE, null);
                }
                
                setAgendamento();
            }

        } else {
            JOptionPane.showMessageDialog(null, "Você não tem permissões para usar esta opção!", "Atenção", JOptionPane.WARNING_MESSAGE, null);
        }
        
    }//GEN-LAST:event_jmiAtenderActionPerformed

    private void jrbTodosTipoAgendamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbTodosTipoAgendamentoActionPerformed

        if(jrbTodosTipoAgendamento.isSelected()) {
            tipoAgend = "AGENDAMENTO";
        }

    }//GEN-LAST:event_jrbTodosTipoAgendamentoActionPerformed

    private void jrbNormalTipoAgendamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbNormalTipoAgendamentoActionPerformed

        if (jrbNormalTipoAgendamento.isSelected()) {
            tipoAgend = "AGENDAMENTO NORMAL";
        }
        
    }//GEN-LAST:event_jrbNormalTipoAgendamentoActionPerformed

    private void jrbPontoDigitalTipoAgendamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbPontoDigitalTipoAgendamentoActionPerformed

        if (jrbPontoDigitalTipoAgendamento.isSelected()) {
            tipoAgend = "AGENDAMENTO PONTO DIGITAL";
        }

    }//GEN-LAST:event_jrbPontoDigitalTipoAgendamentoActionPerformed

    private void jYearChooserAnoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jYearChooserAnoFocusLost
       
        setNumeroAgendamentos(String.valueOf(jYearChooserAno.getYear()));

    }//GEN-LAST:event_jYearChooserAnoFocusLost

    private void jYearChooserAnoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jYearChooserAnoMouseExited

        setNumeroAgendamentos(String.valueOf(jYearChooserAno.getYear()));

    }//GEN-LAST:event_jYearChooserAnoMouseExited

    private void jDateChooserBuscaSolicitacaoInicioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jDateChooserBuscaSolicitacaoInicioFocusLost
        if (jDateChooserBuscaSolicitacaoInicio.getDate() != null) {
            jDateChooserBuscaSolicitacaoTermino.setEnabled(true);
        } else {
            jDateChooserBuscaSolicitacaoTermino.setDate(null);
            jDateChooserBuscaSolicitacaoTermino.setEnabled(false);
        }
    }//GEN-LAST:event_jDateChooserBuscaSolicitacaoInicioFocusLost

    private void jbBuscaImprimirTabelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscaImprimirTabelaActionPerformed
        try {

            if (jtbBuscaAgendamento.getRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "Não há nada na Tabela para ser impresso!", "Atenção", JOptionPane.WARNING_MESSAGE, null);
            } else {
                jtbBuscaAgendamento.print();
            }
            
        } catch (PrinterException ex) {
            Logger.getLogger(JdBuscaAgendamento.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbBuscaImprimirTabelaActionPerformed

    private void jrbOficioTipoAgendamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbOficioTipoAgendamentoActionPerformed

        if (jrbOficioTipoAgendamento.isSelected()) {
            tipoAgend = "AGENDAMENTO OFICIO";
        }

    }//GEN-LAST:event_jrbOficioTipoAgendamentoActionPerformed

    private void jDateChooserBuscaResolucaoInicioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jDateChooserBuscaResolucaoInicioFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jDateChooserBuscaResolucaoInicioFocusLost
    /**
     * @param args the command line arguments
     */
    /*public static void main(String args[]) {
    java.awt.EventQueue.invokeLater(new Runnable() {
    public void run() {
    jdBuscaAgendamento dialog = new jdBuscaAgendamento(new javax.swing.JFrame(), true);
    dialog.addWindowListener(new java.awt.event.WindowAdapter() {
    public void windowClosing(java.awt.event.WindowEvent e) {
    System.exit(0);
    }
    });
    dialog.setVisible(true);
    }
    });
    }*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgTipoAgendamento;
    private javax.swing.ButtonGroup btgTipoEntidade;
    private javax.swing.ButtonGroup btgTipoStatus;
    private com.toedter.calendar.JDateChooser jDateChooserBuscaResolucaoInicio;
    private com.toedter.calendar.JDateChooser jDateChooserBuscaResolucaoTermino;
    private com.toedter.calendar.JDateChooser jDateChooserBuscaSolicitacaoInicio;
    private com.toedter.calendar.JDateChooser jDateChooserBuscaSolicitacaoTermino;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JYearChooser jYearChooserAno;
    private javax.swing.JButton jbBuscaCancelar;
    private javax.swing.JButton jbBuscaEnviarDados;
    private javax.swing.JButton jbBuscaFechar;
    private javax.swing.JButton jbBuscaImprimirTabela;
    private javax.swing.JButton jbBuscaPesquisar;
    private javax.swing.JComboBox jcbBuscaNomeEntidade;
    private javax.swing.JMenuItem jmiAtender;
    private javax.swing.JPanel jpNrAgendamentos;
    private javax.swing.JPopupMenu jpmBuscaAgendamento;
    private javax.swing.JRadioButton jrbAgendados;
    private javax.swing.JRadioButton jrbAtendidos;
    private javax.swing.JRadioButton jrbCmei;
    private javax.swing.JRadioButton jrbEmAtendimento;
    private javax.swing.JRadioButton jrbEscola;
    private javax.swing.JRadioButton jrbNormalTipoAgendamento;
    private javax.swing.JRadioButton jrbOficioTipoAgendamento;
    private javax.swing.JRadioButton jrbOutros;
    private javax.swing.JRadioButton jrbPontoDigitalTipoAgendamento;
    private javax.swing.JRadioButton jrbTodosEntidade;
    private javax.swing.JRadioButton jrbTodosStatus;
    private javax.swing.JRadioButton jrbTodosTipoAgendamento;
    private javax.swing.JTable jtbBuscaAgendamento;
    private javax.swing.JLabel lbAgendados;
    private javax.swing.JLabel lbAgendamentosNaTabela;
    private javax.swing.JLabel lbAtendidos;
    private javax.swing.JLabel lbEmAtendimento;
    private javax.swing.JLabel lbTotal;
    // End of variables declaration//GEN-END:variables

//Outros Metodos ===========================================================================================================================================
    public void fechar() {
        
        cancelar();
        dao = null;
        this.dispose();

    }

    public void cancelar() {

        DefaultTableModel modelo = (DefaultTableModel) jtbBuscaAgendamento.getModel();

        jcbBuscaNomeEntidade.setSelectedIndex(0);
        jDateChooserBuscaSolicitacaoInicio.setDate(null);
        jDateChooserBuscaSolicitacaoTermino.setDate(null);
        //jftfBuscaDataSolicitacao.setText("");
        jrbEscola.setSelected(false);
        tipoEntid = "";
        jrbCmei.setSelected(false);
        jrbOutros.setSelected(false);
        jrbTodosStatus.setSelected(true);
        tipoStat = "A";
        jrbAgendados.setSelected(false);
        jrbAtendidos.setSelected(false);
        jrbTodosEntidade.setSelected(true);
        jcbBuscaNomeEntidade.setEnabled(false);
        jrbTodosTipoAgendamento.setSelected(true);
        tipoAgend = "AGENDAMENTO";
        jYearChooserAno.setYear(Integer.parseInt(versao.getAno()));
        setNumeroAgendamentos(versao.getAno());
        setNumeroAgendamentosNaTabela("0");

        modelo.setRowCount(0);
        cmei = null;
        controleCmei = null;
        controleEscola = null;
        controleOutro = null;
        escola = null;
        outro = null;

    }

    public void pesquisar() {

        DefaultTableModel modelo = (DefaultTableModel) jtbBuscaAgendamento.getModel();
        final TableRowSorter<TableModel> tabelaSorter = new TableRowSorter<TableModel>(modelo);
        
        jtbBuscaAgendamento.setRowSorter(tabelaSorter);
        
        iniciaDao();

        Agendamento agend;
        List listaAgendamento = new ArrayList();
        
        int codigoCmei = 0;
        int codigoEscola = 0;
        int codigoOutro = 0;
        Date dataSolicInicio;
        Date dataSolicTermino;
        Date dataResolInicio;
        Date dataResolTermino;

        if (jDateChooserBuscaSolicitacaoInicio.getDate() == null) {
            dataSolicInicio = null;
        } else {
            dataSolicInicio = jDateChooserBuscaSolicitacaoInicio.getDate();
        }

        if (jDateChooserBuscaSolicitacaoTermino.getDate() == null) {
            dataSolicTermino = null;
        } else {
            dataSolicTermino = jDateChooserBuscaSolicitacaoTermino.getDate();
        }
        
        if (jDateChooserBuscaResolucaoInicio.getDate() == null) {
            dataResolInicio = null;
        } else {
            dataResolInicio = jDateChooserBuscaResolucaoInicio.getDate();
        }
        
        if (jDateChooserBuscaResolucaoTermino.getDate() == null) {
            dataResolTermino = null;
        } else {
            dataResolTermino = jDateChooserBuscaResolucaoTermino.getDate();
        }
        
        if (jcbBuscaNomeEntidade.getSelectedIndex() != 0) {
            
            switch (tipoEntid) {
            
                case "CMEI":
                    iniciaControleCmei();
                    codigoCmei = controleCmei.getCodigoCmei(jcbBuscaNomeEntidade.getSelectedItem().toString());
                    break;
                
                case "ESCOLA":
                    iniciaControleEscola();
                    codigoEscola = controleEscola.getCodigoEscola(jcbBuscaNomeEntidade.getSelectedItem().toString());
                    break;
                
                case "OUTROS":
                    iniciaControleOutro();
                    codigoOutro = controleOutro.getCodigoOutro(jcbBuscaNomeEntidade.getSelectedItem().toString());
                    break;
            
            }
        }
        

        listaAgendamento = dao.listarAgendamento(codigoCmei, codigoEscola, codigoOutro, dataSolicInicio, dataSolicTermino, dataResolInicio, dataResolTermino, tipoEntid, tipoStat, "", "", tipoAgend, String.valueOf(jYearChooserAno.getYear()));

        //listaAgendamento = dao.listarAgendamento(nomeEntid, new java.sql.Date(dataSolic.getTime()), tipoEntid);Usando jFormatedTextField

        modelo.setRowCount(0);
        iniciaEditaOrdemTabela();
        
        for (int i = 0; i < listaAgendamento.size(); i++) {

            String nomeUnidade = "";
            
            agend = (Agendamento) listaAgendamento.get(i);

            switch (agend.getTipoEntidade()) {
                
                case "ESCOLA":
                    nomeUnidade = agend.getEscola().getNomeEscola();
                    break;
                    
                case "CMEI":
                    nomeUnidade = agend.getCmei().getNomeCmei();
                    break;
                    
                case "OUTROS":
                    nomeUnidade = agend.getOutro().getNomeOutro();
                    break;
                
            }
            
            modelo.addRow(new String[]{editaOrdemTabela.editaOrdem(i + 1), agend.getTipoEntidade(), nomeUnidade, agend.getLocalEntidade() + " - " + agend.getProblemaInformado(), String.valueOf(agend.getDataSolicitacao()), String.valueOf(agend.getDataResolucao()), agend.getStatus(), String.valueOf(agend.getCodigoAgendamento())});

        }

        if (jtbBuscaAgendamento.getRowCount() > 0) {
            jtbBuscaAgendamento.getSelectionModel().setSelectionInterval(0, 0);
        } else {
            iniciaClasseGeral();
            
            classeGeral.msgInforma("Não há agendamento com estes dados!");
        }

        setNumeroAgendamentosNaTabela(String.valueOf(modelo.getRowCount()));

    }

    public void buscaDados() {

        iniciaDao();
        iniciaAgendamento();
        //DAO dao = new DAO();

        int codigo;

        codigo = Integer.valueOf((String) jtbBuscaAgendamento.getValueAt(jtbBuscaAgendamento.getSelectedRow(), 7));

        agendamento = (Agendamento) dao.busca(agendamento, codigo);
        dao.encerraSessao();

    }

    /*public void preencheCombo() {

    if (jcbBuscaTipoEntidade.getSelectedIndex() == 0) {
    preencheComboEscolas();
    } else {
    preencheComboCmeis();
    }

    }*/
    public void preencheComboEscolas() {

        iniciaDao();

        List listaEscolas = new ArrayList();

        jcbBuscaNomeEntidade.removeAllItems();
        jcbBuscaNomeEntidade.addItem("");

        listaEscolas = dao.listarEscolas(0, "", "");

        for (int i = 0; i < listaEscolas.size(); i++) {
            iniciaEscola();
            escola = (Escola) listaEscolas.get(i);
            jcbBuscaNomeEntidade.addItem(escola.getNomeEscola());
        }

    }

    public void preencheComboCmeis() {

        iniciaDao();

        List listaCmeis = new ArrayList();

        jcbBuscaNomeEntidade.removeAllItems();
        jcbBuscaNomeEntidade.addItem("");

        listaCmeis = dao.listarCmeis(0, "", "");

        for (int i = 0; i < listaCmeis.size(); i++) {
            iniciaCmei();
            cmei = (Cmei) listaCmeis.get(i);
            jcbBuscaNomeEntidade.addItem(cmei.getNomeCmei());
        }

    }

    public void preencheComboOutros() {

        iniciaDao();

        List listaOutros = new ArrayList();

        jcbBuscaNomeEntidade.removeAllItems();
        jcbBuscaNomeEntidade.addItem("");

        listaOutros = dao.listarOutros(0, "", "");

        for (int i = 0; i < listaOutros.size(); i++) {
            iniciaOutro();
            outro = (Outro) listaOutros.get(i);
            jcbBuscaNomeEntidade.addItem(outro.getNomeOutro());
        }

    }

//Geradores, Validadores===========================================================================================================================================
    public void iniciaAgendamento() {
        
        if (agendamento == null) {
            agendamento = new Agendamento();
        }
        
    }
    
    public void iniciaClasseGeral() {
        
        if (classeGeral == null) {
            classeGeral = new ClasseGeral();
        }
        
    }
    
    public void iniciaCmei() {
        
        if (cmei == null) {
            cmei = new Cmei();
        }
        
    }
    
    public void iniciaControleCmei() {
        
        if (controleCmei == null) {
            controleCmei = new ControleCmei();
        }
        
    }
    
    public void iniciaControleEscola() {
        
        
        if (controleEscola == null) {
            controleEscola = new ControleEscola();
        }
        
    }
    
    public void iniciaControleOutro() {
        
        if (controleOutro == null) {
            controleOutro = new ControleOutro();
        }
        
    }
    
    public void iniciaDao() {

        if (dao == null) {
            dao = new DAO();
        }

    }
    
    public void iniciaEditaOrdemTabela() {
        
        if (editaOrdemTabela == null) {
            editaOrdemTabela = new EditaOrdemTabela();
        }
        
    }
    
    public void iniciaEscola() {
        
        if (escola == null) {
            escola = new Escola();
        }
        
    }
    
    public void iniciaOutro() {
        
        if (outro == null) {
            outro = new Outro();
        }
        
    }
    
//Getters and Setters===========================================================================================================================================
    public void setNumeroAgendamentos(String ano) {

        iniciaDao();
        //DAO dao = new DAO();

        lbTotal.setText("" + dao.getNumeroAgendamentos(ano, "AGENDAMENTO"));
        lbAtendidos.setText("" + dao.getNumeroAgendamentosAtendidos(ano, "AGENDAMENTO"));
        lbAgendados.setText("" + dao.getNumeroAgendamentosAgendados(ano, "AGENDAMENTO"));
        lbEmAtendimento.setText("" + dao.getNumeroAgendamentosEmAtendimento(ano, "AGENDAMENTO"));

    }

    public void setNumeroAgendamentosNaTabela(String numeroAgendamentosNaTabela) {

        lbAgendamentosNaTabela.setText(numeroAgendamentosNaTabela);

    }

    public int getCodigoUsuario() {
        return codigoUsuario;
    }

    public void setCodigoUsuario(int codigoUsuario) {
        this.codigoUsuario = codigoUsuario;
        getPermissoes();
        setNumeroAgendamentos(versao.getAno());
        setNumeroAgendamentosNaTabela("0");
    }

    public Agendamento getAgendamento() {

        return agendamento;

    }

    public void setAgendamento() {
        agendamento = null;
    }

    public void getPermissoes() {
        Permissoes permissoes = new Permissoes();
        iniciaDao();
        //DAO dao = new DAO();

        permissoes = (Permissoes) dao.buscaPermissoes(getCodigoUsuario());

        agendarAgendamento = permissoes.isAgendarAgendamento();
    }

    public String getTipoAgend() {
        return tipoAgend;
    }

    public void setTipoAgend(String tipoAgend) {
        this.tipoAgend = tipoAgend;
    }

//Metodos DAO===========================================================================================================================================
    public void atualizar() {

        iniciaDao();
        iniciaAgendamento();
        //DAO dao = new DAO();

        agendamento.setStatus("EM ATENDIMENTO");

        dao.atualizar(agendamento, 7, codigoUsuario);
        
        try {
            log.criaLog(codigoUsuario, "Atualizou para EM ATENDIMENTO", "Agendamento de codigo nº " + agendamento.getCodigoAgendamento());
        } catch (IOException ex) {
            Logger.getLogger(JdBuscaAgendamento.class.getName()).log(Level.SEVERE, null, ex);
        }

        pesquisar();

    }
}
