/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package visual;

import controlador.ClasseGeral;
import controlador.ControleBloco;
import controlador.ControleImagem;
import controlador.ControleVersao;
import controlador.FixedLengthDocument;
import dao.DAO;
import java.awt.Image;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.List;
import modelo.Bloco;
import modelo.Linha;
import modelo.Permissoes;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author luizam
 */
public class JfCadastroLinhaTransporte extends javax.swing.JFrame {

    private static ControleVersao versao = new ControleVersao();
    private Bloco bloco;
    private ClasseGeral classeGeral;
    private ControleBloco controleBloco;
    private ControleImagem controleImagem = new ControleImagem();
    private DAO dao;
    private Linha linha;
    private Linha linhaVerificada;
    private Permissoes permissoes;

    private JdBuscaLinha jdbl;
    private JasperViewer jViewer;
    private JasperPrint jPrint;
    
    private int codigo;
    private int codigoUsuario;
    private String opcao = "salvar";
    
    private boolean cadastrarLinha;
    
    /**
     * Creates new form JfCadastroBairro
     */
    public JfCadastroLinhaTransporte() {
        super("m2 - Cadastro Linha - Transporte Escolar - " + versao.getVersao() + " - " + versao.getAno());
        initComponents();

        //Altera icone na barra de titulo
        Toolkit kit = Toolkit.getDefaultToolkit();
        Image img = kit.getImage("C:/SURGI/imagens/SURGI32x32.png");
        this.setIconImage(img);

        //centraliza tela
        setSize(getWidth(), getHeight());
        setLocationRelativeTo(null);
        
        preencheComboBloco();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpCadastroLoteFundo = new javax.swing.JPanel();
        jpBotoes = new javax.swing.JPanel();
        jbSalvar = new javax.swing.JButton();
        jbBuscar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();
        jbAlterar = new javax.swing.JButton();
        jbImprimir = new javax.swing.JButton();
        jpCadastroLote = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jtfKm = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtfNumeroLinha = new javax.swing.JTextField();
        jtfKm10 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jcbBloco = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jcbCarro = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtaItinerario = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jpBotoes.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        jbSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/OK.png"))); // NOI18N
        jbSalvar.setText("Salvar");
        jbSalvar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        jbBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/pesquisar.png"))); // NOI18N
        jbBuscar.setText("Buscar");
        jbBuscar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jbCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cancelar.png"))); // NOI18N
        jbCancelar.setText("Cancelar");
        jbCancelar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jbExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/delete02.png"))); // NOI18N
        jbExcluir.setText("Excluir");
        jbExcluir.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbExcluir.setEnabled(false);
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jbAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/reload.png"))); // NOI18N
        jbAlterar.setText("Alterar");
        jbAlterar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbAlterar.setEnabled(false);
        jbAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlterarActionPerformed(evt);
            }
        });

        jbImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/imprimir.png"))); // NOI18N
        jbImprimir.setText("Imprimir");
        jbImprimir.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbImprimir.setEnabled(false);
        jbImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbImprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpBotoesLayout = new javax.swing.GroupLayout(jpBotoes);
        jpBotoes.setLayout(jpBotoesLayout);
        jpBotoesLayout.setHorizontalGroup(
            jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpBotoesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jpBotoesLayout.setVerticalGroup(
            jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jpCadastroLote.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Km: ");

        jtfKm.setBackground(new java.awt.Color(205, 204, 255));
        jtfKm.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfKm.setToolTipText("Neste campo digite apenas números, separados ou não por virgula!");
        jtfKm.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtfKm.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfKmFocusLost(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Número Linha: ");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Km + 10%: ");

        jtfNumeroLinha.setBackground(new java.awt.Color(205, 204, 255));
        jtfNumeroLinha.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfNumeroLinha.setToolTipText("Digite apenas números reais!");
        jtfNumeroLinha.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtfNumeroLinha.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfNumeroLinhaFocusLost(evt);
            }
        });

        jtfKm10.setBackground(new java.awt.Color(205, 204, 255));
        jtfKm10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfKm10.setToolTipText("Neste campo digite apenas números, separados ou não por virgula!");
        jtfKm10.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtfKm10.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfKm10FocusLost(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Bloco: ");

        jcbBloco.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbBloco.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Carro: ");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Itinerário: ");

        jcbCarro.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbCarro.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1 - Ônibus", "2 - Micro Ônibus", "3 - Van", "4 - Kombi" }));
        jcbCarro.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jtaItinerario.setColumns(20);
        jtaItinerario.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtaItinerario.setLineWrap(true);
        jtaItinerario.setRows(5);
        jtaItinerario.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtaItinerario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtaItinerarioFocusLost(evt);
            }
        });
        jScrollPane1.setViewportView(jtaItinerario);

        javax.swing.GroupLayout jpCadastroLoteLayout = new javax.swing.GroupLayout(jpCadastroLote);
        jpCadastroLote.setLayout(jpCadastroLoteLayout);
        jpCadastroLoteLayout.setHorizontalGroup(
            jpCadastroLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCadastroLoteLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jpCadastroLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpCadastroLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jcbBloco, 0, 600, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(jcbCarro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfKm10, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(jtfKm)
                    .addComponent(jtfNumeroLinha))
                .addContainerGap(98, Short.MAX_VALUE))
        );
        jpCadastroLoteLayout.setVerticalGroup(
            jpCadastroLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCadastroLoteLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jpCadastroLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jcbBloco, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpCadastroLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtfNumeroLinha, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpCadastroLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtfKm, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpCadastroLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtfKm10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpCadastroLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jcbCarro, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpCadastroLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jpCadastroLoteFundoLayout = new javax.swing.GroupLayout(jpCadastroLoteFundo);
        jpCadastroLoteFundo.setLayout(jpCadastroLoteFundoLayout);
        jpCadastroLoteFundoLayout.setHorizontalGroup(
            jpCadastroLoteFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jpCadastroLote, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jpCadastroLoteFundoLayout.setVerticalGroup(
            jpCadastroLoteFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpCadastroLoteFundoLayout.createSequentialGroup()
                .addComponent(jpCadastroLote, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpCadastroLoteFundo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpCadastroLoteFundo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed

        if (jtfKm10.getText().isEmpty() || jtfKm.getText().isEmpty() || jtfNumeroLinha.getText().isEmpty()) {

            iniciaClasseGeral();
            classeGeral.msgAtencao("Preencha os campos Obrigatórios em azul!");

        } else {

            if (opcao.equals("salvar")) {

                verificaCadastroLote();

                if (linhaVerificada != null) {
                    iniciaClasseGeral();
                    classeGeral.msgAtencao("Essa Linha já está Cadastrada!");
                } else {
                    salvar();
                    opcao = "salvar";
                }

            } else if (opcao.equals("alterar")) {

                atualizar();
                opcao = "salvar";

            }

        }
    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed

        if (jdbl == null) {
            jdbl = new JdBuscaLinha(null, true);
        }

        jdbl.setVisible(true);

        setLinhaBuscada(jdbl.getLinha());
        jdbl.setLinha();
    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        cancelar();
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        excluir();
    }//GEN-LAST:event_jbExcluirActionPerformed

    private void jbAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlterarActionPerformed

        abilitaCampos();

        jbAlterar.setEnabled(false);

        opcao = "alterar";
        
        jbSalvar.setEnabled(true);
        
    }//GEN-LAST:event_jbAlterarActionPerformed

    private void jbImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbImprimirActionPerformed

        //ADOGeral ag = new ADOGeral();
        /*Conexao conexao = new Conexao();
        HashMap parametros = new HashMap();
        try {
            //System.out.println(codigoRegistro);
            //parametros.put("titulo", "Titulo Relatorio");
            parametros.put("codigoBairro", new Integer(codigo));
            //parametros.put("codigo", lista.get(0).getNome();
                //ADOGeral.conectar();
                conexao.getConexao();
            } catch (ExcCadastro ex) {
                Logger.getLogger(JfCadastroUsuario.class.getName()).log(Level.SEVERE, null, ex);
            }

            //        JRDataSource jrds = new JRBeanCollectionDataSource(lista);

            try {

                //jReport = JasperCompileManager.compileReport("E:/LUIZ/PROJETOS JAVA/CORPORATIVO/m2GestaoClinicas/FichaPaciente.jrxml");
                //jPrint = JasperFillManager.fillReport("C:/m2GestaoClinicas/FichaPaciente.jasper", parametros, ADOGeral.getConexao());
                jPrint = JasperFillManager.fillReport("Funcao.jasper", parametros, conexao.getConexao());
                //jPrint = JasperFillManager.fillReport(jReport, parametros, jrds);

                //if (!(jViewer == null)) {
                    //jViewer = new JasperViewer(jPrint, false);
                    //jViewer.setExtendedState(JFrame.MAXIMIZED_BOTH);
                    if (jPrint != null) {
                        jViewer.viewReport(jPrint, false);
                        jPrint = null;
                    }
                    //}

            } catch (Exception ex) {
                ex.printStackTrace();
            }*/
    }//GEN-LAST:event_jbImprimirActionPerformed

    private void jtfKmFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfKmFocusLost
        if (!jtfKm.getText().isEmpty()) {
            
            double valorKm;
            double valorKm10;
            
            iniciaClasseGeral();
            
            jtfKm.setText(classeGeral.pontoPorVirgula(classeGeral.somenteDouble(classeGeral.virgulaPorPonto(jtfKm.getText()))));
            
            valorKm = Double.valueOf(classeGeral.virgulaPorPonto(jtfKm.getText()));
            valorKm10 = valorKm * 1.1;
            
            jtfKm10.setText(classeGeral.pontoPorVirgula(classeGeral.somenteDouble(classeGeral.virgulaPorPonto(valorKm10 + ""))));
            
        }
    }//GEN-LAST:event_jtfKmFocusLost

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        fechar();
    }//GEN-LAST:event_formWindowClosing

    private void jtfKm10FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfKm10FocusLost
        if (!jtfKm10.getText().isEmpty()) {
            iniciaClasseGeral();
            jtfKm10.setText(classeGeral.pontoPorVirgula(classeGeral.somenteDouble(classeGeral.virgulaPorPonto(jtfKm10.getText()))));
        }
    }//GEN-LAST:event_jtfKm10FocusLost

    private void jtfNumeroLinhaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfNumeroLinhaFocusLost
        if (!jtfNumeroLinha.getText().isEmpty()) {
            
            iniciaClasseGeral();
            jtfNumeroLinha.setText(classeGeral.somenteNumero(jtfNumeroLinha.getText()));
            
        }
    }//GEN-LAST:event_jtfNumeroLinhaFocusLost

    private void jtaItinerarioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtaItinerarioFocusLost
        if (!jtaItinerario.getText().isEmpty()) {
            
            jtaItinerario.setText(jtaItinerario.getText().toUpperCase());
            
        }
    }//GEN-LAST:event_jtaItinerarioFocusLost

    /**
     * @param args the command line arguments
     */
    //public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        /*try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JfCadastroBairro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JfCadastroBairro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JfCadastroBairro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JfCadastroBairro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }*/
        //</editor-fold>

        /* Create and display the form */
        /*java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JfCadastroBairro().setVisible(true);
            }
        });
    }*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbAlterar;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbImprimir;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JComboBox jcbBloco;
    private javax.swing.JComboBox jcbCarro;
    private javax.swing.JPanel jpBotoes;
    private javax.swing.JPanel jpCadastroLote;
    private javax.swing.JPanel jpCadastroLoteFundo;
    private javax.swing.JTextArea jtaItinerario;
    private javax.swing.JTextField jtfKm;
    private javax.swing.JTextField jtfKm10;
    private javax.swing.JTextField jtfNumeroLinha;
    // End of variables declaration//GEN-END:variables

//Outros Metodos ===========================================================================================================================================
    public void fechar() {
        if (!jtfNumeroLinha.getText().isEmpty() || !jtfKm10.getText().isEmpty() || !jtfKm.getText().isEmpty()) {
            iniciaClasseGeral();
            classeGeral.msgAtencao("Salve ou cancele o cadastro em edição!");
        } else {
            this.dispose();
        }
        
    }

    public void cancelar() {

        linhaVerificada = null;
        
        jcbCarro.setSelectedIndex(0);
        jtfNumeroLinha.setText("");
        jtfKm.setText("");
        jtfKm10.setText("");
        jtaItinerario.setText("");
        
        preencheComboBloco();
        
        abilitaCampos();

        desabilitaBotoes();

        opcao = "salvar";
    }

    public void abilitaCampos() {

        jtfNumeroLinha.setEnabled(true);
        jtfKm.setEnabled(true);
        jtfKm10.setEnabled(true);
        jcbBloco.setEnabled(true);
        jcbCarro.setEnabled(true);
        jtaItinerario.setEnabled(true);

    }

    public void desabilitaCampos() {

        jtfNumeroLinha.setEnabled(false);
        jtfKm.setEnabled(false);
        jtfKm10.setEnabled(false);
        jcbBloco.setEnabled(false);
        jcbCarro.setEnabled(false);
        jtaItinerario.setEnabled(false);
        
    }

    public void abilitaBotoes() {

        jbCancelar.setEnabled(true);
        jbBuscar.setEnabled(true);
        jbImprimir.setEnabled(false);

        if (cadastrarLinha == true) {
            jbSalvar.setEnabled(false);
            jbExcluir.setEnabled(true);
            jbAlterar.setEnabled(true);
        } else {
            jbSalvar.setEnabled(false);
            jbExcluir.setEnabled(false);
            jbAlterar.setEnabled(false);
        }

    }

    public void desabilitaBotoes() {

        jbCancelar.setEnabled(true);
        jbBuscar.setEnabled(true);
        jbImprimir.setEnabled(false);

        if (cadastrarLinha == true) {
            jbSalvar.setEnabled(true);
            jbExcluir.setEnabled(false);
            jbAlterar.setEnabled(false);
        } else {
            jbSalvar.setEnabled(false);
            jbExcluir.setEnabled(false);
            jbAlterar.setEnabled(false);
        }

    }
    
    public void preencheComboBloco() {
        
        iniciaDao();
        List listaBlocos = new ArrayList();

        jcbBloco.removeAllItems();
        jcbBloco.addItem("");

        listaBlocos = dao.listarBlocos("", 0);

        for (int i = 0; i < listaBlocos.size(); i++) {
            iniciaBloco();
            bloco = (Bloco) listaBlocos.get(i);
            jcbBloco.addItem("BLOCO " + bloco.getNumeroBloco() + " - " + bloco.getNomeBloco());
            bloco = null;
        }
        
        jcbBloco.setSelectedIndex(0);
    }
    
//Geradores, Validadores===========================================================================================================================================
    public void iniciaBloco() {
        
        if (bloco == null) {
            bloco = new Bloco();
        }
        
    }
    
    public void iniciaClasseGeral() {
        
        if (classeGeral == null) {
            classeGeral = new ClasseGeral();
        }
        
    }
    
    public void iniciaControleBloco() {
        
        if (controleBloco == null) {
            controleBloco = new ControleBloco();
        }
        
    }
    
    public void iniciaDao() {
        
        if (dao == null) {
            dao = new DAO();
        }
        
    }
    
    public void iniciaLinha() {
        
        if (linha == null) {
            linha = new Linha();
        }
        
    }
    
    public void iniciaPermissoes() {
        
        if (permissoes == null) {
            permissoes = new Permissoes();
        }
        
    }
    
    public void verificaCadastroLote() {

        iniciaDao();
        
        linhaVerificada = (Linha) dao.verificarCadastroBloco(jtfNumeroLinha.getText());

    }
    
//Getters and Setters===========================================================================================================================================
    public void setNumeroCaracteres() {

        jtfNumeroLinha.setDocument(new FixedLengthDocument(240));

    }

    public int getCodigoUsuario() {
        return codigoUsuario;
    }

    public void setCodigoUsuario(int codigoUsuario) {
        this.codigoUsuario = codigoUsuario;
        getPermissoes();
        desabilitaBotoes();
    }

    public void getPermissoes() {
        
        iniciaDao();
        iniciaPermissoes();
        
        permissoes = (Permissoes) dao.buscaPermissoes(getCodigoUsuario());

        cadastrarLinha = permissoes.isCadastrarLinha();
    }

    public void setLinhaBuscada(Linha linhaBuscada) {
        
        if (linhaBuscada == null) {
            
        } else {
            
            iniciaClasseGeral();
            iniciaLinha();
            
            jtfNumeroLinha.setText(linhaBuscada.getNumeroLinha() + "");
            jtfKm.setText(classeGeral.pontoPorVirgula(String.valueOf(linhaBuscada.getKm())));
            jtfKm10.setText(classeGeral.pontoPorVirgula(String.valueOf(linhaBuscada.getKm10())));
            jcbBloco.setSelectedItem("BLOCO " + linhaBuscada.getBloco().getNumeroBloco() + " - " + linhaBuscada.getBloco().getNomeBloco());
            jcbCarro.setSelectedItem(linhaBuscada.getCarro());
            jtaItinerario.setText(linhaBuscada.getItinerario());
            
            codigo = linhaBuscada.getCodigoLinha();
            linha = linhaBuscada;
            linha.setCodigoLinha(codigo);
            
            desabilitaCampos();

            opcao = "alterar";

            abilitaBotoes();
            
        }
        
    }


//Metodos DAO===========================================================================================================================================
    public void salvar() {

        iniciaDao();
        iniciaBloco();
        iniciaClasseGeral();
        iniciaControleBloco();
        iniciaLinha();

        bloco = (Bloco) dao.busca(bloco, controleBloco.getCodigoBloco(controleBloco.getNomeBloco(jcbBloco.getSelectedItem().toString())));
        linha.setBloco(bloco); 
        linha.setCarro(jcbCarro.getSelectedItem().toString());
        linha.setItinerario(jtaItinerario.getText());
        linha.setNumeroLinha(Integer.parseInt(jtfNumeroLinha.getText()));
        linha.setKm(Double.parseDouble(classeGeral.virgulaPorPonto(jtfKm.getText())));
        linha.setKm10(Double.parseDouble(classeGeral.virgulaPorPonto(jtfKm10.getText())));

        dao.inserir(linha, 7, codigoUsuario);
        cancelar();

    }
    
    public void atualizar() {

        iniciaDao();
        iniciaBloco();
        iniciaClasseGeral();
        iniciaControleBloco();
        iniciaLinha();

        bloco = (Bloco) dao.busca(bloco, controleBloco.getCodigoBloco(controleBloco.getNomeBloco(jcbBloco.getSelectedItem().toString())));
        linha.setBloco(bloco); 
        linha.setCarro(jcbCarro.getSelectedItem().toString());
        linha.setItinerario(jtaItinerario.getText());
        linha.setNumeroLinha(Integer.parseInt(jtfNumeroLinha.getText()));
        linha.setKm(Double.parseDouble(classeGeral.virgulaPorPonto(jtfKm.getText())));
        linha.setKm10(Double.parseDouble(classeGeral.virgulaPorPonto(jtfKm10.getText())));
        
        dao.atualizar(linha, 7, codigoUsuario);
        cancelar();

    }

    public void excluir() {

        iniciaClasseGeral();

        if (classeGeral.msgConfirma("Deseja excluir o Linha?")) {

            iniciaDao();
            iniciaBloco();
            
            dao.excluir(linha, codigoUsuario);
            cancelar();

        }

    }

}
