/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * jdBuscaRecarga.java
 *
 * Created on 21/01/2011, 07:43:35
 */

package visual;

import controlador.*;
import dao.DAO;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.print.PrinterException;
import java.util.ArrayList;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import modelo.Cartucho;
import modelo.Cmei;
import modelo.EntregaRemanufaturados;
import modelo.EntregaRemanufaturadosItens;
import modelo.Escola;
import modelo.ModeloCartucho;
import modelo.Outro;
import modelo.Permissoes;
import modelo.Recarga;
import modelo.Usuario;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author luizam
 */
public class JdBuscaRecarga extends javax.swing.JDialog {

    private static ControleVersao versao = new ControleVersao();
    private Cartucho cartucho;
    private ClasseGeral classeGeral;
    private Cmei cmei;
    private ControleCmei controleCmei;
    private ControleEscola controleEscola;
    private ControleImagem controleImagem = new ControleImagem();
    private ControleModeloCartucho controleModeloCartucho;
    private ControleOutro controleOutro;
    private DAO dao;
    private DefaultTableModel modeloImpressao;
    private EditaOrdemTabela editaOrdemTabela;
    private EntregaRemanufaturados entregaRemanufaturados;
    private EntregaRemanufaturadosItens entregaRemanufaturadosItens;
    private EnviaEmail enviaEmail;
    private Escola escola;
    private ModeloCartucho modeloCartucho;
    private Outro outro;
    private Recarga recarga;
    private Usuario usuario;
    
    private JasperPrint jPrint;
    private JasperViewer jViewer;
    
    private int codigoUsuario;
    private String tipoEntid = "";
    private String tipoStat = "";
    //private String condicaoDataRecarga = null;
    //private String condicaoDataDevolucao = null;
    private String condicaoModeloCartucho = "";
    private String opcao = "salvar";
    private String cartuchoQueimado = "";
    private boolean permitirRecarga;

    /** Creates new form jdBuscaRecarga */
    public JdBuscaRecarga(java.awt.Frame parent, boolean modal) {
        super(parent, "Buscar Recarga - " + versao.getVersao() + " - " + versao.getAno(), modal);
        initComponents();

        //Altera icone na barra de titulo
        Toolkit kit = Toolkit.getDefaultToolkit();
        Image img = kit.getImage("C:/SURGI/imagens/SURGI32x32.png");
        this.setIconImage(img);

        //maximiza tela
        //this.setExtendedState(MAXIMIZED_BOTH);

        //centraliza tela
        setSize(getWidth(), getHeight());
        setLocationRelativeTo(null);

        setNumeroCaracteres();

        jrbTodosEntidade.setSelected(true);

        setNumeroRecargas();

        preencheComboEscolas();
        jcbBuscaNomeEntidade.setEnabled(false);
        
        preencheComboModeloCartuchos();

        /*try {
            jftfBuscaDataSolicitacao.setFormatterFactory(getFormatoData());
        } catch (ParseException ex) {
            Logger.getLogger(jdBuscaAgendamento.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Não foi possivel formatar o campo data!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE, null);
        }*/
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgTipoEntidade = new javax.swing.ButtonGroup();
        btgEspecificacao = new javax.swing.ButtonGroup();
        btgStatus = new javax.swing.ButtonGroup();
        jpmBuscaRecarga = new javax.swing.JPopupMenu();
        jmiRecarga = new javax.swing.JMenuItem();
        jmiDevolucao = new javax.swing.JMenuItem();
        jpBuscaBotoes = new javax.swing.JPanel();
        jbBuscaFechar = new javax.swing.JButton();
        jbBuscaEnviarDados = new javax.swing.JButton();
        jbBuscaCancelar = new javax.swing.JButton();
        jbBuscaPesquisar = new javax.swing.JButton();
        jbImprimirTabela = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jrbTodosEntidade = new javax.swing.JRadioButton();
        jrbEscola = new javax.swing.JRadioButton();
        jrbCmei = new javax.swing.JRadioButton();
        jrbOutros = new javax.swing.JRadioButton();
        jrbTonersEspecificacao = new javax.swing.JRadioButton();
        jrbCartuchosEspecificacao = new javax.swing.JRadioButton();
        jrbTodosEspecificacao = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jrbTodosStatusRecarga = new javax.swing.JRadioButton();
        jrbACarregarStatusRecarga = new javax.swing.JRadioButton();
        jrbCarregadosStatusRecarga = new javax.swing.JRadioButton();
        jrbDevolvidosStatusRecarga = new javax.swing.JRadioButton();
        jcboxCartuchosQueimados = new javax.swing.JCheckBox();
        jDateChooserBuscaDataEntregaTermino = new com.toedter.calendar.JDateChooser();
        jtfBuscaCodigoBarras = new javax.swing.JTextField();
        jDateChooserBuscaDataEntregaInicio = new com.toedter.calendar.JDateChooser();
        jLabel9 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jcbBuscaNomeEntidade = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbBuscaRecarga = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jDateChooserBuscaDataRecargaInicio = new com.toedter.calendar.JDateChooser();
        jLabel11 = new javax.swing.JLabel();
        jDateChooserBuscaDataRecargaTermino = new com.toedter.calendar.JDateChooser();
        jLabel12 = new javax.swing.JLabel();
        jcbBuscaModeloCartucho = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        lbTotal = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jlbRecargasNaTabela = new javax.swing.JLabel();

        jmiRecarga.setText("Recarregado");
        jmiRecarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiRecargaActionPerformed(evt);
            }
        });
        jpmBuscaRecarga.add(jmiRecarga);

        jmiDevolucao.setText("Devolvido");
        jmiDevolucao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiDevolucaoActionPerformed(evt);
            }
        });
        jpmBuscaRecarga.add(jmiDevolucao);

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jpBuscaBotoes.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        jbBuscaFechar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbBuscaFechar.setMnemonic('f');
        jbBuscaFechar.setText("Fechar");
        jbBuscaFechar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbBuscaFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscaFecharActionPerformed(evt);
            }
        });

        jbBuscaEnviarDados.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbBuscaEnviarDados.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Enviar.png"))); // NOI18N
        jbBuscaEnviarDados.setMnemonic('d');
        jbBuscaEnviarDados.setText("Enviar Dados");
        jbBuscaEnviarDados.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbBuscaEnviarDados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscaEnviarDadosActionPerformed(evt);
            }
        });

        jbBuscaCancelar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbBuscaCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cancelar.png"))); // NOI18N
        jbBuscaCancelar.setMnemonic('z');
        jbBuscaCancelar.setText("Cancelar");
        jbBuscaCancelar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbBuscaCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscaCancelarActionPerformed(evt);
            }
        });

        jbBuscaPesquisar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbBuscaPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/pesquisar.png"))); // NOI18N
        jbBuscaPesquisar.setMnemonic('p');
        jbBuscaPesquisar.setText("Pesquisar");
        jbBuscaPesquisar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbBuscaPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscaPesquisarActionPerformed(evt);
            }
        });

        jbImprimirTabela.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbImprimirTabela.setMnemonic('t');
        jbImprimirTabela.setText("Imprimir Tabela");
        jbImprimirTabela.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbImprimirTabela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbImprimirTabelaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpBuscaBotoesLayout = new javax.swing.GroupLayout(jpBuscaBotoes);
        jpBuscaBotoes.setLayout(jpBuscaBotoesLayout);
        jpBuscaBotoesLayout.setHorizontalGroup(
            jpBuscaBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpBuscaBotoesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbImprimirTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbBuscaPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbBuscaCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbBuscaEnviarDados, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbBuscaFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jpBuscaBotoesLayout.setVerticalGroup(
            jpBuscaBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBuscaBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpBuscaBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpBuscaBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jbBuscaFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbBuscaEnviarDados, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbBuscaCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbBuscaPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jbImprimirTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Tipo Entidade: ");

        btgTipoEntidade.add(jrbTodosEntidade);
        jrbTodosEntidade.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbTodosEntidade.setSelected(true);
        jrbTodosEntidade.setText("Todos");
        jrbTodosEntidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbTodosEntidadeActionPerformed(evt);
            }
        });

        btgTipoEntidade.add(jrbEscola);
        jrbEscola.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbEscola.setText("Escola");
        jrbEscola.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbEscolaActionPerformed(evt);
            }
        });

        btgTipoEntidade.add(jrbCmei);
        jrbCmei.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbCmei.setText("CMEI");
        jrbCmei.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbCmeiActionPerformed(evt);
            }
        });

        btgTipoEntidade.add(jrbOutros);
        jrbOutros.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbOutros.setText("Outros");
        jrbOutros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbOutrosActionPerformed(evt);
            }
        });

        btgEspecificacao.add(jrbTonersEspecificacao);
        jrbTonersEspecificacao.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbTonersEspecificacao.setText("Toners");
        jrbTonersEspecificacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbTonersEspecificacaoActionPerformed(evt);
            }
        });

        btgEspecificacao.add(jrbCartuchosEspecificacao);
        jrbCartuchosEspecificacao.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbCartuchosEspecificacao.setText("Cartuchos");
        jrbCartuchosEspecificacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbCartuchosEspecificacaoActionPerformed(evt);
            }
        });

        btgEspecificacao.add(jrbTodosEspecificacao);
        jrbTodosEspecificacao.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbTodosEspecificacao.setSelected(true);
        jrbTodosEspecificacao.setText("Todos");
        jrbTodosEspecificacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbTodosEspecificacaoActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Especificação: ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Status: ");

        btgStatus.add(jrbTodosStatusRecarga);
        jrbTodosStatusRecarga.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbTodosStatusRecarga.setSelected(true);
        jrbTodosStatusRecarga.setText("Todos");
        jrbTodosStatusRecarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbTodosStatusRecargaActionPerformed(evt);
            }
        });

        btgStatus.add(jrbACarregarStatusRecarga);
        jrbACarregarStatusRecarga.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbACarregarStatusRecarga.setText("A Carregar");
        jrbACarregarStatusRecarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbACarregarStatusRecargaActionPerformed(evt);
            }
        });

        btgStatus.add(jrbCarregadosStatusRecarga);
        jrbCarregadosStatusRecarga.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbCarregadosStatusRecarga.setText("Carregados");
        jrbCarregadosStatusRecarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbCarregadosStatusRecargaActionPerformed(evt);
            }
        });

        btgStatus.add(jrbDevolvidosStatusRecarga);
        jrbDevolvidosStatusRecarga.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbDevolvidosStatusRecarga.setText("Devolvidos");
        jrbDevolvidosStatusRecarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbDevolvidosStatusRecargaActionPerformed(evt);
            }
        });

        jcboxCartuchosQueimados.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jcboxCartuchosQueimados.setText("Cartuchos Queimados");
        jcboxCartuchosQueimados.setToolTipText("Clique para abilitar a caixa de marcação!");
        jcboxCartuchosQueimados.setEnabled(false);
        jcboxCartuchosQueimados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jcboxCartuchosQueimadosMouseClicked(evt);
            }
        });

        jDateChooserBuscaDataEntregaTermino.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDateChooserBuscaDataEntregaTermino.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jtfBuscaCodigoBarras.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfBuscaCodigoBarras.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtfBuscaCodigoBarras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfBuscaCodigoBarrasActionPerformed(evt);
            }
        });

        jDateChooserBuscaDataEntregaInicio.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDateChooserBuscaDataEntregaInicio.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jDateChooserBuscaDataEntregaInicio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jDateChooserBuscaDataEntregaInicioFocusLost(evt);
            }
        });

        jLabel9.setText("até");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Período da Entrega: ");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Código de Barras: ");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Nome da Entidade: ");

        jcbBuscaNomeEntidade.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbBuscaNomeEntidade.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jtbBuscaRecarga.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtbBuscaRecarga.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ordem", "Tipo de Entidade", "Nome da Entidade", "Modelo de Cartucho", "Número de Recargas", "Data da Entrega", "Data da Recarga", "Data da Devolução", "Código de Barra", "Código"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtbBuscaRecarga.setToolTipText("Há opções clicando com o botão direito na tabela!");
        jtbBuscaRecarga.setComponentPopupMenu(jpmBuscaRecarga);
        jtbBuscaRecarga.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jtbBuscaRecarga.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbBuscaRecargaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtbBuscaRecarga);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Período da Recarga: ");

        jDateChooserBuscaDataRecargaInicio.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDateChooserBuscaDataRecargaInicio.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jDateChooserBuscaDataRecargaInicio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jDateChooserBuscaDataRecargaInicioFocusLost(evt);
            }
        });

        jLabel11.setText("até");

        jDateChooserBuscaDataRecargaTermino.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDateChooserBuscaDataRecargaTermino.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel12.setText("Modelo do Cartucho: ");

        jcbBuscaModeloCartucho.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbBuscaModeloCartucho.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcbBuscaNomeEntidade, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jrbTodosStatusRecarga)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jrbACarregarStatusRecarga)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jrbCarregadosStatusRecarga)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jrbDevolvidosStatusRecarga)
                                .addGap(18, 18, 18)
                                .addComponent(jcboxCartuchosQueimados))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jrbTodosEspecificacao)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jrbCartuchosEspecificacao)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jrbTonersEspecificacao))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jrbTodosEntidade)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jrbEscola)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jrbCmei)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jrbOutros))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jDateChooserBuscaDataEntregaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jDateChooserBuscaDataEntregaTermino, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDateChooserBuscaDataRecargaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jDateChooserBuscaDataRecargaTermino, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jtfBuscaCodigoBarras, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcbBuscaModeloCartucho, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 175, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jrbTodosEntidade)
                    .addComponent(jrbEscola)
                    .addComponent(jrbCmei)
                    .addComponent(jrbOutros))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(jLabel2)
                        .addComponent(jrbTodosEspecificacao))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jrbCartuchosEspecificacao)
                        .addComponent(jrbTonersEspecificacao)))
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel3)
                    .addComponent(jrbTodosStatusRecarga)
                    .addComponent(jrbACarregarStatusRecarga)
                    .addComponent(jrbCarregadosStatusRecarga)
                    .addComponent(jrbDevolvidosStatusRecarga)
                    .addComponent(jcboxCartuchosQueimados))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtfBuscaCodigoBarras, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(jcbBuscaModeloCartucho, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jDateChooserBuscaDataEntregaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel9)
                    .addComponent(jDateChooserBuscaDataEntregaTermino, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jDateChooserBuscaDataRecargaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jDateChooserBuscaDataRecargaTermino, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jcbBuscaNomeEntidade, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nº de Recargas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Total: ");

        lbTotal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbTotal.setText("Total Recargas");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("Na Tabela: ");

        jlbRecargasNaTabela.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jlbRecargasNaTabela.setText("0");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbTotal)
                .addGap(18, 18, 18)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlbRecargasNaTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(lbTotal)
                    .addComponent(jLabel10)
                    .addComponent(jlbRecargasNaTabela))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jpBuscaBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpBuscaBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtfBuscaCodigoBarrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfBuscaCodigoBarrasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfBuscaCodigoBarrasActionPerformed

    private void jbBuscaFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscaFecharActionPerformed
        fechar();
}//GEN-LAST:event_jbBuscaFecharActionPerformed

    private void jbBuscaEnviarDadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscaEnviarDadosActionPerformed
        buscaDados();
        fechar();
}//GEN-LAST:event_jbBuscaEnviarDadosActionPerformed

    private void jbBuscaCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscaCancelarActionPerformed
        cancelar();
}//GEN-LAST:event_jbBuscaCancelarActionPerformed

    private void jbBuscaPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscaPesquisarActionPerformed
        pesquisar();
}//GEN-LAST:event_jbBuscaPesquisarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        fechar();
    }//GEN-LAST:event_formWindowClosing

    private void jrbTodosEntidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbTodosEntidadeActionPerformed

        jcbBuscaNomeEntidade.setEnabled(false);
        if (jrbTodosEntidade.isSelected()) {
            tipoEntid = "";
        }

    }//GEN-LAST:event_jrbTodosEntidadeActionPerformed

    private void jrbEscolaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbEscolaActionPerformed

        jcbBuscaNomeEntidade.setEnabled(true);
        if (jrbEscola.isSelected()) {
            preencheComboEscolas();
            tipoEntid = "ESCOLA";
        }

    }//GEN-LAST:event_jrbEscolaActionPerformed

    private void jrbCmeiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbCmeiActionPerformed

        jcbBuscaNomeEntidade.setEnabled(true);
        if (jrbCmei.isSelected()) {
            preencheComboCmeis();
            tipoEntid = "CMEI";
        }

    }//GEN-LAST:event_jrbCmeiActionPerformed

    private void jrbOutrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbOutrosActionPerformed

        jcbBuscaNomeEntidade.setEnabled(true);
        if (jrbOutros.isSelected()) {
            preencheComboOutros();
            tipoEntid = "OUTROS";
        }

    }//GEN-LAST:event_jrbOutrosActionPerformed

    private void jrbTodosEspecificacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbTodosEspecificacaoActionPerformed

        if (jrbTodosEspecificacao.isSelected()) {
            condicaoModeloCartucho = "";
        }

    }//GEN-LAST:event_jrbTodosEspecificacaoActionPerformed

    private void jrbCartuchosEspecificacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbCartuchosEspecificacaoActionPerformed

        if (jrbCartuchosEspecificacao.isSelected()) {
            condicaoModeloCartucho = "not like";
        }

    }//GEN-LAST:event_jrbCartuchosEspecificacaoActionPerformed

    private void jrbTonersEspecificacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbTonersEspecificacaoActionPerformed

        if (jrbTonersEspecificacao.isSelected()) {
            condicaoModeloCartucho = "like";
        }

    }//GEN-LAST:event_jrbTonersEspecificacaoActionPerformed

    private void jrbTodosStatusRecargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbTodosStatusRecargaActionPerformed

        if (jrbTodosStatusRecarga.isSelected()) {
            tipoStat="";
            //condicaoDataDevolucao = null;
            //condicaoDataRecarga = null;
        }

    }//GEN-LAST:event_jrbTodosStatusRecargaActionPerformed

    private void jrbACarregarStatusRecargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbACarregarStatusRecargaActionPerformed

        if (jrbACarregarStatusRecarga.isSelected()) {
            tipoStat="CARREGAR";
            //condicaoDataDevolucao = null;
            //condicaoDataRecarga = null;
        }

    }//GEN-LAST:event_jrbACarregarStatusRecargaActionPerformed

    private void jrbCarregadosStatusRecargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbCarregadosStatusRecargaActionPerformed

        if (jrbCarregadosStatusRecarga.isSelected()) {
            tipoStat="CARREGADO";
            //condicaoDataDevolucao = null;
            //condicaoDataRecarga = "not " + null;
        }

    }//GEN-LAST:event_jrbCarregadosStatusRecargaActionPerformed

    private void jrbDevolvidosStatusRecargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbDevolvidosStatusRecargaActionPerformed

        if (jrbDevolvidosStatusRecarga.isSelected()) {
            tipoStat="DEVOLVIDO";
            //condicaoDataDevolucao = "not " + null;
            //condicaoDataRecarga = "not " + null;
        }

    }//GEN-LAST:event_jrbDevolvidosStatusRecargaActionPerformed

    private void jtbBuscaRecargaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbBuscaRecargaMouseClicked

        if (evt.getClickCount() == 2) {

            buscaDados();

        }

    }//GEN-LAST:event_jtbBuscaRecargaMouseClicked

    private void jbImprimirTabelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbImprimirTabelaActionPerformed

        try {

            if (jtbBuscaRecarga.getRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "Não há nada na Tabela para ser impresso!", "Atenção", JOptionPane.WARNING_MESSAGE, null);
            } else {
                jtbBuscaRecarga.print();
            }

        } catch (PrinterException ex) {
            Logger.getLogger(JdBuscaAgendamento.class.getName()).log(Level.SEVERE, null, ex);
        }

        /*//ADOGeral ag = new ADOGeral();
        Conexao conexao = new Conexao();
        HashMap parametros = new HashMap();
        try {
            //System.out.println(codigoRegistro);
            //parametros.put("titulo", "Titulo Relatorio");
            parametros.put("tabelaRecarga", modeloImpressao);
            //parametros.put("codigo", lista.get(0).getNome();
            //ADOGeral.conectar();
            conexao.getConexao();
        } catch (ExcCadastro ex) {
            Logger.getLogger(jfImpressosAgendamento.class.getName()).log(Level.SEVERE, null, ex);
        }

        //        JRDataSource jrds = new JRBeanCollectionDataSource(lista);

        try {

            //jReport = JasperCompileManager.compileReport("E:/LUIZ/PROJETOS JAVA/CORPORATIVO/m2GestaoClinicas/FichaPaciente.jrxml");
            //jPrint = JasperFillManager.fillReport("C:/m2GestaoClinicas/FichaPaciente.jasper", parametros, ADOGeral.getConexao());
            jPrint = JasperFillManager.fillReport("RecargaCartuchoDevolvidos.jasper", parametros, conexao.getConexao());
            //jPrint = JasperFillManager.fillReport(jReport, parametros, jrds);

            //if (!(jViewer == null)) {
            //jViewer = new JasperViewer(jPrint, false);
            //jViewer.setExtendedState(JFrame.MAXIMIZED_BOTH);
            jViewer.viewReport(jPrint, false);
            //}

        } catch (Exception ex) {
            ex.printStackTrace();
        }*/

    }//GEN-LAST:event_jbImprimirTabelaActionPerformed

    private void jDateChooserBuscaDataEntregaInicioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jDateChooserBuscaDataEntregaInicioFocusLost
        if (jDateChooserBuscaDataEntregaInicio.getDate() != null) {
            jDateChooserBuscaDataEntregaTermino.setEnabled(true);
        } else {
            jDateChooserBuscaDataEntregaTermino.setDate(null);
            jDateChooserBuscaDataEntregaTermino.setEnabled(false);
        }
    }//GEN-LAST:event_jDateChooserBuscaDataEntregaInicioFocusLost

    private void jmiRecargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiRecargaActionPerformed

        if (permitirRecarga == true) {
            iniciaClasseGeral();

            if (classeGeral.msgConfirmaAtualizacao("Deseja atualizar a RECARGA selecionada para o status 'CARREGADO'?")) {
                
                iniciaRecarga();
                buscaDados();

                if (recarga.getDataRecarga() == null) {
                    
                    iniciaEnviaEmail();
                    enviandoEmail();
                    atualizarRecarga();
                    
                } else {
                    JOptionPane.showMessageDialog(null, "Cartucho já Carregado!", "Atenção", JOptionPane.WARNING_MESSAGE, null);
                }

                setRecarga();

            }
        } else {
            JOptionPane.showMessageDialog(null, "Você não tem permissões para usar esta opção!", "Atenção", JOptionPane.WARNING_MESSAGE, null);
        }

    }//GEN-LAST:event_jmiRecargaActionPerformed

    private void jmiDevolucaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiDevolucaoActionPerformed

        if (permitirRecarga == true) {
            iniciaClasseGeral();

            if (classeGeral.msgConfirmaAtualizacao("Deseja atualizar a RECARGA selecionada para o status 'DEVOLVIDO'?")) {
                
                iniciaRecarga();
                buscaDados();

                if (recarga.getDataRecarga() == null) {
                    atualizarRecarga();
                }

                if (recarga.getDataDevolucao() == null) {
                    atualizarDevolucao();
                } else {
                    JOptionPane.showMessageDialog(null, "Cartucho já Devolvido!", "Atenção", JOptionPane.WARNING_MESSAGE, null);
                }

                setRecarga();

            }
        } else {
            JOptionPane.showMessageDialog(null, "Você não tem permissões para usar esta opção!", "Atenção", JOptionPane.WARNING_MESSAGE, null);
        }

    }//GEN-LAST:event_jmiDevolucaoActionPerformed

    private void jcboxCartuchosQueimadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcboxCartuchosQueimadosMouseClicked
        if (!jcboxCartuchosQueimados.isEnabled()) {
            jcboxCartuchosQueimados.setEnabled(true);
        }
    }//GEN-LAST:event_jcboxCartuchosQueimadosMouseClicked

    private void jDateChooserBuscaDataRecargaInicioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jDateChooserBuscaDataRecargaInicioFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jDateChooserBuscaDataRecargaInicioFocusLost

    /**
    * @param args the command line arguments
    */
    /*public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                jdBuscaRecarga dialog = new jdBuscaRecarga(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgEspecificacao;
    private javax.swing.ButtonGroup btgStatus;
    private javax.swing.ButtonGroup btgTipoEntidade;
    private com.toedter.calendar.JDateChooser jDateChooserBuscaDataEntregaInicio;
    private com.toedter.calendar.JDateChooser jDateChooserBuscaDataEntregaTermino;
    private com.toedter.calendar.JDateChooser jDateChooserBuscaDataRecargaInicio;
    private com.toedter.calendar.JDateChooser jDateChooserBuscaDataRecargaTermino;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbBuscaCancelar;
    private javax.swing.JButton jbBuscaEnviarDados;
    private javax.swing.JButton jbBuscaFechar;
    private javax.swing.JButton jbBuscaPesquisar;
    private javax.swing.JButton jbImprimirTabela;
    private javax.swing.JComboBox jcbBuscaModeloCartucho;
    private javax.swing.JComboBox jcbBuscaNomeEntidade;
    private javax.swing.JCheckBox jcboxCartuchosQueimados;
    private javax.swing.JLabel jlbRecargasNaTabela;
    private javax.swing.JMenuItem jmiDevolucao;
    private javax.swing.JMenuItem jmiRecarga;
    private javax.swing.JPanel jpBuscaBotoes;
    private javax.swing.JPopupMenu jpmBuscaRecarga;
    private javax.swing.JRadioButton jrbACarregarStatusRecarga;
    private javax.swing.JRadioButton jrbCarregadosStatusRecarga;
    private javax.swing.JRadioButton jrbCartuchosEspecificacao;
    private javax.swing.JRadioButton jrbCmei;
    private javax.swing.JRadioButton jrbDevolvidosStatusRecarga;
    private javax.swing.JRadioButton jrbEscola;
    private javax.swing.JRadioButton jrbOutros;
    private javax.swing.JRadioButton jrbTodosEntidade;
    private javax.swing.JRadioButton jrbTodosEspecificacao;
    private javax.swing.JRadioButton jrbTodosStatusRecarga;
    private javax.swing.JRadioButton jrbTonersEspecificacao;
    private javax.swing.JTable jtbBuscaRecarga;
    private javax.swing.JTextField jtfBuscaCodigoBarras;
    private javax.swing.JLabel lbTotal;
    // End of variables declaration//GEN-END:variables

//Outros Metodos ===========================================================================================================================================
    public void fechar() {

        cancelar();
        dao = null;
        this.dispose();

    }

    public void cancelar() {

        DefaultTableModel modelo = (DefaultTableModel) jtbBuscaRecarga.getModel();

        jcbBuscaNomeEntidade.setSelectedIndex(0);
        jcbBuscaNomeEntidade.setEnabled(false);
        jDateChooserBuscaDataEntregaInicio.setDate(null);
        jDateChooserBuscaDataEntregaTermino.setDate(null);
        jDateChooserBuscaDataRecargaInicio.setDate(null);
        jDateChooserBuscaDataRecargaTermino.setDate(null);
        jtfBuscaCodigoBarras.setText("");
        jrbEscola.setSelected(false);
        tipoEntid = "";
        tipoStat = "";
        jrbCmei.setSelected(false);
        jrbOutros.setSelected(false);
        jrbTodosEntidade.setSelected(true);
        jrbTodosEspecificacao.setSelected(true);
        jrbTodosStatusRecarga.setSelected(true);
        jlbRecargasNaTabela.setText("0");
        jcboxCartuchosQueimados.setSelected(false);
        jcboxCartuchosQueimados.setEnabled(false);
        cartuchoQueimado = "";
        preencheComboEscolas();
        preencheComboModeloCartuchos();

        modelo.setRowCount(0);
        setNumeroRecargasNaTabela("0");

        jrbOutros.transferFocus();

    }

    public void pesquisar() {

        DefaultTableModel modelo = (DefaultTableModel) jtbBuscaRecarga.getModel();
        final TableRowSorter<TableModel> tabelaSorter = new TableRowSorter<TableModel>(modelo);
        jtbBuscaRecarga.setRowSorter(tabelaSorter);
        
        modeloImpressao = (DefaultTableModel) jtbBuscaRecarga.getModel();
        iniciaCartucho();
        iniciaDao();
        //DAO dao = new DAO();
        Recarga recar;
        List listaRecarga = new ArrayList();
        
        int codigoCmei = 0;
        int codigoEscola = 0;
        int codigoModeloCartucho = 0;
        int codigoOutro = 0;
        String nomeEntid;
        String nomeEntid2 = "";
        Date dataEntregaTermino;
        Date dataRecargaInicio;
        Date dataRecargaTermino;
        
        if (jcboxCartuchosQueimados.isEnabled()) {
            
            if (jcboxCartuchosQueimados.isSelected()) {
                cartuchoQueimado = "true";
            } else {
                cartuchoQueimado = "false";
            }

        }
        
        if (jcbBuscaModeloCartucho.getSelectedIndex() != 0) {
            
            iniciaControleModeloCartucho();
            
            codigoModeloCartucho = controleModeloCartucho.getCodigoModeloCartucho(jcbBuscaModeloCartucho.getSelectedItem().toString());
            
        }
        
        if (jcbBuscaNomeEntidade.getSelectedIndex() != 0 || jcbBuscaNomeEntidade.isEnabled() == false) {
           
            switch (tipoEntid) {
            
                case "CMEI":
                    iniciaControleCmei();
                    codigoCmei = controleCmei.getCodigoCmei(jcbBuscaNomeEntidade.getSelectedItem().toString());
                    break;
                
                case "ESCOLA":
                    iniciaControleEscola();
                    codigoEscola = controleEscola.getCodigoEscola(jcbBuscaNomeEntidade.getSelectedItem().toString());
                    break;
                
                case "OUTROS":
                    iniciaControleOutro();
                    codigoOutro = controleOutro.getCodigoOutro(jcbBuscaNomeEntidade.getSelectedItem().toString());
                    break;
            
            }
            
        }

        if (jDateChooserBuscaDataEntregaTermino.getDate() == null) {
            dataEntregaTermino = null;
        } else {
            dataEntregaTermino = jDateChooserBuscaDataEntregaTermino.getDate();
        }

        if (jDateChooserBuscaDataRecargaInicio.getDate() == null) {
            dataRecargaInicio = null;
        } else {
            dataRecargaInicio = jDateChooserBuscaDataRecargaInicio.getDate();
        }
        
        if (jDateChooserBuscaDataRecargaTermino.getDate() == null) {
            dataRecargaTermino = null;
        } else {
            dataRecargaTermino = jDateChooserBuscaDataRecargaTermino.getDate();
        }
        
        if (jDateChooserBuscaDataEntregaInicio.getDate() == null) {
            listaRecarga = dao.listarRecarga(codigoEscola, codigoCmei, codigoModeloCartucho, codigoOutro, jtfBuscaCodigoBarras.getText(), tipoEntid, /*condicaoDataRecarga, 
                    condicaoDataDevolucao,*/ condicaoModeloCartucho, tipoStat, cartuchoQueimado, null, dataEntregaTermino, dataRecargaInicio, dataRecargaTermino);
        } else {
            //try {
                //dataSolic = df.parse(jftfBuscaDataSolicitacao.getText()); Usando jFormatedTextField
            //} catch (ParseException ex) {
            //    Logger.getLogger(jdBuscaAgendamento.class.getName()).log(Level.SEVERE, null, ex);
            //}
            listaRecarga = dao.listarRecarga(codigoEscola, codigoCmei, codigoModeloCartucho, codigoOutro, jtfBuscaCodigoBarras.getText(), tipoEntid, /*condicaoDataRecarga, condicaoDataDevolucao,*/ 
                    condicaoModeloCartucho, tipoStat, cartuchoQueimado, jDateChooserBuscaDataEntregaInicio.getDate(), dataEntregaTermino, dataRecargaInicio, dataRecargaTermino);
        }

        //listaAgendamento = dao.listarAgendamento(nomeEntid, new java.sql.Date(dataSolic.getTime()), tipoEntid);Usando jFormatedTextField

        modelo.setRowCount(0);
        iniciaEditaOrdemTabela();

        for (int i = 0; i < listaRecarga.size(); i++) {

            recar = (Recarga) listaRecarga.get(i);

            switch (recar.getTipoEntidade()) {
            
                case "ESCOLA":
                    nomeEntid2 = recar.getCartucho().getEscola().getNomeEscola();
                    break;
                
                case "CMEI":
                    nomeEntid2 = recar.getCartucho().getCmei().getNomeCmei();
                    break;
                
                case "OUTROS":
                    nomeEntid2 = recar.getCartucho().getOutro().getNomeOutro();
                    break;
            
            }
            
            modelo.addRow(new String[]{editaOrdemTabela.editaOrdem(i + 1), recar.getTipoEntidade(), nomeEntid2, recar.getCartucho().getModeloCartucho().getNomeModeloCartucho(), 
                String.valueOf(recar.getNumeroRecargas()), String.valueOf(recar.getDataEntrega()), String.valueOf(recar.getDataRecarga()), String.valueOf(recar.getDataDevolucao()), 
                recar.getCartucho().getCodigoBarra(), String.valueOf(recar.getCodigoRecarga())});
            
        }

        editaOrdemTabela.sortAllRowsBy(modelo, 2, true);
        modeloImpressao = modelo;

        if (jtbBuscaRecarga.getRowCount() > 0) {
            jtbBuscaRecarga.getSelectionModel().setSelectionInterval(0, 0);
        } else {
            iniciaClasseGeral();
            
            classeGeral.msgInforma("Não há recargas com estes dados!");
        }

        setNumeroRecargasNaTabela(String.valueOf(modelo.getRowCount()));

    }

    public void buscaDados() {

        iniciaDao();
        iniciaRecarga();

        int codigoRecarg;

        codigoRecarg = Integer.valueOf((String) jtbBuscaRecarga.getValueAt(jtbBuscaRecarga.getSelectedRow(), 9));

        recarga = (Recarga) dao.busca(recarga, codigoRecarg);
        dao.encerraSessao();

    }

    /*public void preencheCombo() {

    if (jcbBuscaTipoEntidade.getSelectedIndex() == 0) {
    preencheComboEscolas();
    } else {
    preencheComboCmeis();
    }

    }*/
    public void preencheComboEscolas() {

        iniciaDao();
        //DAO dao = new DAO();
        List listaEscolas = new ArrayList();

        jcbBuscaNomeEntidade.removeAllItems();
        jcbBuscaNomeEntidade.addItem("");

        listaEscolas = dao.listarEscolas(0, "", "");

        for (int i = 0; i < listaEscolas.size(); i++) {
            iniciaEscola();
            escola = (Escola) listaEscolas.get(i);
            jcbBuscaNomeEntidade.addItem(escola.getNomeEscola());
        }

    }

    public void preencheComboCmeis() {

        iniciaDao();
        //DAO dao = new DAO();
        List listaCmeis = new ArrayList();

        jcbBuscaNomeEntidade.removeAllItems();
        jcbBuscaNomeEntidade.addItem("");

        listaCmeis = dao.listarCmeis(0, "", "");

        for (int i = 0; i < listaCmeis.size(); i++) {
            iniciaCmei();
            cmei = (Cmei) listaCmeis.get(i);
            jcbBuscaNomeEntidade.addItem(cmei.getNomeCmei());
        }

    }
    
    public void preencheComboModeloCartuchos() {

        iniciaDao();
        //DAO dao = new DAO();
        List listaModeloCartuchos = new ArrayList();

        jcbBuscaModeloCartucho.removeAllItems();
        jcbBuscaModeloCartucho.addItem("");

        listaModeloCartuchos = dao.listarModelosCartuchos("", "");

        for (int i = 0; i < listaModeloCartuchos.size(); i++) {
            iniciaModeloCartucho();
            modeloCartucho = (ModeloCartucho) listaModeloCartuchos.get(i);
            jcbBuscaModeloCartucho.addItem(modeloCartucho.getNomeModeloCartucho());
        }

    }

    public void preencheComboOutros() {

        iniciaDao();
        //DAO dao = new DAO();
        List listaOutros = new ArrayList();

        jcbBuscaNomeEntidade.removeAllItems();
        jcbBuscaNomeEntidade.addItem("");

        listaOutros = dao.listarOutros(0, "", "");

        for (int i = 0; i < listaOutros.size(); i++) {
            iniciaOutro();
            outro = (Outro) listaOutros.get(i);
            jcbBuscaNomeEntidade.addItem(outro.getNomeOutro());
        }

    }
    
    public void enviandoEmail() {
        
        enviaEmail.enviarEmail((String) jtbBuscaRecarga.getValueAt(jtbBuscaRecarga.getSelectedRow(), 1), (String) jtbBuscaRecarga.getValueAt(jtbBuscaRecarga.getSelectedRow(), 2), getDateHoje(), codigoUsuario, (String) jtbBuscaRecarga.getValueAt(jtbBuscaRecarga.getSelectedRow(), 3), jtfBuscaCodigoBarras.getText());
        
    }

//Geradores, Validadores===========================================================================================================================================
    public void iniciaCartucho() {
        
        if (cartucho == null) {
            cartucho = new Cartucho();
        }
        
    }
    
    public void iniciaClasseGeral() {
        
        if (classeGeral == null) {
            classeGeral = new ClasseGeral();
        }
        
    }
    
    public void iniciaCmei() {
        
        if (cmei == null) {
            cmei = new Cmei();
        }
        
    }
    
    public void iniciaControleCmei() {
        
        if (controleCmei == null) {
            controleCmei = new ControleCmei();
        }
        
    }
    
    public void iniciaControleEscola() {
        
        if (controleEscola == null) {
            controleEscola = new ControleEscola();
        }
        
    }
    
    public void iniciaControleModeloCartucho() {
        
        if (controleModeloCartucho == null) {
            controleModeloCartucho = new ControleModeloCartucho();
        }
        
    }
    
    public void iniciaControleOutro() {
        
        if (controleOutro == null) {
            controleOutro = new ControleOutro();
        }
        
    }
    
    public void iniciaDao() {

        if (dao == null) {
            dao = new DAO();
        }

    }
    
    public void iniciaEntregaRemanufaturados() {
        
        if (entregaRemanufaturados == null) {
            entregaRemanufaturados = new EntregaRemanufaturados();
        }
        
    }
    
    public void iniciaEntregaRemanufaturadosItens() {
        
        if (entregaRemanufaturadosItens == null) {
            entregaRemanufaturadosItens = new EntregaRemanufaturadosItens();
        }
        
    }
    
    public void iniciaEnviaEmail() {
        
        if (enviaEmail == null) {
            enviaEmail = new EnviaEmail();
        }
        
    }

    public void iniciaEditaOrdemTabela() {
        
        if (editaOrdemTabela == null) {
            editaOrdemTabela = new EditaOrdemTabela();
        }
        
    }
    
    public void iniciaEscola() {
        
        if (escola == null) {
            escola = new Escola();
        }
        
    }
    
    public void iniciaModeloCartucho() {
        
        if (modeloCartucho == null) {
            modeloCartucho = new ModeloCartucho();
        }
        
    }
    
    public void iniciaOutro() {
        
        if (outro == null) {
            outro = new Outro();
        }
        
    }
    
    public void iniciaRecarga() {
        
        if (recarga == null) {
            recarga = new Recarga();
        }
        
    }
    
    public void iniciaUsuario() {
        
        if (usuario == null) {
            usuario = new Usuario();
        }
        
    }
    
//Getters and Setters===========================================================================================================================================
    public Date getDateHoje() {

        GregorianCalendar calendar = new GregorianCalendar();
        Date data = calendar.getTime();

        return data;

    }

    public void setNumeroCaracteres() {

        jtfBuscaCodigoBarras.setDocument(new FixedLengthDocument(15));

    }

    public void setNumeroRecargasNaTabela(String numeroRecargasNaTabela) {
        
        jlbRecargasNaTabela.setText(numeroRecargasNaTabela);
        
    }

    public void setNumeroRecargas() {

        iniciaDao();

        lbTotal.setText("" + dao.getNumeroRecargas());

    }

    public Recarga getRecarga() {

        return recarga;

    }

    public void setRecarga() {
        recarga = null;
    }

    public int getCodigoUsuario() {
        return codigoUsuario;
    }

    public void setCodigoUsuario(int codigoUsuario) {
        this.codigoUsuario = codigoUsuario;
        getPermissoes();
        setNumeroRecargasNaTabela("0");
        condicaoModeloCartucho = "";

    }

    public void getPermissoes() {
        Permissoes permissoes;
        iniciaDao();

        permissoes = (Permissoes) dao.buscaPermissoes(codigoUsuario);

        permitirRecarga = permissoes.isPermitirRecarga();
    }

//Metodos DAO===========================================================================================================================================
    public void atualizarRecarga() {

        iniciaDao();
        iniciaRecarga();

        recarga.setDataRecarga(getDateHoje());

        dao.atualizar(recarga, 7, codigoUsuario);
        
        iniciaCartucho();
        iniciaEntregaRemanufaturados();
        iniciaEntregaRemanufaturadosItens();
        
        entregaRemanufaturados = (EntregaRemanufaturados) dao.buscaEntregaRemanufaturados(0, 0, false, versao.getAno());
        
        if (entregaRemanufaturados == null) {
            
            EntregaRemanufaturados entregaRemanufaturadosAux;
            iniciaEntregaRemanufaturados();
            iniciaUsuario();
                
            usuario = (Usuario) dao.busca(usuario, getCodigoUsuario());
            
            entregaRemanufaturadosAux = (EntregaRemanufaturados) dao.buscaEntregaRemanufaturados(1, 1, true, versao.getAno());
            
            entregaRemanufaturados.setAno(versao.getAno());
            entregaRemanufaturados.setNumeroEntregaRemanufaturados(dao.getNumeroEntregaRemanufaturados(versao.getAno()));
            entregaRemanufaturados.setProtocoloFinalizado(false);
            entregaRemanufaturados.setUsuario(usuario);
                
            dao.inserir(entregaRemanufaturados, 0, codigoUsuario);
            usuario = null;
            
        }
        
        cartucho = (Cartucho) dao.buscaCartucho(0, 0, 0, "", jtbBuscaRecarga.getValueAt(jtbBuscaRecarga.getSelectedRow(), 8).toString(), "", false);
        
        if (dao.verificarEntregaRemanufaturadosItens(entregaRemanufaturados.getCodigoEntregaRemanufaturados(), cartucho.getCodigoCartucho()) == null) {
        
            entregaRemanufaturadosItens.setCartucho(cartucho);
            entregaRemanufaturadosItens.setEntregaRemanufaturados(entregaRemanufaturados);
            
            dao.inserir(entregaRemanufaturadosItens, 0, codigoUsuario);
            
            cartucho = null;
            
        } else {
            System.out.println("Toner já adicionado ao Protocolo de Entrega de Remanufaturados!");
        }
        
        pesquisar();

    }

    public void atualizarDevolucao() {

        iniciaDao();
        iniciaRecarga();

        recarga.setDataDevolucao(getDateHoje());

        dao.atualizar(recarga, 7, codigoUsuario);
        pesquisar();

    }

}
