/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * jfCadastroMultimidia.java
 *
 * Created on 31/05/2010, 19:18:30
 */
package visual;

import conexao.Conexao;
import controlador.*;
import dao.DAO;
import excecoes.ExcCadastro;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import modelo.Cmei;
import modelo.EquipamentoEntidades;
import modelo.Escola;
import modelo.Outro;
import modelo.Permissoes;
import modelo.TipoEquipamento;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author luizam
 */
public class JfCadastroEquipamentosEntidades extends javax.swing.JFrame {

    private static ControleVersao versao = new ControleVersao();
    private ClasseGeral classeGeral;
    private Cmei cmei;
    private ControleCmei controleCmei;
    private ControleEscola controleEscola;
    private ControleImagem controleImagem = new ControleImagem();
    private ControleOutro controleOutro;
    private ControleTipoEquipamento controleTipoEquipamento;
    private DAO dao;
    private EquipamentoEntidades equipamentoEntidades;
    private Escola escola;
    private Log geraLog;
    private Outro outro;
    private TipoEquipamento tipoEquipamento;
    
    private JdBuscaEquipamentosEntidades jdbee;
    private JfCadastroTipoEquipamento jfCadTipoEquipamento;
    
    private JasperPrint jPrint;
    private JasperViewer jViewer;

    private int codigo = 0;
    private int codigoUsuario;
    private String opcao = "salvar";
    private String tipoEntid = "ESCOLA";
    private boolean cadastrarEquipamentoUnidade;
    
    /** Creates new form jfCadastroMultimidia */
    public JfCadastroEquipamentosEntidades() {
        super("Cadastro Equipamento Entidades - " + versao.getVersao() + " - " + versao.getAno());
        initComponents();

        //Altera icone na barra de titulo
        Toolkit kit = Toolkit.getDefaultToolkit();
        Image img = kit.getImage("C:/SURGI/imagens/SURGI32x32.png");
        this.setIconImage(img);

        //centraliza tela
        setSize(getWidth(), getHeight());
        setLocationRelativeTo(null);

        preencheComboTipoEquipamento();

        setNumeroCaracteres();

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgEntidades = new javax.swing.ButtonGroup();
        jpBotoes = new javax.swing.JPanel();
        jbSalvar = new javax.swing.JButton();
        jbBuscar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();
        jbAlterar = new javax.swing.JButton();
        jbImprimir = new javax.swing.JButton();
        jpCadastroEquipamento = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtfMarca = new javax.swing.JTextField();
        jtfModelo = new javax.swing.JTextField();
        jtfCor = new javax.swing.JTextField();
        jtfPatrimonio = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jcbTipoEquipamento = new javax.swing.JComboBox();
        jbNovoEquipamento = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jrbEscola = new javax.swing.JRadioButton();
        jrbCmei = new javax.swing.JRadioButton();
        jrbOutros = new javax.swing.JRadioButton();
        jcbNomeEntidade = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jtfSetorEquipamento = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jtfCartuchoPretoEquipamento = new javax.swing.JTextField();
        jtfCartuchoColoridoEquipamento = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jpBotoes.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        jbSalvar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/OK.png"))); // NOI18N
        jbSalvar.setText("Salvar");
        jbSalvar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        jbBuscar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/pesquisar.png"))); // NOI18N
        jbBuscar.setText("Buscar");
        jbBuscar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jbCancelar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cancelar.png"))); // NOI18N
        jbCancelar.setText("Cancelar");
        jbCancelar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jbExcluir.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/delete.png"))); // NOI18N
        jbExcluir.setText("Excluir");
        jbExcluir.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbExcluir.setEnabled(false);
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jbAlterar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/reload.png"))); // NOI18N
        jbAlterar.setText("Alterar");
        jbAlterar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbAlterar.setEnabled(false);
        jbAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlterarActionPerformed(evt);
            }
        });

        jbImprimir.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/imprimir.png"))); // NOI18N
        jbImprimir.setText("Imprimir");
        jbImprimir.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbImprimir.setEnabled(false);
        jbImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbImprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpBotoesLayout = new javax.swing.GroupLayout(jpBotoes);
        jpBotoes.setLayout(jpBotoesLayout);
        jpBotoesLayout.setHorizontalGroup(
            jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBotoesLayout.createSequentialGroup()
                .addGap(124, 124, 124)
                .addComponent(jbSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpBotoesLayout.setVerticalGroup(
            jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jpCadastroEquipamento.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Marca: ");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Modelo: ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Cor: ");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Patrimônio: ");

        jtfMarca.setBackground(new java.awt.Color(204, 204, 255));
        jtfMarca.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfMarca.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtfMarca.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfMarcaFocusLost(evt);
            }
        });

        jtfModelo.setBackground(new java.awt.Color(204, 204, 255));
        jtfModelo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfModelo.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtfModelo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfModeloFocusLost(evt);
            }
        });

        jtfCor.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfCor.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtfCor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfCorFocusLost(evt);
            }
        });

        jtfPatrimonio.setBackground(new java.awt.Color(204, 204, 255));
        jtfPatrimonio.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfPatrimonio.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtfPatrimonio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfPatrimonioFocusLost(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Tipo de Equipamento: ");

        jcbTipoEquipamento.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbTipoEquipamento.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jbNovoEquipamento.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbNovoEquipamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/novo02.png"))); // NOI18N
        jbNovoEquipamento.setText("Novo Tipo de Equipamento");
        jbNovoEquipamento.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbNovoEquipamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovoEquipamentoActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Tipo de Entidade: ");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Unidade: ");

        btgEntidades.add(jrbEscola);
        jrbEscola.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbEscola.setSelected(true);
        jrbEscola.setText("Escola");
        jrbEscola.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbEscolaActionPerformed(evt);
            }
        });

        btgEntidades.add(jrbCmei);
        jrbCmei.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbCmei.setText("CMEI");
        jrbCmei.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbCmeiActionPerformed(evt);
            }
        });

        btgEntidades.add(jrbOutros);
        jrbOutros.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbOutros.setText("Outros");
        jrbOutros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbOutrosActionPerformed(evt);
            }
        });

        jcbNomeEntidade.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbNomeEntidade.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Setor: ");

        jtfSetorEquipamento.setBackground(new java.awt.Color(204, 204, 255));
        jtfSetorEquipamento.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfSetorEquipamento.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtfSetorEquipamento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfSetorEquipamentoFocusLost(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("Cartucho Preto: ");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setText("Cartucho Colorido: ");

        jtfCartuchoPretoEquipamento.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfCartuchoPretoEquipamento.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtfCartuchoPretoEquipamento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfCartuchoPretoEquipamentoFocusLost(evt);
            }
        });

        jtfCartuchoColoridoEquipamento.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfCartuchoColoridoEquipamento.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtfCartuchoColoridoEquipamento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfCartuchoColoridoEquipamentoFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jpCadastroEquipamentoLayout = new javax.swing.GroupLayout(jpCadastroEquipamento);
        jpCadastroEquipamento.setLayout(jpCadastroEquipamentoLayout);
        jpCadastroEquipamentoLayout.setHorizontalGroup(
            jpCadastroEquipamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCadastroEquipamentoLayout.createSequentialGroup()
                .addGroup(jpCadastroEquipamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpCadastroEquipamentoLayout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(jpCadastroEquipamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpCadastroEquipamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcbTipoEquipamento, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jtfMarca)
                            .addComponent(jtfModelo)
                            .addComponent(jtfCartuchoPretoEquipamento)
                            .addComponent(jtfCartuchoColoridoEquipamento)))
                    .addGroup(jpCadastroEquipamentoLayout.createSequentialGroup()
                        .addGroup(jpCadastroEquipamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpCadastroEquipamentoLayout.createSequentialGroup()
                                .addGap(75, 75, 75)
                                .addGroup(jpCadastroEquipamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)))
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpCadastroEquipamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfCor)
                            .addComponent(jcbNomeEntidade, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jtfSetorEquipamento)
                            .addGroup(jpCadastroEquipamentoLayout.createSequentialGroup()
                                .addGroup(jpCadastroEquipamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtfPatrimonio, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jpCadastroEquipamentoLayout.createSequentialGroup()
                                        .addComponent(jrbEscola)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jrbCmei)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jrbOutros)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(18, 18, 18)
                .addComponent(jbNovoEquipamento, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(113, 113, 113))
        );
        jpCadastroEquipamentoLayout.setVerticalGroup(
            jpCadastroEquipamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCadastroEquipamentoLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jpCadastroEquipamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jrbEscola)
                    .addComponent(jrbCmei)
                    .addComponent(jrbOutros))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpCadastroEquipamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jcbNomeEntidade, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpCadastroEquipamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jtfSetorEquipamento, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpCadastroEquipamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jcbTipoEquipamento, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbNovoEquipamento, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpCadastroEquipamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtfMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpCadastroEquipamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtfModelo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpCadastroEquipamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jtfCartuchoPretoEquipamento, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jpCadastroEquipamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jtfCartuchoColoridoEquipamento, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpCadastroEquipamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtfCor, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpCadastroEquipamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtfPatrimonio, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(93, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jpCadastroEquipamento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jpCadastroEquipamento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed

        if (opcao.equals("salvar")) {

            salvar();
            opcao = "salvar";

        } else if (opcao.equals("alterar")) {

            atualizar();
            opcao = "salvar";

        }
}//GEN-LAST:event_jbSalvarActionPerformed

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed

        if (jdbee == null) {
            jdbee = new JdBuscaEquipamentosEntidades(null, true);
        }

        jdbee.setVisible(true);

        setEquipamentoEntidadeBuscado(jdbee.getEquipamentoEntidades());
        jdbee.setEquipamentoEntidades();
}//GEN-LAST:event_jbBuscarActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        cancelar();
}//GEN-LAST:event_jbCancelarActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        excluir();
}//GEN-LAST:event_jbExcluirActionPerformed

    private void jbAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlterarActionPerformed

        abilitaCampos();

        jbAlterar.setEnabled(false);

        opcao = "alterar";

        jbSalvar.setEnabled(true);

}//GEN-LAST:event_jbAlterarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        fechar();
    }//GEN-LAST:event_formWindowClosing

    private void jtfMarcaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfMarcaFocusLost
        jtfMarca.setText(jtfMarca.getText().toUpperCase());
    }//GEN-LAST:event_jtfMarcaFocusLost

    private void jtfModeloFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfModeloFocusLost
        jtfModelo.setText(jtfModelo.getText().toUpperCase());
    }//GEN-LAST:event_jtfModeloFocusLost

    private void jtfCorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCorFocusLost
        jtfCor.setText(jtfCor.getText().toUpperCase());
    }//GEN-LAST:event_jtfCorFocusLost

    private void jtfPatrimonioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfPatrimonioFocusLost
        jtfPatrimonio.setText(jtfPatrimonio.getText().toUpperCase());
    }//GEN-LAST:event_jtfPatrimonioFocusLost

    private void jbImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbImprimirActionPerformed

        //ADOGeral ag = new ADOGeral();
        Conexao conexao = new Conexao();
        HashMap parametros = new HashMap();
        try {
            //System.out.println(codigoRegistro);
            //parametros.put("titulo", "Titulo Relatorio");
            parametros.put("codigoEquipamento", new Integer(codigo));
            //parametros.put("codigo", lista.get(0).getNome();
            //ADOGeral.conectar();
            conexao.getConexao();
        } catch (ExcCadastro ex) {
            Logger.getLogger(JfImpressosAgendamento.class.getName()).log(Level.SEVERE, null, ex);
        }

        //        JRDataSource jrds = new JRBeanCollectionDataSource(lista);

        try {

            //jReport = JasperCompileManager.compileReport("E:/LUIZ/PROJETOS JAVA/CORPORATIVO/m2GestaoClinicas/FichaPaciente.jrxml");
            //jPrint = JasperFillManager.fillReport("C:/m2GestaoClinicas/FichaPaciente.jasper", parametros, ADOGeral.getConexao());
            jPrint = JasperFillManager.fillReport("EquipamentoEntidade.jasper", parametros, conexao.getConexao());
            //jPrint = JasperFillManager.fillReport(jReport, parametros, jrds);

            //if (!(jViewer == null)) {
            //jViewer = new JasperViewer(jPrint, false);
            //jViewer.setExtendedState(JFrame.MAXIMIZED_BOTH);
            jViewer.viewReport(jPrint, false);
            //}

        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }//GEN-LAST:event_jbImprimirActionPerformed

    private void jbNovoEquipamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovoEquipamentoActionPerformed

        if (jfCadTipoEquipamento == null) {
            jfCadTipoEquipamento = new JfCadastroTipoEquipamento();
        }

        jfCadTipoEquipamento.setCodigoUsuario(codigoUsuario);
        jfCadTipoEquipamento.setVisible(true);
        preencheComboTipoEquipamento();

}//GEN-LAST:event_jbNovoEquipamentoActionPerformed

    private void jrbEscolaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbEscolaActionPerformed
        tipoEntid = "ESCOLA";
        preencheComboEscolas();
    }//GEN-LAST:event_jrbEscolaActionPerformed

    private void jrbCmeiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbCmeiActionPerformed
        tipoEntid = "CMEI";
        preencheComboCmeis();
    }//GEN-LAST:event_jrbCmeiActionPerformed

    private void jrbOutrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbOutrosActionPerformed
        tipoEntid = "OUTROS";
        preencheComboOutros();
    }//GEN-LAST:event_jrbOutrosActionPerformed

    private void jtfSetorEquipamentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfSetorEquipamentoFocusLost
        jtfSetorEquipamento.setText(jtfSetorEquipamento.getText().toUpperCase());
    }//GEN-LAST:event_jtfSetorEquipamentoFocusLost

    private void jtfCartuchoPretoEquipamentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCartuchoPretoEquipamentoFocusLost
        jtfCartuchoPretoEquipamento.setText(jtfCartuchoPretoEquipamento.getText().toUpperCase());
    }//GEN-LAST:event_jtfCartuchoPretoEquipamentoFocusLost

    private void jtfCartuchoColoridoEquipamentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCartuchoColoridoEquipamentoFocusLost
        jtfCartuchoColoridoEquipamento.setText(jtfCartuchoColoridoEquipamento.getText().toUpperCase());
    }//GEN-LAST:event_jtfCartuchoColoridoEquipamentoFocusLost
    /**
     * @param args the command line arguments
     */
    /*public static void main(String args[]) {
    java.awt.EventQueue.invokeLater(new Runnable() {
    public void run() {
    new jfCadastroMultimidia().setVisible(true);
    }
    });
    }*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgEntidades;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton jbAlterar;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbImprimir;
    private javax.swing.JButton jbNovoEquipamento;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JComboBox jcbNomeEntidade;
    private javax.swing.JComboBox jcbTipoEquipamento;
    private javax.swing.JPanel jpBotoes;
    private javax.swing.JPanel jpCadastroEquipamento;
    private javax.swing.JRadioButton jrbCmei;
    private javax.swing.JRadioButton jrbEscola;
    private javax.swing.JRadioButton jrbOutros;
    private javax.swing.JTextField jtfCartuchoColoridoEquipamento;
    private javax.swing.JTextField jtfCartuchoPretoEquipamento;
    private javax.swing.JTextField jtfCor;
    private javax.swing.JTextField jtfMarca;
    private javax.swing.JTextField jtfModelo;
    private javax.swing.JTextField jtfPatrimonio;
    private javax.swing.JTextField jtfSetorEquipamento;
    // End of variables declaration//GEN-END:variables

//Outros Metodos ===========================================================================================================================================
    public void fechar() {

        if (!jtfMarca.getText().isEmpty() || !jtfModelo.getText().isEmpty() || !jtfCor.getText().isEmpty() || !jtfPatrimonio.getText().isEmpty()) {
            iniciaClasseGeral();
            classeGeral.msgAtencao("Cancele ou Salve o Cadastro em Edição!");
        } else {
            dao = null;
            this.dispose();
        }

    }

    public void cancelar() {

        jtfCartuchoColoridoEquipamento.setText("");
        jtfCartuchoPretoEquipamento.setText("");
        jtfCor.setText("");
        jtfMarca.setText("");
        jtfModelo.setText("");
        jtfPatrimonio.setText("");
        jtfSetorEquipamento.setText("");
        jcbNomeEntidade.setSelectedIndex(0);
        jcbTipoEquipamento.setSelectedIndex(0);
        jrbEscola.setSelected(true);

        abilitaCampos();

        desabilitaBotoes();

        jtfModelo.transferFocusBackward();

        opcao = "salvar";

        preencheComboTipoEquipamento();

    }

    public void abilitaCampos() {

        jtfCartuchoColoridoEquipamento.setEditable(true);
        jtfCartuchoPretoEquipamento.setEditable(true);
        jtfCor.setEditable(true);
        jtfMarca.setEditable(true);
        jtfModelo.setEditable(true);
        jtfPatrimonio.setEditable(true);
        jtfSetorEquipamento.setEditable(true);
        jcbNomeEntidade.setEnabled(true);
        jcbTipoEquipamento.setEnabled(true);
        jrbCmei.setEnabled(true);
        jrbEscola.setEnabled(true);
        jrbOutros.setEnabled(true);

    }

    public void desabilitaCampos() {

        jtfCartuchoColoridoEquipamento.setEditable(false);
        jtfCartuchoPretoEquipamento.setEditable(false);
        jtfCor.setEditable(false);
        jtfMarca.setEditable(false);
        jtfModelo.setEditable(false);
        jtfPatrimonio.setEditable(false);
        jtfSetorEquipamento.setEditable(false);
        jcbNomeEntidade.setEnabled(false);
        jcbTipoEquipamento.setEnabled(false);
        jrbCmei.setEnabled(false);
        jrbEscola.setEnabled(false);
        jrbOutros.setEnabled(false);

    }

    public void abilitaBotoes() {

        jbCancelar.setEnabled(true);
        jbBuscar.setEnabled(true);
        jbImprimir.setEnabled(true);

        if (cadastrarEquipamentoUnidade == true) {
            jbSalvar.setEnabled(false);
            jbExcluir.setEnabled(true);
            jbAlterar.setEnabled(true);
        } else {
            jbSalvar.setEnabled(false);
            jbExcluir.setEnabled(false);
            jbAlterar.setEnabled(false);
        }

    }

    public void desabilitaBotoes() {

        jbCancelar.setEnabled(true);
        jbBuscar.setEnabled(true);
        jbImprimir.setEnabled(false);

        if (cadastrarEquipamentoUnidade == true) {
            jbSalvar.setEnabled(true);
            jbExcluir.setEnabled(false);
            jbAlterar.setEnabled(false);
        } else {
            jbSalvar.setEnabled(false);
            jbExcluir.setEnabled(false);
            jbAlterar.setEnabled(false);
        }

    }

    public void preencheComboCmeis() {

        iniciaDao();
        List listaCmeis = new ArrayList();

        jcbNomeEntidade.removeAllItems();
        jcbNomeEntidade.addItem("");

        listaCmeis = dao.listarCmeis(0, "", "");

        for (int i = 0; i < listaCmeis.size(); i++) {
            iniciaCmei();
            cmei = (Cmei) listaCmeis.get(i);
            jcbNomeEntidade.addItem(cmei.getNomeCmei());
        }
    }

    public void preencheComboEscolas() {

        iniciaDao();
        List listaEscolas = new ArrayList();

        jcbNomeEntidade.removeAllItems();
        jcbNomeEntidade.addItem("");

        listaEscolas = dao.listarEscolas(0, "", "");

        for (int i = 0; i < listaEscolas.size(); i++) {
            iniciaEscola();
            escola = (Escola) listaEscolas.get(i);
            jcbNomeEntidade.addItem(escola.getNomeEscola());
        }

    }
    
    public void preencheComboOutros() {

        iniciaDao();
        List listaOutros = new ArrayList();

        jcbNomeEntidade.removeAllItems();
        jcbNomeEntidade.addItem("");

        listaOutros = dao.listarOutros(0, "", "");

        for (int i = 0; i < listaOutros.size(); i++) {
            iniciaOutro();
            outro = (Outro) listaOutros.get(i);
            jcbNomeEntidade.addItem(outro.getNomeOutro());
        }

    }

     public void preencheComboTipoEquipamento() {

        iniciaDao();
        //DAO dao = new DAO();
        TipoEquipamento tipoEquip = new TipoEquipamento();
        List listaTipoEquipamentos = new ArrayList();

        jcbTipoEquipamento.removeAllItems();

        listaTipoEquipamentos = dao.listarTipoEquipamentos(0, "");

        for (int i = 0; i < listaTipoEquipamentos.size(); i++) {
            tipoEquip = (TipoEquipamento) listaTipoEquipamentos.get(i);
            jcbTipoEquipamento.addItem(tipoEquip.getNomeTipoEquipamento());
        }

        jcbTipoEquipamento.setSelectedIndex(0);

    }

//Geradores, Validadores===========================================================================================================================================
    public void iniciaClasseGeral() {
    
        if (classeGeral == null) {
            classeGeral = new ClasseGeral();
        }
        
    }
     
    public void iniciaCmei() {
        
        if (cmei == null) {
            cmei = new Cmei();
        }
        
    }
    
    public void iniciaControleCmei() {
        
        if (controleCmei == null) {
            controleCmei = new ControleCmei();
        }
        
    }
    
    public void iniciaControleEscola() {
        
        if (controleEscola == null) {
            controleEscola = new ControleEscola();
        }
        
    }
    
    public void iniciaControleOutro() {
        
        if (controleOutro == null) {
            controleOutro = new ControleOutro();
        }
        
    }
    
    public void iniciaControleTipoEquipamento() {
        
        if (controleTipoEquipamento == null) {
            controleTipoEquipamento = new ControleTipoEquipamento();
        }
        
    }
    
    public void iniciaDao() {

        if (dao == null) {
            dao = new DAO();
        }

    }
    
    public void iniciaEscola() {
        
        if (escola == null) {
            escola = new Escola();
        }
        
    }
    
    public void iniciaEquipamentoEntidades() {
        
        if (equipamentoEntidades == null) {
            equipamentoEntidades = new EquipamentoEntidades();
        }
        
    }
    
    public void iniciaLog() {
        
        if (geraLog == null) {
            geraLog = new Log();
        }
        
    }
    
    public void iniciaOutro() {
        
        if (outro == null) {
            outro = new Outro();
        }
        
    }
    
    public void iniciaTipoEquipamento() {
        
        if (tipoEquipamento == null) {
            tipoEquipamento = new TipoEquipamento();
        }
        
    }
    
//Getters and Setters===========================================================================================================================================
    public void setEquipamentoEntidadeBuscado(EquipamentoEntidades equipamentoEntidadesBuscado) {

        if (equipamentoEntidadesBuscado == null) {
        } else {

            iniciaDao();
            iniciaTipoEquipamento();
            iniciaEquipamentoEntidades();
            
            if (equipamentoEntidadesBuscado.getTipoEntidadeEquipamentoEntidade().equals("ESCOLA")) {
                
                iniciaEscola();
                jrbEscola.setSelected(true);
                preencheComboEscolas();
                
                escola = (Escola) equipamentoEntidadesBuscado.getEscola();
                jcbNomeEntidade.setSelectedItem(escola.getNomeEscola());
                
            } else if (equipamentoEntidadesBuscado.getTipoEntidadeEquipamentoEntidade().equals("CMEI")) {
                
                iniciaCmei();
                jrbCmei.setSelected(true);
                preencheComboCmeis();
                
                cmei = (Cmei) equipamentoEntidadesBuscado.getCmei();
                jcbNomeEntidade.setSelectedItem(cmei.getNomeCmei());
                
            } else if (equipamentoEntidadesBuscado.getTipoEntidadeEquipamentoEntidade().equals("OUTROS")) {
                
                iniciaOutro();
                jrbOutros.setSelected(true);
                preencheComboOutros();
                
                outro = (Outro) equipamentoEntidadesBuscado.getOutro();
                jcbNomeEntidade.setSelectedItem(outro.getNomeOutro());
            }

            jtfCartuchoColoridoEquipamento.setText(equipamentoEntidadesBuscado.getCartuchoColoridoEquipamentoEntidade());
            jtfCartuchoPretoEquipamento.setText(equipamentoEntidadesBuscado.getCartuchoPretoEquipamentoEntidade());
            jtfCor.setText(equipamentoEntidadesBuscado.getCorEquipamentoEntidade());
            jtfMarca.setText(equipamentoEntidadesBuscado.getMarcaEquipamentoEntidade());
            jtfModelo.setText(equipamentoEntidadesBuscado.getModeloEquipamentoEntidade());
            jtfPatrimonio.setText(equipamentoEntidadesBuscado.getPatrimonioEquipamentoEntidade());
            jtfSetorEquipamento.setText(equipamentoEntidadesBuscado.getSetorEquipamentoEntidade());
            
            tipoEquipamento = (TipoEquipamento) equipamentoEntidadesBuscado.getTipoEquipamento();
            jcbTipoEquipamento.setSelectedItem(tipoEquipamento.getNomeTipoEquipamento());

            codigo = equipamentoEntidadesBuscado.getCodigoEquipamentoEntidade();
            equipamentoEntidades = equipamentoEntidadesBuscado;
            equipamentoEntidades.setCodigoEquipamentoEntidade(codigo);

            desabilitaCampos();

            abilitaBotoes();

        }

    }

    public void setNumeroCaracteres() {

        jtfMarca.setDocument(new FixedLengthDocument(120));
        jtfModelo.setDocument(new FixedLengthDocument(120));
        jtfCor.setDocument(new FixedLengthDocument(60));
        jtfPatrimonio.setDocument(new FixedLengthDocument(10));
        jtfSetorEquipamento.setDocument(new FixedLengthDocument(120));

    }

    public int getCodigoUsuario() {
        return codigoUsuario;
    }

    public void setCodigoUsuario(int codigoUsuario) {
        this.codigoUsuario = codigoUsuario;
        getPermissoes();
        desabilitaBotoes();
        preencheComboEscolas();
    }

    public void getPermissoes() {
        Permissoes permissoes;
        iniciaDao();
        //DAO dao = new DAO();

        permissoes = (Permissoes) dao.buscaPermissoes(codigoUsuario);

        cadastrarEquipamentoUnidade = permissoes.isCadastrarEquipamentoUnidade();
    }

//Metodos DAO===========================================================================================================================================
    public void salvar() {

        if (!jtfMarca.getText().isEmpty() && !jtfModelo.getText().isEmpty() && !jtfPatrimonio.getText().isEmpty() && jcbNomeEntidade.getSelectedIndex() != 0
            && !jtfSetorEquipamento.getText().isEmpty()) {

            iniciaControleTipoEquipamento();
            iniciaDao();
            iniciaEquipamentoEntidades();
            iniciaTipoEquipamento();

            equipamentoEntidades.setCartuchoColoridoEquipamentoEntidade(jtfCartuchoColoridoEquipamento.getText());
            equipamentoEntidades.setCartuchoPretoEquipamentoEntidade(jtfCartuchoPretoEquipamento.getText());
            equipamentoEntidades.setCorEquipamentoEntidade(jtfCor.getText());
            equipamentoEntidades.setMarcaEquipamentoEntidade(jtfMarca.getText());
            equipamentoEntidades.setModeloEquipamentoEntidade(jtfModelo.getText());
            equipamentoEntidades.setPatrimonioEquipamentoEntidade(jtfPatrimonio.getText());
            equipamentoEntidades.setSetorEquipamentoEntidade(jtfSetorEquipamento.getText());
            equipamentoEntidades.setTipoEntidadeEquipamentoEntidade(tipoEntid);
            
            if (jrbEscola.isSelected()) {
                
                iniciaControleEscola();
                iniciaEscola();
                
                escola = (Escola) dao.busca(escola, controleEscola.getCodigoEscola(jcbNomeEntidade.getSelectedItem().toString()));
                dao.encerraSessao();
                equipamentoEntidades.setEscola(escola);
                
            } else if (jrbCmei.isSelected()) {
                
                iniciaCmei();
                iniciaControleCmei();

                cmei = (Cmei) dao.busca(cmei, controleCmei.getCodigoCmei(jcbNomeEntidade.getSelectedItem().toString()));
                equipamentoEntidades.setCmei(cmei);
                
            } else if (jrbOutros.isSelected()) {
                
                iniciaControleOutro();
                iniciaOutro();
                
                outro = (Outro) dao.busca(outro, controleCmei.getCodigoCmei(jcbNomeEntidade.getSelectedItem().toString()));
                dao.encerraSessao();
                equipamentoEntidades.setOutro(outro);
                
            }
            
            tipoEquipamento = (TipoEquipamento) dao.busca(tipoEquipamento, controleTipoEquipamento.getCodigoEquipamento(jcbTipoEquipamento.getSelectedItem().toString()));
            dao.encerraSessao();
            equipamentoEntidades.setTipoEquipamento(tipoEquipamento);

            try {
                iniciaLog();
                geraLog.criaLog(codigoUsuario, "Cadastro Equipamento Entidades", "Tentou Salvar para " + equipamentoEntidades.getTipoEntidadeEquipamentoEntidade() + " " + jcbNomeEntidade.getSelectedItem().toString() + jcbTipoEquipamento.getSelectedItem().toString() + " Marca " + equipamentoEntidades.getMarcaEquipamentoEntidade() + " Modelo " + equipamentoEntidades.getModeloEquipamentoEntidade() + " Patrimônio " + equipamentoEntidades.getPatrimonioEquipamentoEntidade());
            } catch (IOException ex) {
                Logger.getLogger(JfPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            dao.inserir(equipamentoEntidades, 7, codigoUsuario);
            cancelar();

        } else {
            iniciaClasseGeral();
            classeGeral.msgAtencao("Complete os Campos Obrigatórios, destacados em Azul!");
        }

    }

    public void atualizar() {

        if (!jtfMarca.getText().isEmpty() && !jtfModelo.getText().isEmpty() && !jtfPatrimonio.getText().isEmpty()) {

            iniciaControleTipoEquipamento();
            iniciaDao();
            iniciaEquipamentoEntidades();
            iniciaTipoEquipamento();

            equipamentoEntidades.setCartuchoColoridoEquipamentoEntidade(jtfCartuchoColoridoEquipamento.getText());
            equipamentoEntidades.setCartuchoPretoEquipamentoEntidade(jtfCartuchoPretoEquipamento.getText());
            equipamentoEntidades.setCorEquipamentoEntidade(jtfCor.getText());
            equipamentoEntidades.setMarcaEquipamentoEntidade(jtfMarca.getText());
            equipamentoEntidades.setModeloEquipamentoEntidade(jtfModelo.getText());
            equipamentoEntidades.setPatrimonioEquipamentoEntidade(jtfPatrimonio.getText());
            equipamentoEntidades.setSetorEquipamentoEntidade(jtfSetorEquipamento.getText());
            equipamentoEntidades.setTipoEntidadeEquipamentoEntidade(tipoEntid);

            if (jrbEscola.isSelected()) {
                
                iniciaControleEscola();
                iniciaEscola();
                
                escola = (Escola) dao.busca(escola, controleEscola.getCodigoEscola(jcbNomeEntidade.getSelectedItem().toString()));
                dao.encerraSessao();
                equipamentoEntidades.setEscola(escola);
                
            } else if (jrbCmei.isSelected()) {
                
                iniciaCmei();
                iniciaControleCmei();

                cmei = (Cmei) dao.busca(cmei, controleCmei.getCodigoCmei(jcbNomeEntidade.getSelectedItem().toString()));
                dao.encerraSessao();
                equipamentoEntidades.setCmei(cmei);
                
            } else if (jrbOutros.isSelected()) {
                
                iniciaControleOutro();
                iniciaOutro();
                
                outro = (Outro) dao.busca(outro, controleCmei.getCodigoCmei(jcbNomeEntidade.getSelectedItem().toString()));
                dao.encerraSessao();
                equipamentoEntidades.setOutro(outro);
                
            }
            
            tipoEquipamento = (TipoEquipamento) dao.busca(tipoEquipamento, controleTipoEquipamento.getCodigoEquipamento(jcbTipoEquipamento.getSelectedItem().toString()));
            dao.encerraSessao();
            equipamentoEntidades.setTipoEquipamento(tipoEquipamento);
            
            try {
                iniciaLog();
                geraLog.criaLog(codigoUsuario, "Cadastro Equipamento Entidades", "Tentou Atualizar Código: " + equipamentoEntidades.getCodigoEquipamentoEntidade() + " " + jcbTipoEquipamento.getSelectedItem().toString() + " Marca " + equipamentoEntidades.getMarcaEquipamentoEntidade() + " Modelo " + equipamentoEntidades.getModeloEquipamentoEntidade() + " Patrimônio " + equipamentoEntidades.getPatrimonioEquipamentoEntidade());
            } catch (IOException ex) {
                Logger.getLogger(JfPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            dao.atualizar(equipamentoEntidades, 7, codigoUsuario);
            cancelar();

        } else {
            iniciaClasseGeral();
            classeGeral.msgAtencao("Complete os Campos Obrigatórios, destacados em Azul!");
        }

    }

    public void excluir() {

        iniciaClasseGeral();

        if (classeGeral.msgConfirma("Deseja excluir o Equipamento ?")) {

            iniciaDao();
            iniciaEquipamentoEntidades();
            
            try {
                iniciaLog();
                geraLog.criaLog(codigoUsuario, "Cadastro Equipamento Entidades", "Tentou Excluir Código: " + equipamentoEntidades.getCodigoEquipamentoEntidade() + " " + jcbTipoEquipamento.getSelectedItem().toString() + " Marca " + equipamentoEntidades.getMarcaEquipamentoEntidade() + " Modelo " + equipamentoEntidades.getModeloEquipamentoEntidade() + " Patrimônio " + equipamentoEntidades.getPatrimonioEquipamentoEntidade());
            } catch (IOException ex) {
                Logger.getLogger(JfPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            dao.excluir(equipamentoEntidades, codigoUsuario);
            cancelar();

        }

    }
}
