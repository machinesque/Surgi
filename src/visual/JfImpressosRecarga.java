/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * jfImpressosAgendamento.java
 *
 * Created on 03/03/2010, 20:23:35
 */
package visual;

import conexao.Conexao;
import controlador.ClasseGeral;
import controlador.ControleImagem;
import controlador.ControleVersao;
import dao.DAO;
import excecoes.ExcCadastro;
import java.awt.Image;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import modelo.Permissoes;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author luizam
 */
public class JfImpressosRecarga extends javax.swing.JFrame {

    private static ControleVersao versao = new ControleVersao();
    private ClasseGeral classeGeral;
    private DAO dao;
    
    private JasperPrint jPrint;
    private JasperViewer jViewer;
    
    private int codigoUsuario;
    private String condicaoMensalModeloCartucho = "";
    private String condicaoMensalDataRecarga = "";
    private String condicaoMensalDataDevolucao = "";
    private String modeloCartucho = "like %%";
    private String tipoEntidade = "";
    private boolean impressosRecarga;

    /** Creates new form jfImpressosAgendamento */
    public JfImpressosRecarga() {
        super("Impressos Recarga - " + versao.getVersao() + " - " + versao.getAno());
        initComponents();

        //Altera icone na barra de titulo
        Toolkit kit = Toolkit.getDefaultToolkit();
        Image img = kit.getImage("C:/SURGI/imagens/SURGI32x32.png");
        this.setIconImage(img);

        //centraliza tela
        setSize(getWidth(), getHeight());
        setLocationRelativeTo(null);

        preencheComboEscolas();

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgModoImpressao = new javax.swing.ButtonGroup();
        btgEntidades = new javax.swing.ButtonGroup();
        btgMensal = new javax.swing.ButtonGroup();
        btgModeloCartucho = new javax.swing.ButtonGroup();
        jpImprRecarga = new javax.swing.JPanel();
        jpModoImpressao = new javax.swing.JPanel();
        jrbTodasRecargas = new javax.swing.JRadioButton();
        jrbMensal = new javax.swing.JRadioButton();
        jrbPorEntidade = new javax.swing.JRadioButton();
        jcbNomeEntidade = new javax.swing.JComboBox();
        jrbEscola = new javax.swing.JRadioButton();
        jrbCmei = new javax.swing.JRadioButton();
        jrbOutros = new javax.swing.JRadioButton();
        jrbRelacaoACarregar = new javax.swing.JRadioButton();
        jrbRelacaoCarregados = new javax.swing.JRadioButton();
        jpPeriodo = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jDateChooserInicio = new com.toedter.calendar.JDateChooser();
        jDateChooserTermino = new com.toedter.calendar.JDateChooser();
        jrbMensalACarregar = new javax.swing.JRadioButton();
        jrbMensalCarregados = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jrbModeloCartuchoTodos = new javax.swing.JRadioButton();
        jrbModeloCartuchoTinta = new javax.swing.JRadioButton();
        jrbModeloCartuchoToner = new javax.swing.JRadioButton();
        jpBotoes = new javax.swing.JPanel();
        jbExcluir = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jbImprimir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jpImprRecarga.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        jpModoImpressao.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED), "Modo de Impressão das Recargas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        btgModoImpressao.add(jrbTodasRecargas);
        jrbTodasRecargas.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrbTodasRecargas.setSelected(true);
        jrbTodasRecargas.setText("Todas as Recargas");
        jrbTodasRecargas.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jrbTodasRecargas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbTodasRecargasActionPerformed(evt);
            }
        });

        btgModoImpressao.add(jrbMensal);
        jrbMensal.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrbMensal.setText("Mensal");
        jrbMensal.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jrbMensal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbMensalActionPerformed(evt);
            }
        });

        btgModoImpressao.add(jrbPorEntidade);
        jrbPorEntidade.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrbPorEntidade.setText("Por Entidade");
        jrbPorEntidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbPorEntidadeActionPerformed(evt);
            }
        });

        jcbNomeEntidade.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbNomeEntidade.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jcbNomeEntidade.setEnabled(false);

        btgEntidades.add(jrbEscola);
        jrbEscola.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbEscola.setSelected(true);
        jrbEscola.setText("Escola");
        jrbEscola.setEnabled(false);
        jrbEscola.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbEscolaActionPerformed(evt);
            }
        });

        btgEntidades.add(jrbCmei);
        jrbCmei.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbCmei.setText("Cmei");
        jrbCmei.setEnabled(false);
        jrbCmei.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbCmeiActionPerformed(evt);
            }
        });

        btgEntidades.add(jrbOutros);
        jrbOutros.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbOutros.setText("Outros");
        jrbOutros.setEnabled(false);
        jrbOutros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbOutrosActionPerformed(evt);
            }
        });

        btgModoImpressao.add(jrbRelacaoACarregar);
        jrbRelacaoACarregar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrbRelacaoACarregar.setText("Relação à carregar");
        jrbRelacaoACarregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbRelacaoACarregarActionPerformed(evt);
            }
        });

        btgModoImpressao.add(jrbRelacaoCarregados);
        jrbRelacaoCarregados.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrbRelacaoCarregados.setText("Relação carregados");
        jrbRelacaoCarregados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbRelacaoCarregadosActionPerformed(evt);
            }
        });

        jpPeriodo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Período", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Inicio:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Término:");

        jDateChooserInicio.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDateChooserInicio.setEnabled(false);
        jDateChooserInicio.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jDateChooserTermino.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDateChooserTermino.setEnabled(false);
        jDateChooserTermino.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        btgMensal.add(jrbMensalACarregar);
        jrbMensalACarregar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrbMensalACarregar.setText("À carregar");
        jrbMensalACarregar.setEnabled(false);
        jrbMensalACarregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbMensalACarregarActionPerformed(evt);
            }
        });

        btgMensal.add(jrbMensalCarregados);
        jrbMensalCarregados.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrbMensalCarregados.setText("Carregados");
        jrbMensalCarregados.setEnabled(false);
        jrbMensalCarregados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbMensalCarregadosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpPeriodoLayout = new javax.swing.GroupLayout(jpPeriodo);
        jpPeriodo.setLayout(jpPeriodoLayout);
        jpPeriodoLayout.setHorizontalGroup(
            jpPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPeriodoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jrbMensalCarregados)
                    .addGroup(jpPeriodoLayout.createSequentialGroup()
                        .addGroup(jpPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDateChooserInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(55, 55, 55)
                        .addGroup(jpPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jDateChooserTermino, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jrbMensalACarregar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpPeriodoLayout.setVerticalGroup(
            jpPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpPeriodoLayout.createSequentialGroup()
                .addComponent(jrbMensalACarregar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jrbMensalCarregados)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(jpPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jDateChooserInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooserTermino, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Modelo Cartucho: ");

        btgModeloCartucho.add(jrbModeloCartuchoTodos);
        jrbModeloCartuchoTodos.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrbModeloCartuchoTodos.setSelected(true);
        jrbModeloCartuchoTodos.setText("Todos");
        jrbModeloCartuchoTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbModeloCartuchoTodosActionPerformed(evt);
            }
        });

        btgModeloCartucho.add(jrbModeloCartuchoTinta);
        jrbModeloCartuchoTinta.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrbModeloCartuchoTinta.setText("Cartucho de tinta");
        jrbModeloCartuchoTinta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbModeloCartuchoTintaActionPerformed(evt);
            }
        });

        btgModeloCartucho.add(jrbModeloCartuchoToner);
        jrbModeloCartuchoToner.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrbModeloCartuchoToner.setText("Toner");
        jrbModeloCartuchoToner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbModeloCartuchoTonerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpModoImpressaoLayout = new javax.swing.GroupLayout(jpModoImpressao);
        jpModoImpressao.setLayout(jpModoImpressaoLayout);
        jpModoImpressaoLayout.setHorizontalGroup(
            jpModoImpressaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpModoImpressaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpModoImpressaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpModoImpressaoLayout.createSequentialGroup()
                        .addGroup(jpModoImpressaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jrbPorEntidade)
                            .addComponent(jrbTodasRecargas)
                            .addGroup(jpModoImpressaoLayout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(jpModoImpressaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jcbNomeEntidade, 0, 400, Short.MAX_VALUE)
                                    .addGroup(jpModoImpressaoLayout.createSequentialGroup()
                                        .addComponent(jrbEscola)
                                        .addGap(2, 2, 2)
                                        .addComponent(jrbCmei)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jrbOutros)))))
                        .addGap(129, 129, 129))
                    .addGroup(jpModoImpressaoLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jrbModeloCartuchoTodos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jrbModeloCartuchoTinta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jrbModeloCartuchoToner)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jpModoImpressaoLayout.createSequentialGroup()
                        .addGroup(jpModoImpressaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jpPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jrbRelacaoCarregados)
                            .addComponent(jrbRelacaoACarregar)
                            .addComponent(jrbMensal))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jpModoImpressaoLayout.setVerticalGroup(
            jpModoImpressaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpModoImpressaoLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jpModoImpressaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jrbModeloCartuchoTodos)
                    .addComponent(jrbModeloCartuchoTinta)
                    .addComponent(jrbModeloCartuchoToner))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jrbTodasRecargas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jrbPorEntidade)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpModoImpressaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrbEscola)
                    .addComponent(jrbCmei)
                    .addComponent(jrbOutros))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jcbNomeEntidade, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jrbRelacaoACarregar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jrbRelacaoCarregados)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jrbMensal)
                .addGap(1, 1, 1)
                .addComponent(jpPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(129, Short.MAX_VALUE))
        );

        jpBotoes.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        jbExcluir.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbExcluir.setEnabled(false);
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jbCancelar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cancelar.png"))); // NOI18N
        jbCancelar.setText("Cancelar");
        jbCancelar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jbImprimir.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/imprimir.png"))); // NOI18N
        jbImprimir.setText("Imprimir");
        jbImprimir.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbImprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpBotoesLayout = new javax.swing.GroupLayout(jpBotoes);
        jpBotoes.setLayout(jpBotoesLayout);
        jpBotoesLayout.setHorizontalGroup(
            jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpBotoesLayout.createSequentialGroup()
                .addContainerGap(262, Short.MAX_VALUE)
                .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );
        jpBotoesLayout.setVerticalGroup(
            jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jpImprRecargaLayout = new javax.swing.GroupLayout(jpImprRecarga);
        jpImprRecarga.setLayout(jpImprRecargaLayout);
        jpImprRecargaLayout.setHorizontalGroup(
            jpImprRecargaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpImprRecargaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpModoImpressao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jpBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jpImprRecargaLayout.setVerticalGroup(
            jpImprRecargaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpImprRecargaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpModoImpressao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpImprRecarga, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpImprRecarga, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        //();
}//GEN-LAST:event_jbExcluirActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed

        /*abilitaCampos();

        jbNovo.setEnabled(true);
        jbSalvar.setEnabled(true);
        jbCancelar.setEnabled(true);
        jbBuscar.setEnabled(true);
        jbExcluir.setEnabled(true);
        jbAlterar.setEnabled(false);
        jbImprimir.setEnabled(true);

        opcao = "alterar";*/
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jbImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbImprimirActionPerformed

        //ADOGeral ag = new ADOGeral();
        Conexao conexao = new Conexao();
        HashMap parametros = new HashMap();
        try {
            //System.out.println(codigoRegistro);
            //parametros.put("titulo", "Titulo Relatorio");
            //parametros.put("statusAgendado", new String(tipoStatus));
            parametros.put("nomeEntidade", jcbNomeEntidade.getSelectedItem());
            parametros.put("mesInicio", jDateChooserInicio.getDate());
            parametros.put("mesTermino", jDateChooserTermino.getDate());
            parametros.put("modeloCartucho", modeloCartucho);
            parametros.put("condicaoMensalDataRecarga", condicaoMensalDataRecarga);
            parametros.put("condicaoMensalDataDevolucao", condicaoMensalDataDevolucao);
            parametros.put("condicaoMensalModeloCartucho", condicaoMensalModeloCartucho);


            //parametros.put("codigo", lista.get(0).getNome();
            //ADOGeral.conectar();
            conexao.getConexao();
        } catch (ExcCadastro ex) {
            Logger.getLogger(JfImpressosRecarga.class.getName()).log(Level.SEVERE, null, ex);
        }

        //        JRDataSource jrds = new JRBeanCollectionDataSource(lista);

        try {

            //jReport = JasperCompileManager.compileReport("E:/LUIZ/PROJETOS JAVA/CORPORATIVO/m2GestaoClinicas/FichaPaciente.jrxml");
            //jPrint = JasperFillManager.fillReport("C:/m2GestaoClinicas/FichaPaciente.jasper", parametros, ADOGeral.getConexao());
            
            if (jrbModeloCartuchoTinta.isSelected()) {
                
                if(jrbTodasRecargas.isSelected()) {
                    
                    iniciaClasseGeral();
                
                    jPrint = JasperFillManager.fillReport("RecargaCartuchoCmei.jasper", null, conexao.getConexao());
                    imprimir();
                    jPrint = JasperFillManager.fillReport("RecargaCartuchoEscola.jasper", null, conexao.getConexao());
                    imprimir();
                    jPrint = JasperFillManager.fillReport("RecargaCartuchoOutro.jasper", null, conexao.getConexao());
                    imprimir();
                
                    classeGeral.msgInforma("Esta opção exibe três relatórios distintos, separados por tipo de unidade!");
                    
                } else if (jrbPorEntidade.isSelected()) {
                    
                    if (jcbNomeEntidade.getSelectedIndex() == 0) {
                        iniciaClasseGeral();
                        classeGeral.msgAtencao("Não há nenhuma Entidade selecinada no campo especifico!");
                    } else {
                        
                        switch (tipoEntidade) {
                        
                            case "CMEI":
                                jPrint = JasperFillManager.fillReport("RecargaCartuchoPorEntidadeCmei.jasper", parametros, conexao.getConexao());
                                break;
                            
                            case "ESCOLA":
                                jPrint = JasperFillManager.fillReport("RecargaCartuchoPorEntidadeEscola.jasper", parametros, conexao.getConexao());
                                break;
                            
                            case "OUTROS":
                                jPrint = JasperFillManager.fillReport("RecargaCartuchoPorEntidadeOutro.jasper", parametros, conexao.getConexao());
                                break;    
                        
                        }
                    
                        imprimir();
                        
                    }
                    
                } else if (jrbRelacaoACarregar.isSelected()) {
                    
                    iniciaClasseGeral();
                    
                    jPrint = JasperFillManager.fillReport("RecargaCartuchoACarregarCmei.jasper", parametros, conexao.getConexao());
                    imprimir();
                    jPrint = JasperFillManager.fillReport("RecargaCartuchoACarregarEscola.jasper", parametros, conexao.getConexao());
                    imprimir();
                    jPrint = JasperFillManager.fillReport("RecargaCartuchoACarregarOutro.jasper", parametros, conexao.getConexao());
                    imprimir();
                    
                    classeGeral.msgInforma("Esta opção exibe três relatórios distintos, separados por tipo de unidade!");
                    
                } else if (jrbRelacaoCarregados.isSelected()) {
                    
                    iniciaClasseGeral();
                    
                    jPrint = JasperFillManager.fillReport("RecargaCartuchoCarregadosCmei.jasper", parametros, conexao.getConexao());
                    imprimir();
                    jPrint = JasperFillManager.fillReport("RecargaCartuchoCarregadosEscola.jasper", parametros, conexao.getConexao());
                    imprimir();
                    jPrint = JasperFillManager.fillReport("RecargaCartuchoCarregadosOutro.jasper", parametros, conexao.getConexao());
                    imprimir();
                    
                    classeGeral.msgInforma("Esta opção exibe três relatórios distintos, separados por tipo de unidade!");
                    
                } else if (jrbMensal.isSelected()) {
                    
                    if (jDateChooserInicio.getDate() == null || jDateChooserTermino.getDate() == null) {
                        iniciaClasseGeral();
                        classeGeral.msgAtencao("Não há uma data especifica selecionada!");
                    } else {
                        
                        if (jrbMensalACarregar.isSelected()) {

                            iniciaClasseGeral();
                            
                            jPrint = JasperFillManager.fillReport("RecargaCartuchoPorMesACarregarCmei.jasper", parametros, conexao.getConexao());
                            imprimir();
                            jPrint = JasperFillManager.fillReport("RecargaCartuchoPorMesACarregarEscola.jasper", parametros, conexao.getConexao());
                            imprimir();
                            jPrint = JasperFillManager.fillReport("RecargaCartuchoPorMesACarregarOutro.jasper", parametros, conexao.getConexao());
                            imprimir();
                        
                            classeGeral.msgInforma("Esta opção exibe três relatórios distintos, separados por tipo de unidade!");
                            
                        } else if (jrbMensalCarregados.isSelected()) {

                            iniciaClasseGeral();
                            
                            jPrint = JasperFillManager.fillReport("RecargaCartuchoPorMesCarregadoCmei.jasper", parametros, conexao.getConexao());
                            imprimir();
                            jPrint = JasperFillManager.fillReport("RecargaCartuchoPorMesCarregadoEscola.jasper", parametros, conexao.getConexao());
                            imprimir();    
                            jPrint = JasperFillManager.fillReport("RecargaCartuchoPorMesCarregadoOutro.jasper", parametros, conexao.getConexao());
                            imprimir();
                            
                            classeGeral.msgInforma("Esta opção exibe três relatórios distintos, separados por tipo de unidade!");
                        
                        }
                        
                    }
                    
                }
                
            } else {
                
                if(jrbTodasRecargas.isSelected()) {
                    
                    iniciaClasseGeral();
                    
                    jPrint = JasperFillManager.fillReport("RecargaTonerCmei.jasper", parametros, conexao.getConexao());
                    imprimir();
                    jPrint = JasperFillManager.fillReport("RecargaTonerEscola.jasper", parametros, conexao.getConexao());
                    imprimir();
                    jPrint = JasperFillManager.fillReport("RecargaTonerOutro.jasper", parametros, conexao.getConexao());
                    imprimir();
                    
                    classeGeral.msgInforma("Esta opção exibe três relatórios distintos, separados por tipo de unidade!");
                    
                } else if (jrbPorEntidade.isSelected()) {
                    
                    if (jcbNomeEntidade.getSelectedIndex() == 0) {
                        iniciaClasseGeral();
                        classeGeral.msgAtencao("Não há nenhuma Entidade selecinada no campo especifico!");
                    } else {
                        
                        switch (tipoEntidade) {
                        
                            case "CMEI":
                                jPrint = JasperFillManager.fillReport("RecargaTonerPorEntidadeCmei.jasper", parametros, conexao.getConexao());
                                break;
                            
                            case "ESCOLA":
                                jPrint = JasperFillManager.fillReport("RecargaTonerPorEntidadeEscola.jasper", parametros, conexao.getConexao());
                                break;
                            
                            case "OUTROS":
                                jPrint = JasperFillManager.fillReport("RecargaTonerPorEntidadeOutro.jasper", parametros, conexao.getConexao());
                                break;    
                        
                        }
                    
                        imprimir();
                        
                    }
                    
                } else if (jrbRelacaoACarregar.isSelected()) {
                    
                    iniciaClasseGeral();
                    
                    jPrint = JasperFillManager.fillReport("RecargaTonerACarregarCmei.jasper", parametros, conexao.getConexao());
                    imprimir();
                    jPrint = JasperFillManager.fillReport("RecargaTonerACarregarEscola.jasper", parametros, conexao.getConexao());
                    imprimir();
                    jPrint = JasperFillManager.fillReport("RecargaTonerACarregarOutro.jasper", parametros, conexao.getConexao());
                    imprimir();
                    
                    classeGeral.msgInforma("Esta opção exibe três relatórios distintos, separados por tipo de unidade!");
                    
                } else if (jrbRelacaoCarregados.isSelected()) {
                    
                    iniciaClasseGeral();
                    
                    jPrint = JasperFillManager.fillReport("RecargaTonerCarregadosCmei.jasper", parametros, conexao.getConexao());
                    imprimir();
                    jPrint = JasperFillManager.fillReport("RecargaTonerCarregadosEscola.jasper", parametros, conexao.getConexao());
                    imprimir();
                    jPrint = JasperFillManager.fillReport("RecargaTonerCarregadosOutro.jasper", parametros, conexao.getConexao());
                    imprimir();
                    
                    classeGeral.msgInforma("Esta opção exibe três relatórios distintos, separados por tipo de unidade!");
                    
                } else if (jrbMensal.isSelected()) {
                    
                    if (jDateChooserInicio.getDate() == null || jDateChooserTermino.getDate() == null) {
                        iniciaClasseGeral();
                        classeGeral.msgAtencao("Não há uma data especifica selecionada!");
                    } else {
                        
                        if (jrbMensalACarregar.isSelected()) {

                            iniciaClasseGeral();
                            
                            jPrint = JasperFillManager.fillReport("RecargaTonerPorMesACarregarCmei.jasper", parametros, conexao.getConexao());
                            imprimir();
                            jPrint = JasperFillManager.fillReport("RecargaTonerPorMesACarregarEscola.jasper", parametros, conexao.getConexao());
                            imprimir();
                            jPrint = JasperFillManager.fillReport("RecargaTonerPorMesACarregarOutro.jasper", parametros, conexao.getConexao());
                            imprimir();
                            
                            classeGeral.msgInforma("Esta opção exibe três relatórios distintos, separados por tipo de unidade!");
                        
                        } else if (jrbMensalCarregados.isSelected()) {

                            iniciaClasseGeral();
                            
                            jPrint = JasperFillManager.fillReport("RecargaTonerPorMesCarregadoCmei.jasper", parametros, conexao.getConexao());
                            imprimir();
                            jPrint = JasperFillManager.fillReport("RecargaTonerPorMesCarregadoEscola.jasper", parametros, conexao.getConexao());
                            imprimir();    
                            jPrint = JasperFillManager.fillReport("RecargaTonerPorMesCarregadoOutro.jasper", parametros, conexao.getConexao());
                            imprimir();
                        
                            classeGeral.msgInforma("Esta opção exibe três relatórios distintos, separados por tipo de unidade!");
                            
                        }
                        
                    }
                    
                }
                
            }
            
            //jPrint = JasperFillManager.fillReport(jReport, parametros, jrds);

            //if (!(jViewer == null)) {
            //jViewer = new JasperViewer(jPrint, false);
            //jViewer.setExtendedState(JFrame.MAXIMIZED_BOTH);

            //}

        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }//GEN-LAST:event_jbImprimirActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        fechar();
    }//GEN-LAST:event_formWindowClosing

    private void jrbTodasRecargasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbTodasRecargasActionPerformed

        if (jrbTodasRecargas.isSelected()) {

            jDateChooserInicio.setEnabled(false);
            jDateChooserTermino.setEnabled(false);

            jrbEscola.setEnabled(false);
            jrbCmei.setEnabled(false);
            jrbOutros.setEnabled(false);
            jrbEscola.setSelected(false);
            jcbNomeEntidade.setEnabled(false);

            condicaoMensalDataRecarga = "";
            condicaoMensalDataDevolucao = "";
            condicaoMensalModeloCartucho = "";

        }

    }//GEN-LAST:event_jrbTodasRecargasActionPerformed

    private void jrbMensalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbMensalActionPerformed

        if (jrbMensal.isSelected()) {

            jDateChooserInicio.setEnabled(true);
            jDateChooserTermino.setEnabled(true);

            jrbEscola.setEnabled(false);
            jrbCmei.setEnabled(false);
            jrbOutros.setEnabled(false);
            jrbEscola.setSelected(false);
            jcbNomeEntidade.setEnabled(false);

            jrbMensalCarregados.setEnabled(true);
            jrbMensalACarregar.setEnabled(true);

            jrbMensalCarregados.setSelected(false);
            jrbMensalACarregar.setSelected(false);

        }

    }//GEN-LAST:event_jrbMensalActionPerformed

    private void jrbPorEntidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbPorEntidadeActionPerformed

        if (jrbPorEntidade.isSelected()) {

            jrbEscola.setEnabled(true);
            jrbCmei.setEnabled(true);
            jrbOutros.setEnabled(true);
            jrbEscola.setSelected(true);
            jcbNomeEntidade.setEnabled(true);

            jDateChooserInicio.setEnabled(false);
            jDateChooserTermino.setEnabled(false);

            condicaoMensalDataRecarga = "";
            condicaoMensalDataDevolucao = "";
            condicaoMensalModeloCartucho = "";

        }

    }//GEN-LAST:event_jrbPorEntidadeActionPerformed

    private void jrbEscolaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbEscolaActionPerformed

        tipoEntidade = "ESCOLA";
        if (jrbEscola.isSelected()) {
            preencheComboEscolas();
        }
        
    }//GEN-LAST:event_jrbEscolaActionPerformed

    private void jrbCmeiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbCmeiActionPerformed

        tipoEntidade = "CMEI";
        if (jrbCmei.isSelected()) {
            preencheComboCmeis();
        }

    }//GEN-LAST:event_jrbCmeiActionPerformed

    private void jrbOutrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbOutrosActionPerformed

        tipoEntidade = "OUTROS";
        if (jrbOutros.isSelected()) {
            preencheComboOutros();
        }

    }//GEN-LAST:event_jrbOutrosActionPerformed

    private void jrbRelacaoACarregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbRelacaoACarregarActionPerformed

        if (jrbRelacaoACarregar.isSelected()) {

            jDateChooserInicio.setEnabled(false);
            jDateChooserTermino.setEnabled(false);

            jrbEscola.setEnabled(false);
            jrbCmei.setEnabled(false);
            jrbOutros.setEnabled(false);
            jrbEscola.setSelected(false);
            jcbNomeEntidade.setEnabled(false);
            jrbMensalCarregados.setEnabled(false);
            jrbMensalACarregar.setEnabled(false);

            condicaoMensalDataRecarga = "";
            condicaoMensalDataDevolucao = "";
            condicaoMensalModeloCartucho = "";

        }

    }//GEN-LAST:event_jrbRelacaoACarregarActionPerformed

    private void jrbRelacaoCarregadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbRelacaoCarregadosActionPerformed
        if (jrbRelacaoCarregados.isSelected()) {

            jDateChooserInicio.setEnabled(false);
            jDateChooserTermino.setEnabled(false);

            jrbEscola.setEnabled(false);
            jrbCmei.setEnabled(false);
            jrbOutros.setEnabled(false);
            jrbEscola.setSelected(false);
            jcbNomeEntidade.setEnabled(false);

            condicaoMensalDataRecarga = "";
            condicaoMensalDataDevolucao = "";
            condicaoMensalModeloCartucho = "";

        }
    }//GEN-LAST:event_jrbRelacaoCarregadosActionPerformed

    private void jrbMensalACarregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbMensalACarregarActionPerformed

        /*condicaoMensalDataRecarga = "null";
        condicaoMensalDataDevolucao = "null";
        condicaoMensalModeloCartucho = " and modelocartucho not like '%TONER%'";*/
    }//GEN-LAST:event_jrbMensalACarregarActionPerformed

    private void jrbMensalCarregadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbMensalCarregadosActionPerformed

        /*condicaoMensalDataRecarga = " not null";
        condicaoMensalDataDevolucao = "null";
        //condicaoMensalModeloCartucho = " and modelocartucho not like '%TONER%'";*/
    }//GEN-LAST:event_jrbMensalCarregadosActionPerformed

    private void jrbModeloCartuchoTintaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbModeloCartuchoTintaActionPerformed
        modeloCartucho = "not like %TONER%";
    }//GEN-LAST:event_jrbModeloCartuchoTintaActionPerformed

    private void jrbModeloCartuchoTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbModeloCartuchoTodosActionPerformed
        modeloCartucho = "like %%";
    }//GEN-LAST:event_jrbModeloCartuchoTodosActionPerformed

    private void jrbModeloCartuchoTonerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbModeloCartuchoTonerActionPerformed
        modeloCartucho = "like %TONER%";
    }//GEN-LAST:event_jrbModeloCartuchoTonerActionPerformed
    /**
     * @param args the command line arguments
     */
    /*public static void main(String args[]) {
    java.awt.EventQueue.invokeLater(new Runnable() {
    public void run() {
    new jfImpressosAgendamento().setVisible(true);
    }
    });
    }*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgEntidades;
    private javax.swing.ButtonGroup btgMensal;
    private javax.swing.ButtonGroup btgModeloCartucho;
    private javax.swing.ButtonGroup btgModoImpressao;
    private com.toedter.calendar.JDateChooser jDateChooserInicio;
    private com.toedter.calendar.JDateChooser jDateChooserTermino;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbImprimir;
    private javax.swing.JComboBox jcbNomeEntidade;
    private javax.swing.JPanel jpBotoes;
    private javax.swing.JPanel jpImprRecarga;
    private javax.swing.JPanel jpModoImpressao;
    private javax.swing.JPanel jpPeriodo;
    private javax.swing.JRadioButton jrbCmei;
    private javax.swing.JRadioButton jrbEscola;
    private javax.swing.JRadioButton jrbMensal;
    private javax.swing.JRadioButton jrbMensalACarregar;
    private javax.swing.JRadioButton jrbMensalCarregados;
    private javax.swing.JRadioButton jrbModeloCartuchoTinta;
    private javax.swing.JRadioButton jrbModeloCartuchoTodos;
    private javax.swing.JRadioButton jrbModeloCartuchoToner;
    private javax.swing.JRadioButton jrbOutros;
    private javax.swing.JRadioButton jrbPorEntidade;
    private javax.swing.JRadioButton jrbRelacaoACarregar;
    private javax.swing.JRadioButton jrbRelacaoCarregados;
    private javax.swing.JRadioButton jrbTodasRecargas;
    // End of variables declaration//GEN-END:variables

//Outros Metodos ===========================================================================================================================================
    public void fechar() {

        dao = null;
        this.dispose();

    }

    public void cancelar() {

        condicaoMensalModeloCartucho = "";
        condicaoMensalDataRecarga = "";
        condicaoMensalDataDevolucao = "";
        modeloCartucho = "like %%";
        tipoEntidade = "";
        
        jrbTodasRecargas.setSelected(true);
        jrbCmei.setEnabled(false);
        jrbEscola.setSelected(true);
        jrbEscola.setEnabled(false);
        jrbOutros.setEnabled(false);
        jrbMensalCarregados.setEnabled(false);
        jrbMensalACarregar.setEnabled(false);
        
        jDateChooserInicio.setEnabled(false);
        jDateChooserTermino.setEnabled(false);
        
        jcbNomeEntidade.setEnabled(false);
        
    }

    public void preencheComboEscolas() {

        iniciaDao();
        //DAO dao = new DAO();
        List listaEscolas = new ArrayList();

        jcbNomeEntidade.removeAllItems();
        jcbNomeEntidade.addItem("");

        listaEscolas = dao.listarEscolas(0, "", "");

        for (int i = 0; i < listaEscolas.size(); i++) {
            jcbNomeEntidade.addItem(listaEscolas.get(i));
        }

    }

    public void preencheComboCmeis() {

        iniciaDao();
        //DAO dao = new DAO();
        List listaCmeis = new ArrayList();

        jcbNomeEntidade.removeAllItems();
        jcbNomeEntidade.addItem("");

        listaCmeis = dao.listarCmeis(0, "", "");

        for (int i = 0; i < listaCmeis.size(); i++) {
            jcbNomeEntidade.addItem(listaCmeis.get(i));
        }
    }

    public void preencheComboOutros() {

        iniciaDao();
        //DAO dao = new DAO();
        List listaOutros = new ArrayList();

        jcbNomeEntidade.removeAllItems();
        jcbNomeEntidade.addItem("");

        listaOutros = dao.listarOutros(0, "", "");

        for (int i = 0; i < listaOutros.size(); i++) {
            jcbNomeEntidade.addItem(listaOutros.get(i));
        }

    }
    
    public void abilitaBotoes() {

        if (impressosRecarga == true) {
            jbImprimir.setEnabled(true);
        } else {
            jbImprimir.setEnabled(false);
        }

    }

    public void desabilitaBotoes() {

        if (impressosRecarga == true) {
            jbImprimir.setEnabled(true);
        } else {
            jbImprimir.setEnabled(false);
        }

    }

    public void imprimir() {
        
        if (jPrint != null) {
            jViewer.viewReport(jPrint, false);
            jPrint = null;
        }
        
    }
    
//Geradores, Validadores===========================================================================================================================================
    public void iniciaClasseGeral() {
        
        if (classeGeral == null) {
            classeGeral = new ClasseGeral();
        }
        
    }
    
    public void iniciaDao() {

        if (dao == null) {
            dao = new DAO();
        }

    }

//Getters and Setters===========================================================================================================================================
    public int getCodigoUsuario() {
        return codigoUsuario;
    }

    public void setCodigoUsuario(int codigoUsuario) {
        this.codigoUsuario = codigoUsuario;
        getPermissoes();
        desabilitaBotoes();
    }

    public void getPermissoes() {
        Permissoes permissoes;
        iniciaDao();
        //DAO dao = new DAO();

        permissoes = (Permissoes) dao.buscaPermissoes(codigoUsuario);

        impressosRecarga = permissoes.isImpressosRecarga();
    }
//Metodos DAO===========================================================================================================================================
    
}
