/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * jdBuscaAgendamento.java
 *
 * Created on 02/02/2010, 09:10:34
 */
package visual;

import controlador.*;
import dao.DAO;
import java.awt.Image;
import java.awt.Toolkit;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import modelo.AgendamentoEquipamento;
import modelo.AgendamentoEquipamentoItens;
import modelo.Cmei;
import modelo.Equipamento;
import modelo.Escola;
import modelo.Outro;

/**
 *
 * @author luizam
 */
public class JdBuscaAgendamentoEquipamento extends javax.swing.JDialog {

    private static ControleVersao versao = new ControleVersao();
    private AgendamentoEquipamento agendamentoEquipamento;
    private AgendamentoEquipamentoItens agendamentoEquipamentoItens;
    private ClasseGeral classeGeral;
    private Cmei cmei;
    private ControleCmei controleCmei;
    private ControleEscola controleEscola;
    private ControleImagem controleImagem = new ControleImagem();
    private ControleOutro controleOutro;
    private DAO dao;
    private EditaOrdemTabela editaOrdemTabela;
    private Equipamento equipamento;
    private Escola escola;
    private Outro outro;
    
    private String tipoEntid = "";
    private String tipoStat = "";
    private String opcao = "salvar";

    /** Creates new form jdBuscaAgendamento */
    public JdBuscaAgendamentoEquipamento(java.awt.Frame parent, boolean modal) {
        super(parent, "Buscar Agendamento Equipamento - " + versao.getVersao() + " - " + versao.getAno(), modal);
        initComponents();

        //Altera icone na barra de titulo
        Toolkit kit = Toolkit.getDefaultToolkit();
        Image img = kit.getImage("C:/SURGI/imagens/SURGI32x32.png");
        this.setIconImage(img);

        //maximiza tela
        //this.setExtendedState(MAXIMIZED_BOTH);

        //centraliza tela
        setSize(getWidth(), getHeight());
        setLocationRelativeTo(null);

        jrbTodosEntidade.setSelected(true);

        jrbTodosStatus.setSelected(true);

        setNumeroAgendamentos();

        jcbBuscaNomeEntidade.setEnabled(false);
        /*try {
            jftfBuscaDataSolicitacao.setFormatterFactory(getFormatoData());
        } catch (ParseException ex) {
            Logger.getLogger(jdBuscaAgendamento.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Não foi possivel formatar o campo data!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE, null);
        }*/
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgTipoEntidade = new javax.swing.ButtonGroup();
        btgTipoStatus = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jbBuscaFechar = new javax.swing.JButton();
        jbBuscaEnviarDados = new javax.swing.JButton();
        jbBuscaCancelar = new javax.swing.JButton();
        jbBuscaPesquisar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbBuscaAgendamento = new javax.swing.JTable();
        jcbBuscaNomeEntidade = new javax.swing.JComboBox();
        jrbEscola = new javax.swing.JRadioButton();
        jrbCmei = new javax.swing.JRadioButton();
        jDateChooserBuscaEmprestimo = new com.toedter.calendar.JDateChooser();
        jrbOutros = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        jrbTodosStatus = new javax.swing.JRadioButton();
        jrbDevolvidos = new javax.swing.JRadioButton();
        jrbAgendados = new javax.swing.JRadioButton();
        jrbTodosEntidade = new javax.swing.JRadioButton();
        jrbEmprestados = new javax.swing.JRadioButton();
        jYearChooserAno = new com.toedter.calendar.JYearChooser();
        jLabel10 = new javax.swing.JLabel();
        jrbCancelados = new javax.swing.JRadioButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jlbTotal = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jlbDevolvidos = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jlbAgendados = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jlbEmprestados = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jlbCancelados = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jlbNaoRetiradoParaEmprestimo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        jbBuscaFechar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbBuscaFechar.setMnemonic('f');
        jbBuscaFechar.setText("Fechar");
        jbBuscaFechar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbBuscaFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscaFecharActionPerformed(evt);
            }
        });

        jbBuscaEnviarDados.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbBuscaEnviarDados.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Enviar.png"))); // NOI18N
        jbBuscaEnviarDados.setMnemonic('d');
        jbBuscaEnviarDados.setText("Enviar Dados");
        jbBuscaEnviarDados.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbBuscaEnviarDados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscaEnviarDadosActionPerformed(evt);
            }
        });

        jbBuscaCancelar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbBuscaCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cancelar.png"))); // NOI18N
        jbBuscaCancelar.setMnemonic('z');
        jbBuscaCancelar.setText("Cancelar");
        jbBuscaCancelar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbBuscaCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscaCancelarActionPerformed(evt);
            }
        });

        jbBuscaPesquisar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbBuscaPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/pesquisar.png"))); // NOI18N
        jbBuscaPesquisar.setMnemonic('p');
        jbBuscaPesquisar.setText("Pesquisar");
        jbBuscaPesquisar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbBuscaPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscaPesquisarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbBuscaPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbBuscaCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbBuscaEnviarDados, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbBuscaFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbBuscaEnviarDados, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscaFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscaCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscaPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Data Emprestimo: ");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Unidade: ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Tipo de Status: ");

        jtbBuscaAgendamento.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jtbBuscaAgendamento.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtbBuscaAgendamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ordem", "Tipo de Entidade", "Nome da Entidade", "Data Empréstimo", "Data Devolução", "Equipamento", "Patrimônio", "Status", "Código"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtbBuscaAgendamento.setGridColor(new java.awt.Color(204, 204, 204));
        jtbBuscaAgendamento.setRowHeight(19);
        jtbBuscaAgendamento.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jtbBuscaAgendamento.getTableHeader().setReorderingAllowed(false);
        jtbBuscaAgendamento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbBuscaAgendamentoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtbBuscaAgendamento);

        jcbBuscaNomeEntidade.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbBuscaNomeEntidade.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));
        jcbBuscaNomeEntidade.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btgTipoEntidade.add(jrbEscola);
        jrbEscola.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbEscola.setText("Escola");
        jrbEscola.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jrbEscola.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbEscolaActionPerformed(evt);
            }
        });

        btgTipoEntidade.add(jrbCmei);
        jrbCmei.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbCmei.setText("Cmei");
        jrbCmei.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jrbCmei.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbCmeiActionPerformed(evt);
            }
        });

        jDateChooserBuscaEmprestimo.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDateChooserBuscaEmprestimo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        btgTipoEntidade.add(jrbOutros);
        jrbOutros.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbOutros.setText("Outros");
        jrbOutros.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jrbOutros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbOutrosActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Tipo Entidade: ");

        btgTipoStatus.add(jrbTodosStatus);
        jrbTodosStatus.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbTodosStatus.setSelected(true);
        jrbTodosStatus.setText("Todos");
        jrbTodosStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbTodosStatusActionPerformed(evt);
            }
        });

        btgTipoStatus.add(jrbDevolvidos);
        jrbDevolvidos.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbDevolvidos.setText("Devolvidos");
        jrbDevolvidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbDevolvidosActionPerformed(evt);
            }
        });

        btgTipoStatus.add(jrbAgendados);
        jrbAgendados.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbAgendados.setText("Agendados");
        jrbAgendados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbAgendadosActionPerformed(evt);
            }
        });

        btgTipoEntidade.add(jrbTodosEntidade);
        jrbTodosEntidade.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbTodosEntidade.setSelected(true);
        jrbTodosEntidade.setText("Todos");
        jrbTodosEntidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbTodosEntidadeActionPerformed(evt);
            }
        });

        btgTipoStatus.add(jrbEmprestados);
        jrbEmprestados.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbEmprestados.setText("Emprestados");
        jrbEmprestados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbEmprestadosActionPerformed(evt);
            }
        });

        jYearChooserAno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel10.setText("Ano: ");

        btgTipoStatus.add(jrbCancelados);
        jrbCancelados.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbCancelados.setText("Cancelados");
        jrbCancelados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbCanceladosActionPerformed(evt);
            }
        });

        btgTipoStatus.add(jRadioButton1);
        jRadioButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jRadioButton1.setText("Não Retirados para Emprestimo");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jrbTodosEntidade)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jrbEscola)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jrbCmei)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jrbOutros))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jDateChooserBuscaEmprestimo, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jYearChooserAno, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jcbBuscaNomeEntidade, javax.swing.GroupLayout.PREFERRED_SIZE, 538, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jrbTodosStatus)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jrbDevolvidos)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jrbAgendados)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jRadioButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jrbCancelados)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jrbEmprestados)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jrbTodosEntidade)
                    .addComponent(jrbEscola)
                    .addComponent(jrbCmei)
                    .addComponent(jrbOutros))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jrbTodosStatus)
                    .addComponent(jrbDevolvidos)
                    .addComponent(jrbAgendados)
                    .addComponent(jrbEmprestados)
                    .addComponent(jrbCancelados)
                    .addComponent(jRadioButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jDateChooserBuscaEmprestimo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel10)
                    .addComponent(jYearChooserAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jcbBuscaNomeEntidade, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nº de Agendamentos:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Total:");

        jlbTotal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jlbTotal.setText("lbTotal");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Devoluções:");

        jlbDevolvidos.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jlbDevolvidos.setText("lbDevolvidos");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Agendados:");

        jlbAgendados.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jlbAgendados.setText("lbAgendados");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("Emprestados:");

        jlbEmprestados.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jlbEmprestados.setText("lbEmprestados");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Cancelados:");

        jlbCancelados.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jlbCancelados.setText("lbCancelados");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("Não Retirados para Emprestimo");

        jlbNaoRetiradoParaEmprestimo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jlbNaoRetiradoParaEmprestimo.setText("jlbNaoRetiradoParaEmprestimo");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlbTotal)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlbDevolvidos, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlbAgendados, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlbNaoRetiradoParaEmprestimo, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlbCancelados, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlbEmprestados, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(96, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(jlbEmprestados))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jlbTotal)
                        .addComponent(jLabel6)
                        .addComponent(jlbDevolvidos)
                        .addComponent(jLabel7)
                        .addComponent(jlbAgendados)
                        .addComponent(jLabel12)
                        .addComponent(jlbNaoRetiradoParaEmprestimo)
                        .addComponent(jLabel11)
                        .addComponent(jlbCancelados)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        fechar();
    }//GEN-LAST:event_formWindowClosing

    private void jbBuscaFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscaFecharActionPerformed
        fechar();
    }//GEN-LAST:event_jbBuscaFecharActionPerformed

    private void jbBuscaPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscaPesquisarActionPerformed
        pesquisar();
        setNumeroAgendamentos();
    }//GEN-LAST:event_jbBuscaPesquisarActionPerformed

    private void jbBuscaCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscaCancelarActionPerformed
        cancelar();
    }//GEN-LAST:event_jbBuscaCancelarActionPerformed

    private void jbBuscaEnviarDadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscaEnviarDadosActionPerformed
        buscaDados();
        fechar();
    }//GEN-LAST:event_jbBuscaEnviarDadosActionPerformed

    private void jrbEscolaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbEscolaActionPerformed

        jcbBuscaNomeEntidade.setEnabled(true);
        if (jrbEscola.isSelected()) {
            preencheComboEscolas();
            tipoEntid = "ESCOLA";
        }

    }//GEN-LAST:event_jrbEscolaActionPerformed

    private void jrbCmeiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbCmeiActionPerformed

        jcbBuscaNomeEntidade.setEnabled(true);
        if (jrbCmei.isSelected()) {
            preencheComboCmeis();
            tipoEntid = "CMEI";
        }

    }//GEN-LAST:event_jrbCmeiActionPerformed

    private void jrbOutrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbOutrosActionPerformed

        jcbBuscaNomeEntidade.setEnabled(true);
        if (jrbOutros.isSelected()) {
            preencheComboOutros();
            tipoEntid = "OUTROS";
        }

    }//GEN-LAST:event_jrbOutrosActionPerformed

    private void jrbTodosStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbTodosStatusActionPerformed

        tipoStat = "DO";

    }//GEN-LAST:event_jrbTodosStatusActionPerformed

    private void jrbDevolvidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbDevolvidosActionPerformed

        tipoStat = "DEVOLVIDO";

    }//GEN-LAST:event_jrbDevolvidosActionPerformed

    private void jrbAgendadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbAgendadosActionPerformed

        tipoStat = "AGENDADO";

    }//GEN-LAST:event_jrbAgendadosActionPerformed

    private void jtbBuscaAgendamentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbBuscaAgendamentoMouseClicked

        if (evt.getClickCount() == 2) {

            buscaDados();

        }

    }//GEN-LAST:event_jtbBuscaAgendamentoMouseClicked

    private void jrbTodosEntidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbTodosEntidadeActionPerformed

        jcbBuscaNomeEntidade.setEnabled(false);
        tipoEntid = "";

    }//GEN-LAST:event_jrbTodosEntidadeActionPerformed

    private void jrbEmprestadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbEmprestadosActionPerformed

        tipoStat = "EMPRESTADO";

    }//GEN-LAST:event_jrbEmprestadosActionPerformed

    private void jrbCanceladosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbCanceladosActionPerformed
        tipoStat = "CANCELADO";
    }//GEN-LAST:event_jrbCanceladosActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        tipoStat = "NÃO RETIRADO PARA EMPRESTIMO";
    }//GEN-LAST:event_jRadioButton1ActionPerformed
    /**
     * @param args the command line arguments
     */
    /*public static void main(String args[]) {
    java.awt.EventQueue.invokeLater(new Runnable() {
    public void run() {
    jdBuscaAgendamento dialog = new jdBuscaAgendamento(new javax.swing.JFrame(), true);
    dialog.addWindowListener(new java.awt.event.WindowAdapter() {
    public void windowClosing(java.awt.event.WindowEvent e) {
    System.exit(0);
    }
    });
    dialog.setVisible(true);
    }
    });
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgTipoEntidade;
    private javax.swing.ButtonGroup btgTipoStatus;
    private com.toedter.calendar.JDateChooser jDateChooserBuscaEmprestimo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JYearChooser jYearChooserAno;
    private javax.swing.JButton jbBuscaCancelar;
    private javax.swing.JButton jbBuscaEnviarDados;
    private javax.swing.JButton jbBuscaFechar;
    private javax.swing.JButton jbBuscaPesquisar;
    private javax.swing.JComboBox jcbBuscaNomeEntidade;
    private javax.swing.JLabel jlbAgendados;
    private javax.swing.JLabel jlbCancelados;
    private javax.swing.JLabel jlbDevolvidos;
    private javax.swing.JLabel jlbEmprestados;
    private javax.swing.JLabel jlbNaoRetiradoParaEmprestimo;
    private javax.swing.JLabel jlbTotal;
    private javax.swing.JRadioButton jrbAgendados;
    private javax.swing.JRadioButton jrbCancelados;
    private javax.swing.JRadioButton jrbCmei;
    private javax.swing.JRadioButton jrbDevolvidos;
    private javax.swing.JRadioButton jrbEmprestados;
    private javax.swing.JRadioButton jrbEscola;
    private javax.swing.JRadioButton jrbOutros;
    private javax.swing.JRadioButton jrbTodosEntidade;
    private javax.swing.JRadioButton jrbTodosStatus;
    private javax.swing.JTable jtbBuscaAgendamento;
    // End of variables declaration//GEN-END:variables

//Outros Metodos ===========================================================================================================================================
    public void fechar() {

        cancelar();
        dao = null;
        this.dispose();

    }

    public void cancelar() {

        DefaultTableModel modelo = (DefaultTableModel) jtbBuscaAgendamento.getModel();

        jcbBuscaNomeEntidade.setSelectedIndex(0);
        jDateChooserBuscaEmprestimo.setDate(null);
        //jftfBuscaDataSolicitacao.setText("");
        jrbEscola.setSelected(false);
        tipoEntid = "";
        jrbCmei.setSelected(false);
        jrbOutros.setSelected(false);
        jrbTodosStatus.setSelected(true);
        tipoStat = "DO";
        jrbTodosEntidade.setSelected(true);
        jcbBuscaNomeEntidade.setEnabled(false);

        modelo.setRowCount(0);

    }

    public void pesquisar() {

        DefaultTableModel modelo = (DefaultTableModel) jtbBuscaAgendamento.getModel();
        final TableRowSorter<TableModel> tabelaSorter = new TableRowSorter<TableModel>(modelo);
        jtbBuscaAgendamento.setRowSorter(tabelaSorter);
        
        iniciaDao();
        //DAO dao = new DAO();
        AgendamentoEquipamento agendEquip;
        DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
        List listaAgendamentoEquip = new ArrayList();
        
        int codigoCmei = 0;
        int codigoEscola = 0;
        int codigoOutro = 0;
        String nomeEntid;
        String nomeEntid2 = "";
        Date dataSolic;

        if (jcbBuscaNomeEntidade.getSelectedIndex() == 0) {
            
            switch(tipoEntid) {
                
                case "CMEI":
                    iniciaControleCmei();
                    codigoCmei = controleCmei.getCodigoCmei(jcbBuscaNomeEntidade.getSelectedItem().toString());
                    break;
                    
                case "ESCOLA":
                    iniciaControleEscola();
                    codigoEscola = controleEscola.getCodigoEscola(jcbBuscaNomeEntidade.getSelectedItem().toString());
                    break;
                    
                case "OUTROS":
                    iniciaControleOutro();
                    codigoOutro = controleOutro.getCodigoOutro(jcbBuscaNomeEntidade.getSelectedItem().toString());
                    break;
                
            }
            
        }
        
        if (jDateChooserBuscaEmprestimo.getDate() == null) {
            listaAgendamentoEquip = dao.listarAgendamentoEquipamento(codigoCmei, codigoEscola, codigoOutro, null, tipoEntid, tipoStat, String.valueOf(jYearChooserAno.getYear()));
        } else {
            //try {
                //dataSolic = df.parse(jftfBuscaDataSolicitacao.getText()); Usando jFormatedTextField
            //} catch (ParseException ex) {
            //    Logger.getLogger(jdBuscaAgendamento.class.getName()).log(Level.SEVERE, null, ex);
            //}
            listaAgendamentoEquip = dao.listarAgendamentoEquipamento(codigoCmei, codigoEscola, codigoOutro, jDateChooserBuscaEmprestimo.getDate(), tipoEntid, tipoStat, String.valueOf(jYearChooserAno.getYear()));
        }

        //listaAgendamento = dao.listarAgendamento(nomeEntid, new java.sql.Date(dataSolic.getTime()), tipoEntid);Usando jFormatedTextField
            
        modelo.setRowCount(0);
        iniciaEditaOrdemTabela();

        for (int i = 0; i < listaAgendamentoEquip.size(); i++) {

            agendEquip = (AgendamentoEquipamento) listaAgendamentoEquip.get(i);
            List listaEquipamentosItens = new ArrayList();
            
            listaEquipamentosItens = dao.listarAgendamentoEquipamentoItens(agendEquip.getCodigoAgendamentoEquipamento());
            
            for (int j = 0; j < listaEquipamentosItens.size(); j++) {
                
                iniciaAgendamentoEquipamentoItens();
                iniciaEquipamento();
                
                agendamentoEquipamentoItens = (AgendamentoEquipamentoItens) listaEquipamentosItens.get(j);
                
                equipamento = (Equipamento) dao.busca(equipamento, agendamentoEquipamentoItens.getEquipamento().getCodigoEquipamento());
            
                switch (agendEquip.getTipoEntidade()) {
            
                    case "ESCOLA":
                        iniciaEscola();
                        escola = (Escola) agendEquip.getEscola();
                        nomeEntid2 = escola.getNomeEscola();
                        break;
                
                    case "CMEI":
                        iniciaCmei();
                        cmei = (Cmei) agendEquip.getCmei();
                        nomeEntid2 = cmei.getNomeCmei();
                        break;
                
                    case "OUTROS":
                        iniciaOutro();
                        outro = (Outro) agendEquip.getOutro();
                        nomeEntid2 = outro.getNomeOutro();
                        break;
            
                }
            
                modelo.addRow(new String[]{editaOrdemTabela.editaOrdem(i + 1), agendEquip.getTipoEntidade(), nomeEntid2, String.valueOf(agendEquip.getDataEmprestimo()), String.valueOf(agendEquip.getDataDevolucao()), equipamento.getTipoEquipamento().getNomeTipoEquipamento(), equipamento.getPatrimonioEquipamento(), agendEquip.getStatus(), String.valueOf(agendEquip.getCodigoAgendamentoEquipamento())});
                
            }
            
            listaEquipamentosItens = null;

            nomeEntid2 = "";
            cmei = null;
            escola = null;
            equipamento = null;
            outro = null;
            
        }

        dao.encerraSessao();
        
        if (jtbBuscaAgendamento.getRowCount() > 0) {
            jtbBuscaAgendamento.getSelectionModel().setSelectionInterval(0, 0);
        } else {
            iniciaClasseGeral();
            
            classeGeral.msgInforma("Não há agendamento com estes dados!");
        }
        
    }

    public void buscaDados() {

        iniciaDao();
        iniciaAgendamentoEquipamento();

        int codigo;

        codigo = Integer.valueOf((String) jtbBuscaAgendamento.getValueAt(jtbBuscaAgendamento.getSelectedRow(), 8));

        agendamentoEquipamento = (AgendamentoEquipamento) dao.busca(agendamentoEquipamento, codigo);

    }

    /*public void preencheCombo() {

    if (jcbBuscaTipoEntidade.getSelectedIndex() == 0) {
    preencheComboEscolas();
    } else {
    preencheComboCmeis();
    }

    }*/
    public void preencheComboEscolas() {

        iniciaDao();
        //DAO dao = new DAO();
        List listaEscolas = new ArrayList();

        jcbBuscaNomeEntidade.removeAllItems();
        jcbBuscaNomeEntidade.addItem("");

        listaEscolas = dao.listarEscolas(0, "", "");

        for (int i = 0; i < listaEscolas.size(); i++) {
            iniciaEscola();
            escola = (Escola) listaEscolas.get(i);
            jcbBuscaNomeEntidade.addItem(escola.getNomeEscola());
        }

    }

    public void preencheComboCmeis() {

        iniciaDao();
        //DAO dao = new DAO();
        List listaCmeis = new ArrayList();

        jcbBuscaNomeEntidade.removeAllItems();
        jcbBuscaNomeEntidade.addItem("");

        listaCmeis = dao.listarCmeis(0, "", "");

        for (int i = 0; i < listaCmeis.size(); i++) {
            iniciaCmei();
            cmei = (Cmei) listaCmeis.get(i);
            jcbBuscaNomeEntidade.addItem(cmei.getNomeCmei());
        }

    }

    public void preencheComboOutros() {

        iniciaDao();
        //DAO dao = new DAO();
        List listaOutros = new ArrayList();

        jcbBuscaNomeEntidade.removeAllItems();
        jcbBuscaNomeEntidade.addItem("");

        listaOutros = dao.listarOutros(0, "", "");

        for (int i = 0; i < listaOutros.size(); i++) {
            iniciaOutro();
            outro = (Outro) listaOutros.get(i);
            jcbBuscaNomeEntidade.addItem(outro.getNomeOutro());
        }

    }

//Geradores, Validadores===========================================================================================================================================
    public void iniciaAgendamentoEquipamento() {
        
        if (agendamentoEquipamento == null) {
            agendamentoEquipamento = new AgendamentoEquipamento();
        }
        
    }
    
    public void iniciaAgendamentoEquipamentoItens() {
        
        if (agendamentoEquipamentoItens == null) {
            agendamentoEquipamentoItens = new AgendamentoEquipamentoItens();
        }
        
    }
    
    public void iniciaClasseGeral() {
        
        if (classeGeral == null) {
            classeGeral = new ClasseGeral();
        }
        
    }
    
    public void iniciaCmei() {
        
        if (cmei == null) {
            cmei = new Cmei();
        }
        
    }
    
    public void iniciaControleCmei() {
        
        if (controleCmei == null) {
            controleCmei = new ControleCmei();
        }
        
    }
    
    public void iniciaControleEscola() {
        
        if (controleEscola == null) {
            controleEscola = new ControleEscola();
        }
        
    }
    
    public void iniciaControleOutro() {
        
        if (controleOutro == null) {
            controleOutro = new ControleOutro();
        }
        
    }
    
    public void iniciaEditaOrdemTabela() {
        
        if (editaOrdemTabela == null) {
            editaOrdemTabela = new EditaOrdemTabela();
        }
        
    }
    
    public void iniciaEquipamento() {
        
        if (equipamento == null) {
            equipamento = new Equipamento();
        }
        
    }
    
    public void iniciaEscola() {
        
        if (escola == null) {
            escola = new Escola();
        }
        
    }
    
    public void iniciaOutro() {
        
        if (outro == null) {
            outro = new Outro();
        }
        
    }
    
//Getters and Setters===========================================================================================================================================
    public void setNumeroAgendamentos() {

        iniciaDao();
        //DAO dao = new DAO();

        jlbTotal.setText("" + dao.getNumeroAgendamentosEquipamentoPorStatus("DO", versao.getAno()));
        jlbCancelados.setText("" + dao.getNumeroAgendamentosEquipamentoPorStatus("CANCELADO", versao.getAno()));
        jlbEmprestados.setText("" + dao.getNumeroAgendamentosEquipamentoPorStatus("EMPRESTADO", versao.getAno()));
        jlbDevolvidos.setText("" + dao.getNumeroAgendamentosEquipamentoPorStatus("DEVOLVIDO", versao.getAno()));
        jlbAgendados.setText("" + dao.getNumeroAgendamentosEquipamentoPorStatus("AGENDADO", versao.getAno()));
        jlbNaoRetiradoParaEmprestimo.setText("" + dao.getNumeroAgendamentosEquipamentoPorStatus("NÃO RETIRADO PARA EMPRESTIMO", versao.getAno()));

    }

    public AgendamentoEquipamento getAgendamentoEquipamento() {

        return agendamentoEquipamento;

    }

    public void setAgendamentoEquipamento() {
        agendamentoEquipamento = null;
    }

//Metodos DAO===========================================================================================================================================
    public void iniciaDao() {

        if (dao == null) {
            dao = new DAO();
        }

    }

}
