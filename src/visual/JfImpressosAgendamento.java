/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * jfImpressosAgendamento.java
 *
 * Created on 03/03/2010, 20:23:35
 */
package visual;

import conexao.Conexao;
import controlador.ClasseGeral;
import controlador.ControleCmei;
import controlador.ControleEscola;
import controlador.ControleImagem;
import controlador.ControleOutro;
import controlador.ControleVersao;
import dao.DAO;
import excecoes.ExcCadastro;
import java.awt.Image;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import modelo.Cmei;
import modelo.Escola;
import modelo.Outro;
import modelo.Permissoes;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author luizam
 */
public class JfImpressosAgendamento extends javax.swing.JFrame {

    private static ControleVersao versao = new ControleVersao();
    private ClasseGeral classeGeral;
    private Cmei cmei;
    private ControleCmei controleCmei;
    private ControleEscola controleEscola;
    private ControleOutro controleOutro;
    private DAO dao;
    private Escola escola;
    private Outro outro;
    
    private JasperPrint jPrint;
    private JasperViewer jViewer;
    
    private int codigoUsuario;
    private String tipoStatus = "%A%";
    private String nomeEntidade = "";
    private String tipoEntidade = "";
    private String tipoAgendamento = "%A%";

    private boolean impressosAgendamento;

    /** Creates new form jfImpressosAgendamento */
    public JfImpressosAgendamento() {
        super("Impressos Agendamento - " + versao.getVersao() + " - " + versao.getAno());
        initComponents();

        //Altera icone na barra de titulo
        Toolkit kit = Toolkit.getDefaultToolkit();
        Image img = kit.getImage("C:/SURGI/imagens/SURGI32x32.png");
        this.setIconImage(img);

        //centraliza tela
        setSize(getWidth(), getHeight());
        setLocationRelativeTo(null);

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgModoImpressao = new javax.swing.ButtonGroup();
        btgImpressaoPorNomeEntidade = new javax.swing.ButtonGroup();
        btgImpressaoPorNomeEntidadeStatus = new javax.swing.ButtonGroup();
        btgImpressaoTipoAgendamento = new javax.swing.ButtonGroup();
        jpImprAgendamento = new javax.swing.JPanel();
        jpModoImpressao = new javax.swing.JPanel();
        jrbTodosAgendamentos = new javax.swing.JRadioButton();
        jrbAtendidos = new javax.swing.JRadioButton();
        jrbAgendados = new javax.swing.JRadioButton();
        jrbMensal = new javax.swing.JRadioButton();
        jpPeriodo = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jDateChooserInicio = new com.toedter.calendar.JDateChooser();
        jDateChooserTermino = new com.toedter.calendar.JDateChooser();
        jrbEmAtendimento = new javax.swing.JRadioButton();
        jrbQuantitativo = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jYearChooserAno = new com.toedter.calendar.JYearChooser();
        jrbPorNomeEntidade = new javax.swing.JRadioButton();
        jpSelecaoEntidades = new javax.swing.JPanel();
        jrbBuscaAgendamentoEntidadeTodos = new javax.swing.JRadioButton();
        jrbBuscaAgendamentoEntidadeAgendados = new javax.swing.JRadioButton();
        jrbBuscaAgendamentoEntidadeEmAtendimento = new javax.swing.JRadioButton();
        jrbBuscaAgendamentoEntidadeAtendido = new javax.swing.JRadioButton();
        jrbBuscaAgendamentoEntidadeEscola = new javax.swing.JRadioButton();
        jrbBuscaAgendamentoEntidadeCmei = new javax.swing.JRadioButton();
        jrbBuscaAgendamentoEntidadeOutros = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        jcbBuscaAgendamentoNomeEntidade = new javax.swing.JComboBox();
        jcboxBuscaAgendamentoEnditadeSelecionarPeriodo = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        jrbTipoEntidadeTodos = new javax.swing.JRadioButton();
        jrbTipoEntidadeNormal = new javax.swing.JRadioButton();
        jrbTipoEntidadePontoDigital = new javax.swing.JRadioButton();
        jrbTipoEntidadeOficio = new javax.swing.JRadioButton();
        jpBotoes = new javax.swing.JPanel();
        jbExcluir = new javax.swing.JButton();
        jbAlterar = new javax.swing.JButton();
        jbImprimir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jpImprAgendamento.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        jpModoImpressao.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(1), "Modo de Impressão dos Agendamentos", 0, 0, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        jpModoImpressao.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        btgModoImpressao.add(jrbTodosAgendamentos);
        jrbTodosAgendamentos.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrbTodosAgendamentos.setSelected(true);
        jrbTodosAgendamentos.setText("Todos os Agendamentos");
        jrbTodosAgendamentos.setBorder(new javax.swing.border.SoftBevelBorder(1));
        jrbTodosAgendamentos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbTodosAgendamentosActionPerformed(evt);
            }
        });

        btgModoImpressao.add(jrbAtendidos);
        jrbAtendidos.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrbAtendidos.setText("Atendidos");
        jrbAtendidos.setBorder(new javax.swing.border.SoftBevelBorder(1));
        jrbAtendidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbAtendidosActionPerformed(evt);
            }
        });

        btgModoImpressao.add(jrbAgendados);
        jrbAgendados.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrbAgendados.setText("Agendados");
        jrbAgendados.setBorder(new javax.swing.border.SoftBevelBorder(1));
        jrbAgendados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbAgendadosActionPerformed(evt);
            }
        });

        btgModoImpressao.add(jrbMensal);
        jrbMensal.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrbMensal.setText("Mensal");
        jrbMensal.setBorder(new javax.swing.border.SoftBevelBorder(1));
        jrbMensal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbMensalActionPerformed(evt);
            }
        });

        jpPeriodo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Período", 0, 0, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Inicio:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Término:");

        jDateChooserInicio.setBorder(new javax.swing.border.SoftBevelBorder(1));
        jDateChooserInicio.setEnabled(false);
        jDateChooserInicio.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jDateChooserTermino.setBorder(new javax.swing.border.SoftBevelBorder(1));
        jDateChooserTermino.setEnabled(false);
        jDateChooserTermino.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        javax.swing.GroupLayout jpPeriodoLayout = new javax.swing.GroupLayout(jpPeriodo);
        jpPeriodo.setLayout(jpPeriodoLayout);
        jpPeriodoLayout.setHorizontalGroup(
            jpPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPeriodoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jDateChooserInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addGroup(jpPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jDateChooserTermino, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpPeriodoLayout.setVerticalGroup(
            jpPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPeriodoLayout.createSequentialGroup()
                .addGroup(jpPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(jpPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jDateChooserInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooserTermino, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        btgModoImpressao.add(jrbEmAtendimento);
        jrbEmAtendimento.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrbEmAtendimento.setText("Em Atendimento");
        jrbEmAtendimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbEmAtendimentoActionPerformed(evt);
            }
        });

        btgModoImpressao.add(jrbQuantitativo);
        jrbQuantitativo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrbQuantitativo.setText("Quantitativo");
        jrbQuantitativo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbQuantitativoActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Ano: ");

        jYearChooserAno.setBorder(new javax.swing.border.SoftBevelBorder(1));

        btgModoImpressao.add(jrbPorNomeEntidade);
        jrbPorNomeEntidade.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrbPorNomeEntidade.setText("Por Nome de Entidade");
        jrbPorNomeEntidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbPorNomeEntidadeActionPerformed(evt);
            }
        });

        jpSelecaoEntidades.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Seleção", 0, 0, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        btgImpressaoPorNomeEntidadeStatus.add(jrbBuscaAgendamentoEntidadeTodos);
        jrbBuscaAgendamentoEntidadeTodos.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbBuscaAgendamentoEntidadeTodos.setSelected(true);
        jrbBuscaAgendamentoEntidadeTodos.setText("Todos");
        jrbBuscaAgendamentoEntidadeTodos.setEnabled(false);
        jrbBuscaAgendamentoEntidadeTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbBuscaAgendamentoEntidadeTodosActionPerformed(evt);
            }
        });

        btgImpressaoPorNomeEntidadeStatus.add(jrbBuscaAgendamentoEntidadeAgendados);
        jrbBuscaAgendamentoEntidadeAgendados.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbBuscaAgendamentoEntidadeAgendados.setText("Agendados");
        jrbBuscaAgendamentoEntidadeAgendados.setEnabled(false);
        jrbBuscaAgendamentoEntidadeAgendados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbBuscaAgendamentoEntidadeAgendadosActionPerformed(evt);
            }
        });

        btgImpressaoPorNomeEntidadeStatus.add(jrbBuscaAgendamentoEntidadeEmAtendimento);
        jrbBuscaAgendamentoEntidadeEmAtendimento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbBuscaAgendamentoEntidadeEmAtendimento.setText("Em Atendimento");
        jrbBuscaAgendamentoEntidadeEmAtendimento.setEnabled(false);
        jrbBuscaAgendamentoEntidadeEmAtendimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbBuscaAgendamentoEntidadeEmAtendimentoActionPerformed(evt);
            }
        });

        btgImpressaoPorNomeEntidadeStatus.add(jrbBuscaAgendamentoEntidadeAtendido);
        jrbBuscaAgendamentoEntidadeAtendido.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbBuscaAgendamentoEntidadeAtendido.setText("Atendido");
        jrbBuscaAgendamentoEntidadeAtendido.setEnabled(false);
        jrbBuscaAgendamentoEntidadeAtendido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbBuscaAgendamentoEntidadeAtendidoActionPerformed(evt);
            }
        });

        btgImpressaoPorNomeEntidade.add(jrbBuscaAgendamentoEntidadeEscola);
        jrbBuscaAgendamentoEntidadeEscola.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbBuscaAgendamentoEntidadeEscola.setSelected(true);
        jrbBuscaAgendamentoEntidadeEscola.setText("Escola");
        jrbBuscaAgendamentoEntidadeEscola.setEnabled(false);
        jrbBuscaAgendamentoEntidadeEscola.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbBuscaAgendamentoEntidadeEscolaActionPerformed(evt);
            }
        });

        btgImpressaoPorNomeEntidade.add(jrbBuscaAgendamentoEntidadeCmei);
        jrbBuscaAgendamentoEntidadeCmei.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbBuscaAgendamentoEntidadeCmei.setText("Cmei");
        jrbBuscaAgendamentoEntidadeCmei.setEnabled(false);
        jrbBuscaAgendamentoEntidadeCmei.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbBuscaAgendamentoEntidadeCmeiActionPerformed(evt);
            }
        });

        btgImpressaoPorNomeEntidade.add(jrbBuscaAgendamentoEntidadeOutros);
        jrbBuscaAgendamentoEntidadeOutros.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbBuscaAgendamentoEntidadeOutros.setText("Outros");
        jrbBuscaAgendamentoEntidadeOutros.setEnabled(false);
        jrbBuscaAgendamentoEntidadeOutros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbBuscaAgendamentoEntidadeOutrosActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Nome Entidade: ");

        jcbBuscaAgendamentoNomeEntidade.setBorder(new javax.swing.border.SoftBevelBorder(0));
        jcbBuscaAgendamentoNomeEntidade.setEnabled(false);

        jcboxBuscaAgendamentoEnditadeSelecionarPeriodo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcboxBuscaAgendamentoEnditadeSelecionarPeriodo.setText("Selecionar Período");
        jcboxBuscaAgendamentoEnditadeSelecionarPeriodo.setEnabled(false);
        jcboxBuscaAgendamentoEnditadeSelecionarPeriodo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jcboxBuscaAgendamentoEnditadeSelecionarPeriodoMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jpSelecaoEntidadesLayout = new javax.swing.GroupLayout(jpSelecaoEntidades);
        jpSelecaoEntidades.setLayout(jpSelecaoEntidadesLayout);
        jpSelecaoEntidadesLayout.setHorizontalGroup(
            jpSelecaoEntidadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpSelecaoEntidadesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpSelecaoEntidadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpSelecaoEntidadesLayout.createSequentialGroup()
                        .addComponent(jrbBuscaAgendamentoEntidadeEscola)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jrbBuscaAgendamentoEntidadeCmei)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jrbBuscaAgendamentoEntidadeOutros))
                    .addGroup(jpSelecaoEntidadesLayout.createSequentialGroup()
                        .addComponent(jrbBuscaAgendamentoEntidadeTodos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jrbBuscaAgendamentoEntidadeAgendados)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jrbBuscaAgendamentoEntidadeEmAtendimento)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jrbBuscaAgendamentoEntidadeAtendido))
                    .addGroup(jpSelecaoEntidadesLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcbBuscaAgendamentoNomeEntidade, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jcboxBuscaAgendamentoEnditadeSelecionarPeriodo))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpSelecaoEntidadesLayout.setVerticalGroup(
            jpSelecaoEntidadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpSelecaoEntidadesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpSelecaoEntidadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrbBuscaAgendamentoEntidadeTodos)
                    .addComponent(jrbBuscaAgendamentoEntidadeAgendados)
                    .addComponent(jrbBuscaAgendamentoEntidadeEmAtendimento)
                    .addComponent(jrbBuscaAgendamentoEntidadeAtendido))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpSelecaoEntidadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrbBuscaAgendamentoEntidadeEscola)
                    .addComponent(jrbBuscaAgendamentoEntidadeCmei)
                    .addComponent(jrbBuscaAgendamentoEntidadeOutros))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpSelecaoEntidadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jcbBuscaAgendamentoNomeEntidade, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jcboxBuscaAgendamentoEnditadeSelecionarPeriodo)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Tipo Agendamento: ");

        btgImpressaoTipoAgendamento.add(jrbTipoEntidadeTodos);
        jrbTipoEntidadeTodos.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbTipoEntidadeTodos.setSelected(true);
        jrbTipoEntidadeTodos.setText("Todos");
        jrbTipoEntidadeTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbTipoEntidadeTodosActionPerformed(evt);
            }
        });

        btgImpressaoTipoAgendamento.add(jrbTipoEntidadeNormal);
        jrbTipoEntidadeNormal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbTipoEntidadeNormal.setText("Normal");
        jrbTipoEntidadeNormal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbTipoEntidadeNormalActionPerformed(evt);
            }
        });

        btgImpressaoTipoAgendamento.add(jrbTipoEntidadePontoDigital);
        jrbTipoEntidadePontoDigital.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbTipoEntidadePontoDigital.setText("Ponto Digital");
        jrbTipoEntidadePontoDigital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbTipoEntidadePontoDigitalActionPerformed(evt);
            }
        });

        btgImpressaoTipoAgendamento.add(jrbTipoEntidadeOficio);
        jrbTipoEntidadeOficio.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbTipoEntidadeOficio.setText("Ofício");
        jrbTipoEntidadeOficio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbTipoEntidadeOficioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpModoImpressaoLayout = new javax.swing.GroupLayout(jpModoImpressao);
        jpModoImpressao.setLayout(jpModoImpressaoLayout);
        jpModoImpressaoLayout.setHorizontalGroup(
            jpModoImpressaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpModoImpressaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpModoImpressaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpSelecaoEntidades, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jpModoImpressaoLayout.createSequentialGroup()
                        .addGroup(jpModoImpressaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jrbPorNomeEntidade)
                            .addGroup(jpModoImpressaoLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jYearChooserAno, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jrbTodosAgendamentos)
                            .addComponent(jrbAtendidos)
                            .addComponent(jrbAgendados)
                            .addComponent(jrbEmAtendimento)
                            .addComponent(jrbMensal)
                            .addComponent(jrbQuantitativo)
                            .addComponent(jpPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jpModoImpressaoLayout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jrbTipoEntidadeTodos)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jrbTipoEntidadeNormal)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jrbTipoEntidadePontoDigital)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jrbTipoEntidadeOficio)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jpModoImpressaoLayout.setVerticalGroup(
            jpModoImpressaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpModoImpressaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpModoImpressaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jYearChooserAno, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jpModoImpressaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jrbTipoEntidadeTodos)
                    .addComponent(jrbTipoEntidadeNormal)
                    .addComponent(jrbTipoEntidadePontoDigital)
                    .addComponent(jrbTipoEntidadeOficio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jrbTodosAgendamentos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jrbAtendidos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jrbAgendados)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jrbEmAtendimento)
                .addGap(7, 7, 7)
                .addComponent(jrbMensal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jrbQuantitativo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jrbPorNomeEntidade)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpSelecaoEntidades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jpImprAgendamentoLayout = new javax.swing.GroupLayout(jpImprAgendamento);
        jpImprAgendamento.setLayout(jpImprAgendamentoLayout);
        jpImprAgendamentoLayout.setHorizontalGroup(
            jpImprAgendamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpImprAgendamentoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpModoImpressao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jpImprAgendamentoLayout.setVerticalGroup(
            jpImprAgendamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpImprAgendamentoLayout.createSequentialGroup()
                .addComponent(jpModoImpressao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jpBotoes.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        jbExcluir.setBorder(new javax.swing.border.SoftBevelBorder(0));
        jbExcluir.setEnabled(false);
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jbAlterar.setBorder(new javax.swing.border.SoftBevelBorder(0));
        jbAlterar.setEnabled(false);
        jbAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlterarActionPerformed(evt);
            }
        });

        jbImprimir.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/imprimir.png"))); // NOI18N
        jbImprimir.setText("Imprimir");
        jbImprimir.setBorder(new javax.swing.border.SoftBevelBorder(0));
        jbImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbImprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpBotoesLayout = new javax.swing.GroupLayout(jpBotoes);
        jpBotoes.setLayout(jpBotoesLayout);
        jpBotoesLayout.setHorizontalGroup(
            jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpBotoesLayout.createSequentialGroup()
                .addContainerGap(260, Short.MAX_VALUE)
                .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );
        jpBotoesLayout.setVerticalGroup(
            jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpImprAgendamento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jpBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jpImprAgendamento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        //();
}//GEN-LAST:event_jbExcluirActionPerformed

    private void jbAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlterarActionPerformed

        /*abilitaCampos();

        jbNovo.setEnabled(true);
        jbSalvar.setEnabled(true);
        jbCancelar.setEnabled(true);
        jbBuscar.setEnabled(true);
        jbExcluir.setEnabled(true);
        jbAlterar.setEnabled(false);
        jbImprimir.setEnabled(true);

        opcao = "alterar";*/
    }//GEN-LAST:event_jbAlterarActionPerformed

    private void jbImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbImprimirActionPerformed

        //ADOGeral ag = new ADOGeral();
        Conexao conexao = new Conexao();
        HashMap parametros = new HashMap();
        try {

            if(jrbPorNomeEntidade.isSelected()) {
                nomeEntidade = "%"+jcbBuscaAgendamentoNomeEntidade.getSelectedItem().toString()+"%";
            }

            //System.out.println(codigoRegistro);
            //parametros.put("titulo", "Titulo Relatorio");
            parametros.put("tipoAgendamento", new String(tipoAgendamento));
            parametros.put("statusAgendado", new String(tipoStatus));
            parametros.put("mesInicio", jDateChooserInicio.getDate());
            parametros.put("mesTermino", jDateChooserTermino.getDate());
            parametros.put("tipoEntidadeAgendada", new String(tipoEntidade));
            parametros.put("anoAgendamentoBuscado", new String(String.valueOf(jYearChooserAno.getYear())));
            //System.out.println("O Ano é: " + String.valueOf(jYearChooserAno.getYear()));
            //parametros.put("codigo", lista.get(0).getNome();
            //ADOGeral.conectar();
            conexao.getConexao();
        } catch (ExcCadastro ex) {
            Logger.getLogger(JfImpressosAgendamento.class.getName()).log(Level.SEVERE, null, ex);
        }

        //        JRDataSource jrds = new JRBeanCollectionDataSource(lista);

        try {

            //jReport = JasperCompileManager.compileReport("E:/LUIZ/PROJETOS JAVA/CORPORATIVO/m2GestaoClinicas/FichaPaciente.jrxml");
            //jPrint = JasperFillManager.fillReport("C:/m2GestaoClinicas/FichaPaciente.jasper", parametros, ADOGeral.getConexao());
            if(jrbMensal.isSelected()) {

                if (jDateChooserInicio.getDate() == null || jDateChooserTermino.getDate() == null) {
                    iniciaClasseGeral();
                    classeGeral.msgAtencao("Não há uma data especifica selecionada!");
                } else {
                    iniciaClasseGeral();
                    
                    jPrint = JasperFillManager.fillReport("AgendamentoPorMesCmei.jasper", parametros, conexao.getConexao());
                    imprimir();
                    jPrint = JasperFillManager.fillReport("AgendamentoPorMesEscola.jasper", parametros, conexao.getConexao());
                    imprimir();
                    jPrint = JasperFillManager.fillReport("AgendamentoPorMesOutro.jasper", parametros, conexao.getConexao());
                    imprimir();
                    
                    classeGeral.msgInforma("Esta opção exibe três relatórios distintos, separados por tipo de unidade!");
                }
                
            } else if (jrbPorNomeEntidade.isSelected()) {

                if (jcboxBuscaAgendamentoEnditadeSelecionarPeriodo.isSelected()) {

                    switch (tipoEntidade) {
                        
                        case "CMEI":
                            iniciaControleCmei();
                            parametros.put("codigoCmei", controleCmei.getCodigoCmei(nomeEntidade));
                            jPrint = JasperFillManager.fillReport("AgendamentoPorNomeEntidadePeriodoCmei.jasper", parametros, conexao.getConexao());
                            break;
                            
                        case "ESCOLA":
                            iniciaControleEscola();
                            parametros.put("codigoEscola", controleEscola.getCodigoEscola(nomeEntidade));
                            jPrint = JasperFillManager.fillReport("AgendamentoPorNomeEntidadePeriodoEscola.jasper", parametros, conexao.getConexao());
                            break;
                            
                        case "OUTROS":
                            iniciaControleOutro();
                            parametros.put("codigoOutro", controleOutro.getCodigoOutro(nomeEntidade));
                            jPrint = JasperFillManager.fillReport("AgendamentoPorNomeEntidadePeriodoOutro.jasper", parametros, conexao.getConexao());
                            break;    
                        
                    }
                    
                    imprimir();
                    
                } else {
                    
                     switch (tipoEntidade) {
                        
                        case "CMEI":
                            iniciaControleCmei();
                            parametros.put("codigoCmei", controleCmei.getCodigoCmei(nomeEntidade));
                            jPrint = JasperFillManager.fillReport("AgendamentoPorNomeEntidadeCmei.jasper", parametros, conexao.getConexao());
                            break;
                            
                        case "ESCOLA":
                            iniciaControleEscola();
                            parametros.put("codigoEscola", controleEscola.getCodigoEscola(nomeEntidade));
                            jPrint = JasperFillManager.fillReport("AgendamentoPorNomeEntidadeEscola.jasper", parametros, conexao.getConexao());
                            break;
                            
                        case "OUTROS":
                            iniciaControleOutro();
                            parametros.put("codigoOutro", controleOutro.getCodigoOutro(nomeEntidade));
                            jPrint = JasperFillManager.fillReport("AgendamentoPorNomeEntidadeOutro.jasper", parametros, conexao.getConexao());
                            break;    
                        
                    }
                    
                    imprimir();
                    
                }

            } else {
                
                iniciaClasseGeral();
                
                jPrint = JasperFillManager.fillReport("AgendamentoCmei.jasper", parametros, conexao.getConexao());
                imprimir();
                jPrint = JasperFillManager.fillReport("AgendamentoEscola.jasper", parametros, conexao.getConexao());
                imprimir();
                jPrint = JasperFillManager.fillReport("AgendamentoOutro.jasper", parametros, conexao.getConexao());
                imprimir();
                
                classeGeral.msgInforma("Esta opção exibe três relatórios distintos, separados por tipo de unidade!");
                
                /*switch (tipoEntidade) {
                  
                    case "CMEI":
                        
                        break;
                    
                    case "ESCOLA":
                        
                        break;
                        
                    case "OUTROS":
                        
                        break;
                        
                }*/
                
            }
            //jPrint = JasperFillManager.fillReport(jReport, parametros, jrds);

            //if (!(jViewer == null)) {
            //jViewer = new JasperViewer(jPrint, false);
            //jViewer.setExtendedState(JFrame.MAXIMIZED_BOTH);
            
            
            //}

        } catch (Exception ex) {
            ex.printStackTrace();
        }

        cancelar();
        
    }//GEN-LAST:event_jbImprimirActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        fechar();
    }//GEN-LAST:event_formWindowClosing

    private void jrbTodosAgendamentosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbTodosAgendamentosActionPerformed

        tipoStatus = "%A%";
        jDateChooserInicio.setEnabled(false);
        jDateChooserTermino.setEnabled(false);
        jrbBuscaAgendamentoEntidadeAgendados.setEnabled(false);
        jrbBuscaAgendamentoEntidadeAtendido.setEnabled(false);
        jrbBuscaAgendamentoEntidadeEmAtendimento.setEnabled(false);
        jrbBuscaAgendamentoEntidadeTodos.setEnabled(false);
        jrbBuscaAgendamentoEntidadeCmei.setEnabled(false);
        jrbBuscaAgendamentoEntidadeEscola.setEnabled(false);
        jrbBuscaAgendamentoEntidadeOutros.setEnabled(false);
        jcbBuscaAgendamentoNomeEntidade.removeAll();
        jcbBuscaAgendamentoNomeEntidade.setEnabled(false);
        jcboxBuscaAgendamentoEnditadeSelecionarPeriodo.setEnabled(false);
        tipoEntidade = "";
        nomeEntidade = "";

    }//GEN-LAST:event_jrbTodosAgendamentosActionPerformed

    private void jrbAtendidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbAtendidosActionPerformed

        tipoStatus = "%ATENDIDO%";
        jDateChooserInicio.setEnabled(false);
        jDateChooserTermino.setEnabled(false);
        jrbBuscaAgendamentoEntidadeAgendados.setEnabled(false);
        jrbBuscaAgendamentoEntidadeAtendido.setEnabled(false);
        jrbBuscaAgendamentoEntidadeEmAtendimento.setEnabled(false);
        jrbBuscaAgendamentoEntidadeTodos.setEnabled(false);
        jrbBuscaAgendamentoEntidadeCmei.setEnabled(false);
        jrbBuscaAgendamentoEntidadeEscola.setEnabled(false);
        jrbBuscaAgendamentoEntidadeOutros.setEnabled(false);
        jcbBuscaAgendamentoNomeEntidade.removeAll();
        jcbBuscaAgendamentoNomeEntidade.setEnabled(false);
        jcboxBuscaAgendamentoEnditadeSelecionarPeriodo.setEnabled(false);
        tipoEntidade = "";
        nomeEntidade = "";

    }//GEN-LAST:event_jrbAtendidosActionPerformed

    private void jrbAgendadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbAgendadosActionPerformed

        tipoStatus = "%AGENDADO%";
        jDateChooserInicio.setEnabled(false);
        jDateChooserTermino.setEnabled(false);
        jrbBuscaAgendamentoEntidadeAgendados.setEnabled(false);
        jrbBuscaAgendamentoEntidadeAtendido.setEnabled(false);
        jrbBuscaAgendamentoEntidadeEmAtendimento.setEnabled(false);
        jrbBuscaAgendamentoEntidadeTodos.setEnabled(false);
        jrbBuscaAgendamentoEntidadeCmei.setEnabled(false);
        jrbBuscaAgendamentoEntidadeEscola.setEnabled(false);
        jrbBuscaAgendamentoEntidadeOutros.setEnabled(false);
        jcbBuscaAgendamentoNomeEntidade.removeAll();
        jcbBuscaAgendamentoNomeEntidade.setEnabled(false);
        jcboxBuscaAgendamentoEnditadeSelecionarPeriodo.setEnabled(false);
        tipoEntidade = "";
        nomeEntidade = "";
        
    }//GEN-LAST:event_jrbAgendadosActionPerformed

    private void jrbMensalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbMensalActionPerformed

        tipoStatus = "%A%";
        jDateChooserInicio.setEnabled(true);
        jDateChooserTermino.setEnabled(true);
        jrbBuscaAgendamentoEntidadeAgendados.setEnabled(false);
        jrbBuscaAgendamentoEntidadeAtendido.setEnabled(false);
        jrbBuscaAgendamentoEntidadeEmAtendimento.setEnabled(false);
        jrbBuscaAgendamentoEntidadeTodos.setEnabled(false);
        jrbBuscaAgendamentoEntidadeCmei.setEnabled(false);
        jrbBuscaAgendamentoEntidadeEscola.setEnabled(false);
        jrbBuscaAgendamentoEntidadeOutros.setEnabled(false);
        jcbBuscaAgendamentoNomeEntidade.removeAll();
        jcbBuscaAgendamentoNomeEntidade.setEnabled(false);
        jcboxBuscaAgendamentoEnditadeSelecionarPeriodo.setEnabled(false);
        tipoEntidade = "";
        nomeEntidade = "";
        
    }//GEN-LAST:event_jrbMensalActionPerformed

    private void jrbEmAtendimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbEmAtendimentoActionPerformed

            tipoStatus = "%EM ATENDIMENTO%";
            jDateChooserInicio.setEnabled(false);
            jDateChooserTermino.setEnabled(false);
            jrbBuscaAgendamentoEntidadeAgendados.setEnabled(false);
            jrbBuscaAgendamentoEntidadeAtendido.setEnabled(false);
            jrbBuscaAgendamentoEntidadeEmAtendimento.setEnabled(false);
            jrbBuscaAgendamentoEntidadeTodos.setEnabled(false);
            jrbBuscaAgendamentoEntidadeCmei.setEnabled(false);
            jrbBuscaAgendamentoEntidadeEscola.setEnabled(false);
            jrbBuscaAgendamentoEntidadeOutros.setEnabled(false);
            jcbBuscaAgendamentoNomeEntidade.removeAll();
            jcbBuscaAgendamentoNomeEntidade.setEnabled(false);
            jcboxBuscaAgendamentoEnditadeSelecionarPeriodo.setEnabled(false);
            tipoEntidade = "";
            nomeEntidade = "";

    }//GEN-LAST:event_jrbEmAtendimentoActionPerformed

    private void jrbQuantitativoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbQuantitativoActionPerformed

            tipoStatus = "";
            jDateChooserInicio.setEnabled(false);
            jDateChooserTermino.setEnabled(false);
            jrbBuscaAgendamentoEntidadeAgendados.setEnabled(false);
            jrbBuscaAgendamentoEntidadeAtendido.setEnabled(false);
            jrbBuscaAgendamentoEntidadeEmAtendimento.setEnabled(false);
            jrbBuscaAgendamentoEntidadeTodos.setEnabled(false);
            jrbBuscaAgendamentoEntidadeCmei.setEnabled(false);
            jrbBuscaAgendamentoEntidadeEscola.setEnabled(false);
            jrbBuscaAgendamentoEntidadeOutros.setEnabled(false);
            jcbBuscaAgendamentoNomeEntidade.removeAll();
            jcbBuscaAgendamentoNomeEntidade.setEnabled(false);
            jcboxBuscaAgendamentoEnditadeSelecionarPeriodo.setEnabled(false);
            tipoEntidade = "";
            nomeEntidade = "";


    }//GEN-LAST:event_jrbQuantitativoActionPerformed

    private void jrbPorNomeEntidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbPorNomeEntidadeActionPerformed


            jrbBuscaAgendamentoEntidadeAgendados.setEnabled(true);
            jrbBuscaAgendamentoEntidadeAtendido.setEnabled(true);
            jrbBuscaAgendamentoEntidadeEmAtendimento.setEnabled(true);
            jrbBuscaAgendamentoEntidadeTodos.setEnabled(true);

            jrbBuscaAgendamentoEntidadeCmei.setEnabled(true);
            jrbBuscaAgendamentoEntidadeEscola.setEnabled(true);
            jrbBuscaAgendamentoEntidadeOutros.setEnabled(true);
            jcbBuscaAgendamentoNomeEntidade.setEnabled(true);

            if (jrbBuscaAgendamentoEntidadeCmei.isSelected()) {
                tipoEntidade = "CMEI";
                preencheComboCmeis();
            } else if (jrbBuscaAgendamentoEntidadeEscola.isSelected()) {
                tipoEntidade = "ESCOLA";
                preencheComboEscolas();
            } else if (jrbBuscaAgendamentoEntidadeOutros.isSelected()) {
                tipoEntidade = "OUTROS";
                preencheComboOutros();
            }

            jcboxBuscaAgendamentoEnditadeSelecionarPeriodo.setEnabled(true);
            
            tipoStatus = "%A%";

            jDateChooserInicio.setEnabled(false);
            jDateChooserTermino.setEnabled(false);


    }//GEN-LAST:event_jrbPorNomeEntidadeActionPerformed

    private void jrbBuscaAgendamentoEntidadeAgendadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbBuscaAgendamentoEntidadeAgendadosActionPerformed

            tipoStatus = "%AGENDADO%";

    }//GEN-LAST:event_jrbBuscaAgendamentoEntidadeAgendadosActionPerformed

    private void jrbBuscaAgendamentoEntidadeEmAtendimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbBuscaAgendamentoEntidadeEmAtendimentoActionPerformed

            tipoStatus = "%EM ATENDIMENTO%";

    }//GEN-LAST:event_jrbBuscaAgendamentoEntidadeEmAtendimentoActionPerformed

    private void jrbBuscaAgendamentoEntidadeAtendidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbBuscaAgendamentoEntidadeAtendidoActionPerformed

            tipoStatus = "%ATENDIDO%";

    }//GEN-LAST:event_jrbBuscaAgendamentoEntidadeAtendidoActionPerformed

    private void jrbBuscaAgendamentoEntidadeTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbBuscaAgendamentoEntidadeTodosActionPerformed

            tipoStatus = "%A%";

    }//GEN-LAST:event_jrbBuscaAgendamentoEntidadeTodosActionPerformed

    private void jrbBuscaAgendamentoEntidadeEscolaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbBuscaAgendamentoEntidadeEscolaActionPerformed
        preencheComboEscolas();
        tipoEntidade = "ESCOLA";
    }//GEN-LAST:event_jrbBuscaAgendamentoEntidadeEscolaActionPerformed

    private void jrbBuscaAgendamentoEntidadeCmeiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbBuscaAgendamentoEntidadeCmeiActionPerformed
        preencheComboCmeis();
        tipoEntidade = "CMEI";
    }//GEN-LAST:event_jrbBuscaAgendamentoEntidadeCmeiActionPerformed

    private void jrbBuscaAgendamentoEntidadeOutrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbBuscaAgendamentoEntidadeOutrosActionPerformed
        preencheComboOutros();
        tipoEntidade = "OUTROS";
    }//GEN-LAST:event_jrbBuscaAgendamentoEntidadeOutrosActionPerformed

    private void jrbTipoEntidadeTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbTipoEntidadeTodosActionPerformed
        tipoAgendamento = "%A%";
    }//GEN-LAST:event_jrbTipoEntidadeTodosActionPerformed

    private void jrbTipoEntidadeNormalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbTipoEntidadeNormalActionPerformed
        tipoAgendamento = "%AGENDAMENTO NORMAL%";
    }//GEN-LAST:event_jrbTipoEntidadeNormalActionPerformed

    private void jrbTipoEntidadePontoDigitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbTipoEntidadePontoDigitalActionPerformed
        tipoAgendamento = "%AGENDAMENTO PONTO DIGITAL%";
    }//GEN-LAST:event_jrbTipoEntidadePontoDigitalActionPerformed

    private void jrbTipoEntidadeOficioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbTipoEntidadeOficioActionPerformed
        tipoAgendamento = "%AGENDAMENTO OFICIO%";
    }//GEN-LAST:event_jrbTipoEntidadeOficioActionPerformed

    private void jcboxBuscaAgendamentoEnditadeSelecionarPeriodoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcboxBuscaAgendamentoEnditadeSelecionarPeriodoMouseClicked
        
        if (jcboxBuscaAgendamentoEnditadeSelecionarPeriodo.isSelected()) {
            jDateChooserInicio.setEnabled(true);
            jDateChooserTermino.setEnabled(true);
        } else {
            jDateChooserInicio.setEnabled(false);
            jDateChooserTermino.setEnabled(false);
        }
        
    }//GEN-LAST:event_jcboxBuscaAgendamentoEnditadeSelecionarPeriodoMouseClicked
    /**
     * @param args the command line arguments
     */
    /*public static void main(String args[]) {
    java.awt.EventQueue.invokeLater(new Runnable() {
    public void run() {
    new jfImpressosAgendamento().setVisible(true);
    }
    });
    }*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgImpressaoPorNomeEntidade;
    private javax.swing.ButtonGroup btgImpressaoPorNomeEntidadeStatus;
    private javax.swing.ButtonGroup btgImpressaoTipoAgendamento;
    private javax.swing.ButtonGroup btgModoImpressao;
    private com.toedter.calendar.JDateChooser jDateChooserInicio;
    private com.toedter.calendar.JDateChooser jDateChooserTermino;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private com.toedter.calendar.JYearChooser jYearChooserAno;
    private javax.swing.JButton jbAlterar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbImprimir;
    private javax.swing.JComboBox jcbBuscaAgendamentoNomeEntidade;
    private javax.swing.JCheckBox jcboxBuscaAgendamentoEnditadeSelecionarPeriodo;
    private javax.swing.JPanel jpBotoes;
    private javax.swing.JPanel jpImprAgendamento;
    private javax.swing.JPanel jpModoImpressao;
    private javax.swing.JPanel jpPeriodo;
    private javax.swing.JPanel jpSelecaoEntidades;
    private javax.swing.JRadioButton jrbAgendados;
    private javax.swing.JRadioButton jrbAtendidos;
    private javax.swing.JRadioButton jrbBuscaAgendamentoEntidadeAgendados;
    private javax.swing.JRadioButton jrbBuscaAgendamentoEntidadeAtendido;
    private javax.swing.JRadioButton jrbBuscaAgendamentoEntidadeCmei;
    private javax.swing.JRadioButton jrbBuscaAgendamentoEntidadeEmAtendimento;
    private javax.swing.JRadioButton jrbBuscaAgendamentoEntidadeEscola;
    private javax.swing.JRadioButton jrbBuscaAgendamentoEntidadeOutros;
    private javax.swing.JRadioButton jrbBuscaAgendamentoEntidadeTodos;
    private javax.swing.JRadioButton jrbEmAtendimento;
    private javax.swing.JRadioButton jrbMensal;
    private javax.swing.JRadioButton jrbPorNomeEntidade;
    private javax.swing.JRadioButton jrbQuantitativo;
    private javax.swing.JRadioButton jrbTipoEntidadeNormal;
    private javax.swing.JRadioButton jrbTipoEntidadeOficio;
    private javax.swing.JRadioButton jrbTipoEntidadePontoDigital;
    private javax.swing.JRadioButton jrbTipoEntidadeTodos;
    private javax.swing.JRadioButton jrbTodosAgendamentos;
    // End of variables declaration//GEN-END:variables

//Outros Metodos ===========================================================================================================================================
    public void fechar() {

        cancelar();
        dao = null;
        this.dispose();

    }
    
    public void cancelar() {
        
        jrbTipoEntidadeTodos.setSelected(true);
        
        tipoStatus = "%A%";
        jDateChooserInicio.setEnabled(false);
        jDateChooserTermino.setEnabled(false);
        jrbBuscaAgendamentoEntidadeAgendados.setEnabled(false);
        jrbBuscaAgendamentoEntidadeAtendido.setEnabled(false);
        jrbBuscaAgendamentoEntidadeEmAtendimento.setEnabled(false);
        jrbBuscaAgendamentoEntidadeTodos.setEnabled(false);
        jrbBuscaAgendamentoEntidadeCmei.setEnabled(false);
        jrbBuscaAgendamentoEntidadeEscola.setEnabled(false);
        jrbBuscaAgendamentoEntidadeOutros.setEnabled(false);
        jcbBuscaAgendamentoNomeEntidade.removeAll();
        jcbBuscaAgendamentoNomeEntidade.setEnabled(false);
        tipoEntidade = "";
        nomeEntidade = "";
        tipoAgendamento = "%A%";
        
        jrbTodosAgendamentos.setSelected(true);
        jrbBuscaAgendamentoEntidadeTodos.setSelected(true);
        jrbBuscaAgendamentoEntidadeEscola.setSelected(true);
        
        jDateChooserInicio.setDate(null);
        jDateChooserTermino.setDate(null);
        
        jcboxBuscaAgendamentoEnditadeSelecionarPeriodo.setSelected(false);
        jcboxBuscaAgendamentoEnditadeSelecionarPeriodo.setEnabled(false);
        
    }

    public void imprimir() {
        
        if (jPrint != null) {
            jViewer.viewReport(jPrint, false);
            jPrint = null;
        }
        
    }
    
    public void preencheComboEscolas() {

        iniciaDao();
        //DAO dao = new DAO();
        List listaEscolas = new ArrayList();

        jcbBuscaAgendamentoNomeEntidade.removeAllItems();
        jcbBuscaAgendamentoNomeEntidade.addItem("");

        listaEscolas = dao.listarEscolas(0, "", "");

        for (int i = 0; i < listaEscolas.size(); i++) {
            iniciaEscola();
            escola = (Escola) listaEscolas.get(i);
            jcbBuscaAgendamentoNomeEntidade.addItem(escola.getNomeEscola());
        }

    }

    public void preencheComboCmeis() {

        iniciaDao();
        //DAO dao = new DAO();
        List listaCmeis = new ArrayList();

        jcbBuscaAgendamentoNomeEntidade.removeAllItems();
        jcbBuscaAgendamentoNomeEntidade.addItem("");

        listaCmeis = dao.listarCmeis(0, "", "");

        for (int i = 0; i < listaCmeis.size(); i++) {
            iniciaCmei();
            cmei = (Cmei) listaCmeis.get(i);
            jcbBuscaAgendamentoNomeEntidade.addItem(cmei.getNomeCmei());
        }
    }

    public void preencheComboOutros() {

        iniciaDao();
        //DAO dao = new DAO();
        List listaOutros = new ArrayList();

        jcbBuscaAgendamentoNomeEntidade.removeAllItems();
        jcbBuscaAgendamentoNomeEntidade.addItem("");

        listaOutros = dao.listarOutros(0, "", "");

        for (int i = 0; i < listaOutros.size(); i++) {
            iniciaOutro();
            outro = (Outro) listaOutros.get(i);
            jcbBuscaAgendamentoNomeEntidade.addItem(outro.getNomeOutro());
        }

    }

//Geradores, Validadores===========================================================================================================================================
    public void abilitaBotoes() {

        if (impressosAgendamento == true) {
            jbImprimir.setEnabled(true);
        } else {
            jbImprimir.setEnabled(false);
        }

    }

    public void desabilitaBotoes() {

        if (impressosAgendamento == true) {
            jbImprimir.setEnabled(true);
        } else {
            jbImprimir.setEnabled(false);
        }

    }

//Getters and Setters===========================================================================================================================================
    public int getCodigoUsuario() {
        return codigoUsuario;
    }

    public void setCodigoUsuario(int codigoUsuario) {
        this.codigoUsuario = codigoUsuario;
        getPermissoes();
        desabilitaBotoes();
    }

    public void getPermissoes() {
        Permissoes permissoes;
        iniciaDao();
        //DAO dao = new DAO();

        permissoes = (Permissoes) dao.buscaPermissoes(codigoUsuario);

        impressosAgendamento = permissoes.isImpressosAgendamento();
    }

//Metodos DAO===========================================================================================================================================
    public void iniciaClasseGeral() {
        
        if (classeGeral == null) {
            classeGeral = new ClasseGeral();
        }
        
    }
    
    public void iniciaCmei() {
        
        if (cmei == null) {
            cmei = new Cmei();
        }
        
    }
    
    public void iniciaControleCmei() {
        
        if (controleCmei == null) {
            controleCmei = new ControleCmei();
        }
        
    }
    
    public void iniciaControleEscola() {
        
        if (controleEscola == null) {
            controleEscola = new ControleEscola();
        }
        
    }
    
    public void iniciaControleOutro() {
        
        if (controleOutro == null) {
            controleOutro = new ControleOutro();
        }
        
    }
    
    public void iniciaDao() {

        if (dao == null) {
            dao = new DAO();
        }

    }

    public void iniciaEscola() {
        
        if (escola == null) {
            escola = new Escola();
        }
        
    }
    
    public void iniciaOutro() {
        
        if (outro == null) {
            outro = new Outro();
        }
        
    }

}
