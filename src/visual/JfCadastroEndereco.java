/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package visual;

import conexao.Conexao;
import controlador.ClasseGeral;
import controlador.ControleVersao;
import controlador.FixedLengthDocument;
import controlador.Formatos;
import dao.DAO;
import excecoes.ExcCadastro;
import java.awt.Image;
import java.awt.Toolkit;
import java.text.ParseException;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import modelo.Aluno;
import modelo.Cmei;
import modelo.Endereco;
import modelo.Escola;
import modelo.Outro;
import modelo.Permissoes;
import modelo.Usuario;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author luizam
 */
public class JfCadastroEndereco extends javax.swing.JFrame {

    private static ControleVersao versao = new ControleVersao();
    private Aluno aluno = null;
    private Cmei cmei = null;
    private ClasseGeral classeGeral;
    private DAO dao;
    private Endereco endereco;
    private Escola escola = null;
    private Formatos formatos = new Formatos();
    private Outro outro = null;
    private Usuario usuario;
    
    private JasperViewer jViewer;
    private JasperPrint jPrint;
    private JdBuscaEndereco jdbe;

    private int codigo;
    private int codigoAluno = 0;
    private int codigoCmei = 0;
    private int codigoEscola = 0;
    private int codigoOutro = 0;
    private int codigoUsuario;
    private String opcao = "salvar";
    private String enderecoVerificado;
    private boolean cadastrarEndereco;
    
    /**
     * Creates new form jfCadastroEndereco
     */
    public JfCadastroEndereco() {
        super("Cadastro Endereço - " + versao.getVersao() + " - " + versao.getAno());
        initComponents();

        //Altera icone na barra de titulo
        Toolkit kit = Toolkit.getDefaultToolkit();
        Image img = kit.getImage("C:/m2GestaoClinicas/imagens/logom2clinicas.jpg");
        this.setIconImage(img);

        //centraliza tela
        setSize(getWidth(), getHeight());
        setLocationRelativeTo(null);
        
        try {
            jftfCep.setFormatterFactory(formatos.getFormatoCep());
        } catch (ParseException ex) {
            iniciaClasseGeral();
            Logger.getLogger(JfPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            classeGeral.msgErro("Não foi possivel formatar campo CEP, \n Contate o Administrador!");
        }
        
        setNumeroCaracteres();
        
        jtfCidade.setText("CASCAVEL");
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpEnderecoFundo = new javax.swing.JPanel();
        jpBotoes = new javax.swing.JPanel();
        jbSalvar = new javax.swing.JButton();
        jbBuscar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();
        jbAlterar = new javax.swing.JButton();
        jbImprimir = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jcbTipoEndereco = new javax.swing.JComboBox();
        jtfEndereco = new javax.swing.JTextField();
        jtfNumero = new javax.swing.JTextField();
        jftfCep = new javax.swing.JFormattedTextField();
        jtfComplemento = new javax.swing.JTextField();
        jtfCidade = new javax.swing.JTextField();
        jtfBairro = new javax.swing.JTextField();
        jcbUf = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jpEnderecoFundo.setBackground(new java.awt.Color(255, 255, 255));

        jpBotoes.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        jbSalvar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/OK.png"))); // NOI18N
        jbSalvar.setMnemonic('s');
        jbSalvar.setText("Salvar");
        jbSalvar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        jbBuscar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/pesquisar.png"))); // NOI18N
        jbBuscar.setMnemonic('b');
        jbBuscar.setText("Buscar");
        jbBuscar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jbCancelar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cancelar.png"))); // NOI18N
        jbCancelar.setMnemonic('z');
        jbCancelar.setText("Cancelar");
        jbCancelar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jbExcluir.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/delete.png"))); // NOI18N
        jbExcluir.setMnemonic('e');
        jbExcluir.setText("Excluir");
        jbExcluir.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbExcluir.setEnabled(false);
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jbAlterar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/reload.png"))); // NOI18N
        jbAlterar.setMnemonic('a');
        jbAlterar.setText("Alterar");
        jbAlterar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbAlterar.setEnabled(false);
        jbAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlterarActionPerformed(evt);
            }
        });

        jbImprimir.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/imprimir.png"))); // NOI18N
        jbImprimir.setMnemonic('i');
        jbImprimir.setText("Imprimir");
        jbImprimir.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbImprimir.setEnabled(false);
        jbImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbImprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpBotoesLayout = new javax.swing.GroupLayout(jpBotoes);
        jpBotoes.setLayout(jpBotoesLayout);
        jpBotoesLayout.setHorizontalGroup(
            jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpBotoesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jpBotoesLayout.setVerticalGroup(
            jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel1.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Endereço: ");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Número: ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("CEP: ");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Tipo Endereço: ");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Complemento: ");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("UF: ");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Cidade: ");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Bairro: ");

        jcbTipoEndereco.setBackground(new java.awt.Color(204, 204, 255));
        jcbTipoEndereco.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbTipoEndereco.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "RESIDENCIAL", "COMERCIAL", "PÚBLICO" }));
        jcbTipoEndereco.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 255), new java.awt.Color(204, 204, 255), new java.awt.Color(204, 204, 255), new java.awt.Color(204, 204, 255)));

        jtfEndereco.setBackground(new java.awt.Color(204, 204, 255));
        jtfEndereco.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfEndereco.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtfEndereco.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfEnderecoFocusLost(evt);
            }
        });

        jtfNumero.setBackground(new java.awt.Color(204, 204, 255));
        jtfNumero.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfNumero.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtfNumero.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfNumeroFocusLost(evt);
            }
        });

        jftfCep.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jftfCep.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jtfComplemento.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfComplemento.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtfComplemento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfComplementoFocusLost(evt);
            }
        });

        jtfCidade.setBackground(new java.awt.Color(204, 204, 255));
        jtfCidade.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfCidade.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtfCidade.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfCidadeFocusLost(evt);
            }
        });

        jtfBairro.setBackground(new java.awt.Color(204, 204, 255));
        jtfBairro.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfBairro.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtfBairro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfBairroFocusLost(evt);
            }
        });

        jcbUf.setBackground(new java.awt.Color(204, 204, 255));
        jcbUf.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbUf.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AC", "AL", "AP", "AM", "BA", "CE", "DF", "ES", "GO", "MA", "MT", "MS", "MG", "PA", "PB", "PE", "PR", "PI", "RJ", "RN", "RS", "RO", "RR", "SC", "SP", "SE", "TO" }));
        jcbUf.setSelectedIndex(16);
        jcbUf.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 255), new java.awt.Color(204, 204, 255), new java.awt.Color(204, 204, 255), new java.awt.Color(204, 204, 255)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jcbTipoEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jtfEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jftfCep, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jtfComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfBairro))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jtfCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcbUf, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(127, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jcbTipoEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jtfEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jtfComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jtfBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6)
                    .addComponent(jtfCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbUf, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jftfCep, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jpEnderecoFundoLayout = new javax.swing.GroupLayout(jpEnderecoFundo);
        jpEnderecoFundo.setLayout(jpEnderecoFundoLayout);
        jpEnderecoFundoLayout.setHorizontalGroup(
            jpEnderecoFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jpEnderecoFundoLayout.setVerticalGroup(
            jpEnderecoFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpEnderecoFundoLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpEnderecoFundo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpEnderecoFundo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed

        if (jtfBairro.getText().isEmpty() && jtfCidade.getText().isEmpty() && jtfEndereco.getText().isEmpty()
            && jtfNumero.getText().isEmpty()) {

            iniciaClasseGeral();
            classeGeral.msgAtencao("Preencha os campos Obrigatórios em azul!");

        } else {

            if (opcao.equals("salvar")) {

                verificaCadastroEndereco();

                if (!enderecoVerificado.isEmpty()) {
                    iniciaClasseGeral();
                    classeGeral.msgAtencao("Esse Endereço já está Cadastrado!");
                } else {
                    salvar();
                    opcao = "salvar";
                }

            } else if (opcao.equals("alterar")) {

                atualizar();
                opcao = "salvar";

            }

        }
    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed

        if (jdbe == null) {
            jdbe = new JdBuscaEndereco(null, true);
        }

        jdbe.setCodigoAluno(codigoAluno);
        jdbe.setCodigoCmei(codigoCmei);
        jdbe.setCodigoEscola(codigoEscola);
        jdbe.setCodigoOutro(codigoOutro);
        jdbe.setCodigoUsuario(codigoUsuario);

        jdbe.setVisible(true);

        setEnderecoBuscado(jdbe.getEndereco());
        jdbe.setEndereco();
    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        cancelar();
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        excluir();
    }//GEN-LAST:event_jbExcluirActionPerformed

    private void jbAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlterarActionPerformed

        abilitaCampos();

        jbAlterar.setEnabled(false);

        opcao = "alterar";
        
        jbSalvar.setEnabled(true);
        
    }//GEN-LAST:event_jbAlterarActionPerformed

    private void jbImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbImprimirActionPerformed

        //ADOGeral ag = new ADOGeral();
        Conexao conexao = new Conexao();
        HashMap parametros = new HashMap();
        try {
            //System.out.println(codigoRegistro);
            //parametros.put("titulo", "Titulo Relatorio");
            parametros.put("codigoEndereço", new Integer(codigo));
            //parametros.put("codigo", lista.get(0).getNome();
                //ADOGeral.conectar();
                conexao.getConexao();
            } catch (ExcCadastro ex) {
                Logger.getLogger(JfCadastroEndereco.class.getName()).log(Level.SEVERE, null, ex);
            }

            //        JRDataSource jrds = new JRBeanCollectionDataSource(lista);

            try {

                //jReport = JasperCompileManager.compileReport("E:/LUIZ/PROJETOS JAVA/CORPORATIVO/m2GestaoClinicas/FichaPaciente.jrxml");
                //jPrint = JasperFillManager.fillReport("C:/m2GestaoClinicas/FichaPaciente.jasper", parametros, ADOGeral.getConexao());
                jPrint = JasperFillManager.fillReport("Endereço.jasper", parametros, conexao.getConexao());
                //jPrint = JasperFillManager.fillReport(jReport, parametros, jrds);

                //if (!(jViewer == null)) {
                    //jViewer = new JasperViewer(jPrint, false);
                    //jViewer.setExtendedState(JFrame.MAXIMIZED_BOTH);
                    if (jPrint != null) {
                        jViewer.viewReport(jPrint, false);
                        jPrint = null;
                    }
                    //}

            } catch (Exception ex) {
                ex.printStackTrace();
            }
    }//GEN-LAST:event_jbImprimirActionPerformed

    private void jtfEnderecoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfEnderecoFocusLost
        jtfEndereco.setText(jtfEndereco.getText().toUpperCase());
    }//GEN-LAST:event_jtfEnderecoFocusLost

    private void jtfNumeroFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfNumeroFocusLost
        jtfNumero.setText(jtfNumero.getText().toUpperCase());
    }//GEN-LAST:event_jtfNumeroFocusLost

    private void jtfComplementoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfComplementoFocusLost
        jtfComplemento.setText(jtfComplemento.getText().toUpperCase());
    }//GEN-LAST:event_jtfComplementoFocusLost

    private void jtfCidadeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCidadeFocusLost
        jtfCidade.setText(jtfCidade.getText().toUpperCase());
    }//GEN-LAST:event_jtfCidadeFocusLost

    private void jtfBairroFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfBairroFocusLost
        jtfBairro.setText(jtfBairro.getText().toUpperCase());
    }//GEN-LAST:event_jtfBairroFocusLost

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        fechar();
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    //public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        /*try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jfCadastroEndereco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jfCadastroEndereco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jfCadastroEndereco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jfCadastroEndereco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }*/
        //</editor-fold>

        /* Create and display the form */
        /*java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new jfCadastroEndereco().setVisible(true);
            }
        });
    }*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jbAlterar;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbImprimir;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JComboBox jcbTipoEndereco;
    private javax.swing.JComboBox jcbUf;
    private javax.swing.JFormattedTextField jftfCep;
    private javax.swing.JPanel jpBotoes;
    private javax.swing.JPanel jpEnderecoFundo;
    private javax.swing.JTextField jtfBairro;
    private javax.swing.JTextField jtfCidade;
    private javax.swing.JTextField jtfComplemento;
    private javax.swing.JTextField jtfEndereco;
    private javax.swing.JTextField jtfNumero;
    // End of variables declaration//GEN-END:variables

//Outros Metodos ===========================================================================================================================================
    public void fechar() {
        
        if (!jtfBairro.getText().isEmpty() || !jtfComplemento.getText().isEmpty()
                || !jtfEndereco.getText().isEmpty() || !jtfNumero.getText().isEmpty()) {
            iniciaClasseGeral();
            classeGeral.msgAtencao("Salve ou cancele o item em edição!");
        } else {
            codigoAluno = 0;
            codigoCmei = 0;
            codigoEscola = 0;
            codigoOutro = 0;
            this.dispose();
        }
        
    }

    public void cancelar() {

        jtfBairro.setText("");
        jtfCidade.setText("CASCAVEL");
        jtfComplemento.setText("");
        jtfEndereco.setText("");
        jtfNumero.setText("");
        jftfCep.setText("");
        jftfCep.setValue(null);
        jcbTipoEndereco.setSelectedIndex(0);
        jcbUf.setSelectedIndex(16);

        abilitaCampos();

        desabilitaBotoes();

        jtfEndereco.transferFocusBackward();

        opcao = "salvar";
        
    }

    public void abilitaCampos() {

        jtfBairro.setEditable(true);
        jtfCidade.setEditable(true);
        jtfComplemento.setEditable(true);
        jtfEndereco.setEditable(true);
        jtfNumero.setEditable(true);
        jftfCep.setEditable(true);
        jcbTipoEndereco.setEnabled(true);
        jcbUf.setEnabled(true);

    }

    public void desabilitaCampos() {

        jtfBairro.setEditable(false);
        jtfCidade.setEditable(false);
        jtfComplemento.setEditable(false);
        jtfEndereco.setEditable(false);
        jtfNumero.setEditable(false);
        jftfCep.setEditable(false);
        jcbTipoEndereco.setEnabled(false);
        jcbUf.setEnabled(false);

    }

    public void abilitaBotoes() {

        jbCancelar.setEnabled(true);
        jbBuscar.setEnabled(true);
        jbImprimir.setEnabled(true);

        if (cadastrarEndereco == true) {
            jbSalvar.setEnabled(false);
            jbExcluir.setEnabled(true);
            jbAlterar.setEnabled(true);
        } else {
            jbSalvar.setEnabled(false);
            jbExcluir.setEnabled(false);
            jbAlterar.setEnabled(false);
        }

    }

    public void desabilitaBotoes() {

        jbCancelar.setEnabled(true);
        jbBuscar.setEnabled(true);
        jbImprimir.setEnabled(false);

        if (cadastrarEndereco == true) {
            jbSalvar.setEnabled(true);
            jbExcluir.setEnabled(false);
            jbAlterar.setEnabled(false);
        } else {
            jbSalvar.setEnabled(false);
            jbExcluir.setEnabled(false);
            jbAlterar.setEnabled(false);
        }

    }

//Geradores, Validadores===========================================================================================================================================
    public void iniciaAluno() {
        
        if (aluno == null) {
            aluno = new Aluno();
        }
        
    }
    
    public void iniciaCmei() {
        
        if (cmei == null) {
            cmei = new Cmei();
        }
        
    }
    
    public void iniciaDao() {
        
        if (dao == null) {
            dao = new DAO();
        }
        
    }
    
    public void iniciaEscola() {
        
        if (escola == null) {
            escola = new Escola();
        }
        
    }
    
    public void iniciaEndereco() {
        
        if (endereco == null) {
            endereco = new Endereco();
        }
        
    }
    
    public void iniciaClasseGeral() {
        
        if (classeGeral == null) {
            classeGeral = new ClasseGeral();
        }
        
    }
    
    public void iniciaFormatadorCampos() {

        if (formatos == null) {
            formatos = new Formatos();
        }

    }
    
    public void iniciaOutro() {
        
        if (outro == null) {
            outro = new Outro();
        }
        
    }
    
    public void verificaCadastroEndereco() {

        DAO dao = new DAO();

        enderecoVerificado = dao.verificarCadastroEndereco(codigoAluno, codigoCmei, codigoEscola, codigoOutro, jcbTipoEndereco.getSelectedItem().toString(), jtfEndereco.getText(), jtfNumero.getText(), jftfCep.getText(), jtfCidade.getText(), jcbUf.getSelectedItem().toString(), jtfBairro.getText());

    }
    
//Getters and Setters===========================================================================================================================================
    public void setNumeroCaracteres() {

        jtfBairro.setDocument(new FixedLengthDocument(120));
        jtfCidade.setDocument(new FixedLengthDocument(240));
        jtfComplemento.setDocument(new FixedLengthDocument(60));
        jtfEndereco.setDocument(new FixedLengthDocument(240));
        jtfNumero.setDocument(new FixedLengthDocument(10));

    }
    
    public void getPermissoes() {
        Permissoes permissoes;
        iniciaDao();

        permissoes = (Permissoes) dao.buscaPermissoes(codigoUsuario);

        cadastrarEndereco = permissoes.isCadastrarEndereco();
    }

    public int getCodigoAluno() {
        return codigoAluno;
    }

    public void setCodigoAluno(int codigoAluno) {
        iniciaDao();
        iniciaAluno();
        aluno = (Aluno) dao.busca(aluno, codigoAluno);
        dao.encerraSessao();
        this.codigoAluno = codigoAluno;
    }

    public int getCodigoCmei() {
        return codigoCmei;
    }

    public void setCodigoCmei(int codigoCmei) {
        iniciaDao();
        iniciaCmei();
        cmei = (Cmei) dao.busca(cmei, codigoCmei);
        dao.encerraSessao();
        this.codigoCmei = codigoCmei;
    }

    public int getCodigoEscola() {
        return codigoEscola;
    }

    public void setCodigoEscola(int codigoEscola) {
        iniciaDao();
        iniciaEscola();
        escola = (Escola) dao.busca(escola, codigoEscola);
        dao.encerraSessao();
        this.codigoEscola = codigoEscola;
    }

    public int getCodigoOutro() {
        return codigoOutro;
    }

    public void setCodigoOutro(int codigoOutro) {
        iniciaDao();
        iniciaOutro();
        outro = (Outro) dao.busca(outro, codigoOutro);
        dao.encerraSessao();
        this.codigoOutro = codigoOutro;
    }

    public int getCodigoUsuario() {
        return codigoUsuario;
    }

    public void setCodigoUsuario(int codigoUsuario) {
        this.codigoUsuario = codigoUsuario;
        getPermissoes();
        desabilitaBotoes();
    }
    
    public void setEnderecoBuscado(Endereco enderecoBuscado) {

        if (enderecoBuscado == null) {
        } else {
            iniciaDao();
            iniciaAluno();
            iniciaCmei();
            iniciaEndereco();
            iniciaEscola();
            iniciaOutro();

            jtfBairro.setText(enderecoBuscado.getBairro());
            jtfCidade.setText(enderecoBuscado.getCidade());
            jtfComplemento.setText(enderecoBuscado.getComplemento());
            jtfEndereco.setText(enderecoBuscado.getEndereco());
            jtfNumero.setText(enderecoBuscado.getNumeroEndereco());
            jftfCep.setText(enderecoBuscado.getCep());
            jcbTipoEndereco.setSelectedItem(enderecoBuscado.getTipoEndereco());
            jcbUf.setSelectedItem(enderecoBuscado.getUf());
            
            if (enderecoBuscado.getTipoCadastro().equals("ALUNO")) {
                
            } else if (enderecoBuscado.getTipoCadastro().equals("CMEI")) {
                
            } else if (enderecoBuscado.getTipoCadastro().equals("ESCOLA")) {
                
            } else if (enderecoBuscado.getTipoCadastro().equals("OUTRO")) {
                
            }
            
            codigo = enderecoBuscado.getCodigoEndereco();
            endereco = enderecoBuscado;
            endereco.setCodigoEndereco(codigo);

            desabilitaCampos();

            abilitaBotoes();

        }

    }

//Metodos DAO===========================================================================================================================================
    public void salvar() {

        iniciaDao();
        iniciaEndereco();

        if (codigoAluno != 0) {
            
            iniciaAluno();
            
            endereco.setTipoCadastro("ALUNO");
            aluno = (Aluno) dao.busca(aluno, codigoAluno);
            dao.encerraSessao();
            endereco.setAluno(aluno);
            
        } else if (codigoCmei != 0) {
            
            iniciaCmei();
            
            endereco.setTipoCadastro("CMEI");
            cmei = (Cmei) dao.busca(cmei, codigoCmei);
            dao.encerraSessao();
            endereco.setCmei(cmei);
            
        } else if (codigoEscola != 0) {
            
            iniciaEscola();
            
            endereco.setTipoCadastro("ESCOLA");
            escola = (Escola) dao.busca(escola, codigoEscola);
            dao.encerraSessao();
            endereco.setEscola(escola);
            
        } else if (codigoOutro != 0) {
            
            iniciaOutro();
            
            endereco.setTipoCadastro("OUTRO");
            outro = (Outro) dao.busca(outro, codigoOutro);
            dao.encerraSessao();
            endereco.setOutro(outro);
            
        }
        
        endereco.setBairro(jtfBairro.getText());
        endereco.setCep(jftfCep.getText());
        endereco.setCidade(jtfCidade.getText());
        endereco.setComplemento(jtfComplemento.getText());
        endereco.setEndereco(jtfEndereco.getText());
        endereco.setNumeroEndereco(jtfNumero.getText());
        endereco.setTipoEndereco(jcbTipoEndereco.getSelectedItem().toString());
        endereco.setUf(jcbUf.getSelectedItem().toString());
        
        dao.inserir(endereco, 7, codigoUsuario);
        cancelar();

    }

    public void atualizar() {

        iniciaDao();
        iniciaEndereco();

        if (codigoAluno != 0) {
            
            iniciaAluno();
            
            endereco.setTipoCadastro("ALUNO");
            aluno = (Aluno) dao.busca(aluno, codigoAluno);
            endereco.setAluno(aluno);
            
        } else if (codigoCmei != 0) {
            
            iniciaCmei();
            
            endereco.setTipoCadastro("CMEI");
            cmei = (Cmei) dao.busca(cmei, codigoCmei);
            dao.encerraSessao();
            endereco.setCmei(cmei);
            
        } else if (codigoEscola != 0) {
            
            iniciaEscola();
            
            endereco.setTipoCadastro("ESCOLA");
            escola = (Escola) dao.busca(escola, codigoEscola);
            dao.encerraSessao();
            endereco.setEscola(escola);
            
        } else if (codigoOutro != 0) {
            
            iniciaOutro();
            
            endereco.setTipoCadastro("OUTRO");
            outro = (Outro) dao.busca(outro, codigoOutro);
            dao.encerraSessao();
            endereco.setOutro(outro);
            
        }
        
        endereco.setBairro(jtfBairro.getText());
        endereco.setCep(jftfCep.getText());
        endereco.setCidade(jtfCidade.getText());
        endereco.setComplemento(jtfComplemento.getText());
        endereco.setEndereco(jtfEndereco.getText());
        endereco.setNumeroEndereco(jtfNumero.getText());
        endereco.setTipoEndereco(jcbTipoEndereco.getSelectedItem().toString());
        endereco.setUf(jcbUf.getSelectedItem().toString());

        dao.atualizar(endereco, 7, codigoUsuario);
        cancelar();

    }

    public void excluir() {

        iniciaClasseGeral();
        iniciaEndereco();

        if (classeGeral.msgConfirma("Deseja excluir o Endereço?")) {

            iniciaDao();
            dao.excluir(endereco, codigoUsuario);
            cancelar();

        }

    }

}
