/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * jfAgendamento.java
 *
 * 
 *
 * Created on 27/01/2010, 09:03:31
 */
package visual;

import controlador.*;
import dao.DAO;
import excecoes.MensagensExcessao;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.IOException;
import java.text.DateFormat;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import modelo.Permissoes;
import modelo.Resolucao;
import modelo.Usuario;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author luiz
 */
public class JfResolucao extends javax.swing.JFrame implements Runnable {

    private static ControleVersao versao = new ControleVersao();
    private ClasseGeral classeGeral;
    private ControleUsuario controleUsuario;
    private DAO dao;
    private Log geraLog;
    private MensagensExcessao except;
    private Resolucao resolucao;
    private Thread threadAtualizaNumeroResolucoes = new Thread(this);
    private Usuario usuario;

    private JasperPrint jPrint;
    private JasperViewer jViewer;
    private JdBuscaResolucao jdbr;

    private int codigo = 0;
    private int codigoUsuario;
    private String modeloResolucao = "RESOLUCAO";
    private final String TIPORESOLUCAO = "GERAL";
    private String opcao = "salvar";
    private String resolucaoVerificada;
    private boolean gerarNumeracao;

    /** Creates new form jfAgendamento */
    public JfResolucao() {
        super("Resolução - " + versao.getVersao() + " - " + versao.getAno());
        initComponents();

        //Altera icone na barra de titulo
        Toolkit kit = Toolkit.getDefaultToolkit();
        Image img = kit.getImage("C:/SURGI/imagens/SURGI32x32.png");
        this.setIconImage(img);

        //maximiza tela
        //this.setExtendedState(MAXIMIZED_BOTH);

        //centraliza tela
        setSize(getWidth(), getHeight());
        setLocationRelativeTo(null);

        jlbAnoResolucao.setText(getAno());
        jDateChooserSolicitacao.setDate(getDateHoje());
        jrbResolucao.setSelected(true);

        threadAtualizaNumeroResolucoes.start();

        preencheNumeroResolucao();
        bloqueiaCampos();

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgTipoOficio = new javax.swing.ButtonGroup();
        jpResolucao = new javax.swing.JPanel();
        jlbAnoResolucao = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jrbResolucao = new javax.swing.JRadioButton();
        jDateChooserSolicitacao = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        jtfUsuario = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jtfNumeroResolucao = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtfAssuntoResolucao = new javax.swing.JTextField();
        jtfDestinatarioResolucao = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jtfDepartamentoDestinatarioResolucao = new javax.swing.JTextField();
        jpBotoes = new javax.swing.JPanel();
        jbNovo = new javax.swing.JButton();
        jbSalvar = new javax.swing.JButton();
        jbBuscar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();
        jbAlterar = new javax.swing.JButton();
        jbImprimir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jpResolucao.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        jlbAnoResolucao.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jlbAnoResolucao.setText("Ano Resolução");
        jlbAnoResolucao.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Tipo: ");

        jLabel2.setText("Data Solicitação: ");

        btgTipoOficio.add(jrbResolucao);
        jrbResolucao.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbResolucao.setSelected(true);
        jrbResolucao.setText("Resolução");
        jrbResolucao.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jrbResolucao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbResolucaoActionPerformed(evt);
            }
        });

        jDateChooserSolicitacao.setBackground(new java.awt.Color(204, 204, 255));
        jDateChooserSolicitacao.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(204, 204, 255), new java.awt.Color(204, 204, 255), null, new java.awt.Color(204, 204, 255)));
        jDateChooserSolicitacao.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Usuário: ");

        jtfUsuario.setBackground(new java.awt.Color(204, 204, 255));
        jtfUsuario.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfUsuario.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Número: ");

        jtfNumeroResolucao.setBackground(new java.awt.Color(204, 204, 255));
        jtfNumeroResolucao.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfNumeroResolucao.setText("1");
        jtfNumeroResolucao.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Assunto: ");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Destinatário: ");

        jtfAssuntoResolucao.setBackground(new java.awt.Color(204, 204, 255));
        jtfAssuntoResolucao.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfAssuntoResolucao.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtfAssuntoResolucao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfAssuntoResolucaoFocusLost(evt);
            }
        });

        jtfDestinatarioResolucao.setBackground(new java.awt.Color(204, 204, 255));
        jtfDestinatarioResolucao.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfDestinatarioResolucao.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtfDestinatarioResolucao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfDestinatarioResolucaoFocusLost(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Departamento Destinatário: ");

        jtfDepartamentoDestinatarioResolucao.setBackground(new java.awt.Color(204, 204, 255));
        jtfDepartamentoDestinatarioResolucao.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfDepartamentoDestinatarioResolucao.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtfDepartamentoDestinatarioResolucao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfDepartamentoDestinatarioResolucaoFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jpResolucaoLayout = new javax.swing.GroupLayout(jpResolucao);
        jpResolucao.setLayout(jpResolucaoLayout);
        jpResolucaoLayout.setHorizontalGroup(
            jpResolucaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpResolucaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpResolucaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpResolucaoLayout.createSequentialGroup()
                        .addGroup(jpResolucaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpResolucaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jrbResolucao)
                            .addGroup(jpResolucaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jtfDepartamentoDestinatarioResolucao)
                                .addComponent(jtfDestinatarioResolucao)
                                .addComponent(jtfAssuntoResolucao, javax.swing.GroupLayout.DEFAULT_SIZE, 603, Short.MAX_VALUE)
                                .addComponent(jtfNumeroResolucao, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jpResolucaoLayout.createSequentialGroup()
                                    .addComponent(jtfUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jDateChooserSolicitacao, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(jlbAnoResolucao))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpResolucaoLayout.setVerticalGroup(
            jpResolucaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpResolucaoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlbAnoResolucao)
                .addGap(33, 33, 33)
                .addGroup(jpResolucaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jrbResolucao))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpResolucaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpResolucaoLayout.createSequentialGroup()
                        .addGroup(jpResolucaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jtfUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpResolucaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jtfNumeroResolucao, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jDateChooserSolicitacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpResolucaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtfAssuntoResolucao, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpResolucaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtfDestinatarioResolucao, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpResolucaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jtfDepartamentoDestinatarioResolucao, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(258, Short.MAX_VALUE))
        );

        jpBotoes.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        jbNovo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/novo.png"))); // NOI18N
        jbNovo.setText("Novo");
        jbNovo.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbNovo.setEnabled(false);
        jbNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovoActionPerformed(evt);
            }
        });

        jbSalvar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/OK.png"))); // NOI18N
        jbSalvar.setText("Salvar");
        jbSalvar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        jbBuscar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/pesquisar.png"))); // NOI18N
        jbBuscar.setText("Buscar");
        jbBuscar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jbCancelar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cancelar.png"))); // NOI18N
        jbCancelar.setText("Cancelar");
        jbCancelar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jbExcluir.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/delete.png"))); // NOI18N
        jbExcluir.setText("Excluir");
        jbExcluir.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbExcluir.setEnabled(false);
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jbAlterar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/reload.png"))); // NOI18N
        jbAlterar.setText("Alterar");
        jbAlterar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbAlterar.setEnabled(false);
        jbAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlterarActionPerformed(evt);
            }
        });

        jbImprimir.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/imprimir.png"))); // NOI18N
        jbImprimir.setText("Imprimir");
        jbImprimir.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbImprimir.setEnabled(false);
        jbImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbImprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpBotoesLayout = new javax.swing.GroupLayout(jpBotoes);
        jpBotoes.setLayout(jpBotoesLayout);
        jpBotoesLayout.setHorizontalGroup(
            jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpBotoesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jpBotoesLayout.setVerticalGroup(
            jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpResolucao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jpBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jpResolucao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        fechar();
    }//GEN-LAST:event_formWindowClosing

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed

        if (jdbr == null) {
            jdbr = new JdBuscaResolucao(null, true);
        }

        jdbr.setCodigoUsuario(codigoUsuario);
        jdbr.setVisible(true);

        setResolucaoBuscada(jdbr.getResolucao());
        jdbr.setResolucao();

    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jbNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovoActionPerformed
        cancelar();
    }//GEN-LAST:event_jbNovoActionPerformed

    private void jbAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlterarActionPerformed

        abilitaCampos();

        jbAlterar.setEnabled(false);

        opcao = "alterar";

        jbSalvar.setEnabled(true);

    }//GEN-LAST:event_jbAlterarActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        cancelar();
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed

        if (jtfUsuario.getText().isEmpty() || jtfAssuntoResolucao.getText().isEmpty() || jtfDestinatarioResolucao.getText().isEmpty() || jtfDepartamentoDestinatarioResolucao.getText().isEmpty()) {

            JOptionPane.showMessageDialog(null, "Preencha os campos 'Assunto', 'Destinatário' e 'Departamento'!", "Atenção", JOptionPane.WARNING_MESSAGE, null);

        } else {

            if (opcao.equals("salvar")) {

                verificaNumeroResolucao();
                    
                if (!resolucaoVerificada.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Esse Número já foi cadastrado! \n Cancele o Documento para gerar outro Número!", "Atenção", JOptionPane.WARNING_MESSAGE, null);
                } else {
                        
                    salvar();
                    opcao = "salvar";
                        
                }

            } else if (opcao.equals("alterar")) {

                atualizar();
                opcao = "salvar";

            }

        }

    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        excluir();
    }//GEN-LAST:event_jbExcluirActionPerformed

    private void jrbResolucaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbResolucaoActionPerformed

        if (jrbResolucao.isSelected() == true) {
            modeloResolucao = "RESOLUCAO";
            preencheNumeroResolucao();
        }

}//GEN-LAST:event_jrbResolucaoActionPerformed

    private void jbImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbImprimirActionPerformed

        JOptionPane.showMessageDialog(null, "Atenção, Opção de Impressão ainda não disponivel!", "Atenção", JOptionPane.WARNING_MESSAGE, null);

    }//GEN-LAST:event_jbImprimirActionPerformed

    private void jtfAssuntoResolucaoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfAssuntoResolucaoFocusLost
        jtfAssuntoResolucao.setText(jtfAssuntoResolucao.getText().toUpperCase());
    }//GEN-LAST:event_jtfAssuntoResolucaoFocusLost

    private void jtfDestinatarioResolucaoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfDestinatarioResolucaoFocusLost
        jtfDestinatarioResolucao.setText(jtfDestinatarioResolucao.getText().toUpperCase());
    }//GEN-LAST:event_jtfDestinatarioResolucaoFocusLost

private void jtfDepartamentoDestinatarioResolucaoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfDepartamentoDestinatarioResolucaoFocusLost
    jtfDepartamentoDestinatarioResolucao.setText(jtfDepartamentoDestinatarioResolucao.getText().toUpperCase());
}//GEN-LAST:event_jtfDepartamentoDestinatarioResolucaoFocusLost
    /**
     * @param args the command line arguments
     */
    /*public static void main(String args[]) {
    java.awt.EventQueue.invokeLater(new Runnable() {
    public void run() {
    new jfAgendamento().setVisible(true);
    }
    });
    }*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgTipoOficio;
    private com.toedter.calendar.JDateChooser jDateChooserSolicitacao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JButton jbAlterar;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbImprimir;
    private javax.swing.JButton jbNovo;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JLabel jlbAnoResolucao;
    private javax.swing.JPanel jpBotoes;
    private javax.swing.JPanel jpResolucao;
    private javax.swing.JRadioButton jrbResolucao;
    private javax.swing.JTextField jtfAssuntoResolucao;
    private javax.swing.JTextField jtfDepartamentoDestinatarioResolucao;
    private javax.swing.JTextField jtfDestinatarioResolucao;
    private javax.swing.JTextField jtfNumeroResolucao;
    private javax.swing.JTextField jtfUsuario;
    // End of variables declaration//GEN-END:variables

//Outros Metodos ===========================================================================================================================================
    public void fechar() {

        /*if (!jtfUsuario.getText().equals(nomeUsuario) || !jtfNumeroOficio.getText().equals("0")) {

        JOptionPane.showMessageDialog(null, "Cancele ou Salve o Agendamento em Edição!", "Atenção", JOptionPane.WARNING_MESSAGE, null);

        } else {*/
        dao = null;
        this.dispose();
        //}
    }

    public void cancelar() {

        iniciaControleUsuario();
        
        resolucao.setAno("");
        resolucao.setDataSolicitacao(null);
        resolucao.setModeloResolucao("");
        resolucao.setUsuario(null);

        modeloResolucao = "RESOLUCAO";
        jtfUsuario.setText(controleUsuario.getNomeUsuario(codigoUsuario));
        jrbResolucao.setSelected(true);
        preencheNumeroResolucao();
        jDateChooserSolicitacao.setDate(getDateHoje());
        jtfAssuntoResolucao.setText("");
        jtfDestinatarioResolucao.setText("");
        jtfDepartamentoDestinatarioResolucao.setText("");

        abilitaCampos();

        desabilitaBotoes();

        opcao = "salvar";
        codigo = 0;

    }

    public void abilitaCampos() {

        jrbResolucao.setEnabled(true);
        jDateChooserSolicitacao.setEnabled(true);
        jtfAssuntoResolucao.setEditable(true);
        jtfDestinatarioResolucao.setEditable(true);
        jtfDepartamentoDestinatarioResolucao.setEditable(true);

    }

    public void desabilitaCampos() {

        jrbResolucao.setEnabled(false);
        jDateChooserSolicitacao.setEnabled(false);
        jtfAssuntoResolucao.setEditable(false);
        jtfDestinatarioResolucao.setEditable(false);
        jtfDepartamentoDestinatarioResolucao.setEditable(false);

    }

    public void bloqueiaCampos() {

        jtfUsuario.setEditable(false);
        jtfNumeroResolucao.setEditable(false);
    }

    public void abilitaBotoes() {

        jbNovo.setEnabled(true);
        jbCancelar.setEnabled(true);
        jbBuscar.setEnabled(true);
        jbImprimir.setEnabled(true);

        if (gerarNumeracao == true) {
            jbSalvar.setEnabled(false);
            jbExcluir.setEnabled(true);
            jbAlterar.setEnabled(true);
        } else {
            jbSalvar.setEnabled(false);
            jbExcluir.setEnabled(false);
            jbAlterar.setEnabled(false);
        }

    }

    public void desabilitaBotoes() {

        jbNovo.setEnabled(false);
        jbCancelar.setEnabled(true);
        jbBuscar.setEnabled(true);
        jbImprimir.setEnabled(false);

        if (gerarNumeracao == true) {
            jbSalvar.setEnabled(true);
            jbExcluir.setEnabled(false);
            jbAlterar.setEnabled(false);
        } else {
            jbSalvar.setEnabled(false);
            jbExcluir.setEnabled(false);
            jbAlterar.setEnabled(false);
        }

    }

    public void preencheNumeroResolucao() {

        iniciaDao();
        //DAO dao = new DAO();

        jtfNumeroResolucao.setText("" + dao.getNumeroResolucao(modeloResolucao, versao.getAno(), TIPORESOLUCAO));

    }

    public void run() {

        for (int i = 0; i == 0; i = 0) {
            try {
                //atualizaNumeroOficio();
                if (opcao.equals("salvar")) {
                    preencheNumeroResolucao();
                }

                threadAtualizaNumeroResolucoes.sleep(10000);

                //this.finalize();
            } catch (Throwable ex) {
                //Logger.getLogger(AtualizaNumeroOficios.class.getName()).log(Level.SEVERE, null, ex);
                except.setMensagemErro("Não foi possivel atualizar o numero de Oficio/ Oficio Circular ou CI");
            }
        }

    }

//Geradores, Validadores===========================================================================================================================================
    public void iniciaClasseGeral() {
    
        if (classeGeral == null) {
            classeGeral = new ClasseGeral();
        }
        
    }
    
    public void iniciaControleUsuario() {
        
        if (controleUsuario == null) {
            controleUsuario = new ControleUsuario();
        }
        
    }
    
    public void iniciaDao() {

        if (dao == null) {
            dao = new DAO();
        }

    }
    
    public void iniciaLog() {
        
        if (geraLog == null) {
            geraLog = new Log();
        }
        
    }
    
    public void iniciaResolucao() {
        
        if (resolucao == null) {
            resolucao = new Resolucao();
        }
        
    }
    
    public void iniciaUsuario() {
        
        if (usuario == null) {
            usuario = new Usuario();
        }
        
    }
    
    public void verificaNumeroResolucao() {

        iniciaDao();

        resolucaoVerificada = dao.verificarResolucao(modeloResolucao, Integer.valueOf(jtfNumeroResolucao.getText()), TIPORESOLUCAO, versao.getAno());

    }

//Getters and Setters===========================================================================================================================================
    public Date getDateHoje() {

        GregorianCalendar calendar = new GregorianCalendar();
        Date data = calendar.getTime();

        return data;

    }

    public String getAno() {

        return "Ano de " + versao.getAno();

    }

    public void setNumeroCaracteres() {
        jtfAssuntoResolucao.setDocument(new FixedLengthDocument(240));
        jtfDestinatarioResolucao.setDocument(new FixedLengthDocument(120));
        jtfDepartamentoDestinatarioResolucao.setDocument(new FixedLengthDocument(120));
    }

    public void setResolucaoBuscada(Resolucao resolucaoBuscada) {

        if (resolucaoBuscada == null) {
        } else {

            if (resolucaoBuscada.getModeloResolucao().equals("RESOLUCAO")) {
                jrbResolucao.setSelected(true);
                preencheNumeroResolucao();
            } 

            iniciaUsuario();
            
            usuario = (Usuario) resolucaoBuscada.getUsuario();
            
            System.out.println(resolucaoBuscada.getUsuario());
            jtfUsuario.setText(usuario.getNomeUsuario());
            jtfNumeroResolucao.setText("" + resolucaoBuscada.getNumero());
            jDateChooserSolicitacao.setDate(resolucaoBuscada.getDataSolicitacao());
            jtfAssuntoResolucao.setText(resolucaoBuscada.getAssuntoResolucao());
            jtfDestinatarioResolucao.setText(resolucaoBuscada.getDestinatarioResolucao());
            jtfDepartamentoDestinatarioResolucao.setText(resolucaoBuscada.getDepartamentoDestinatario());

            codigo = resolucaoBuscada.getCodigoResolucao();//para testar comando excluir
            resolucao = resolucaoBuscada;
            resolucao.setCodigoResolucao(codigo);

            opcao = "alterar";

            desabilitaCampos();

            abilitaBotoes();

        }
    }

    public int getCodigoUsuario() {
        return codigoUsuario;
    }

    public void setCodigoUsuario(int codigoUsuario) {
        iniciaControleUsuario();
        jtfUsuario.setText(controleUsuario.getNomeUsuario(codigoUsuario));
        this.codigoUsuario = codigoUsuario;
        getPermissoes();
        desabilitaBotoes();
        setNumeroCaracteres();
    }

    public void getPermissoes() {
        Permissoes permissoes;
        iniciaDao();

        permissoes = (Permissoes) dao.buscaPermissoes(codigoUsuario);

        gerarNumeracao = permissoes.isGerarNumeracaoResolucoes();
    }

//Metodos DAO===========================================================================================================================================
    public void salvar() {

        if (!jtfUsuario.getText().isEmpty() && !jtfNumeroResolucao.getText().isEmpty() && jDateChooserSolicitacao.getDate() != null) {

            iniciaDao();
            iniciaResolucao();
            iniciaUsuario();
            DateFormat df = DateFormat.getDateInstance();
            //int codigoAgend = dao.getCodigoAgendamento();
            
            resolucao.setAno(versao.getAno());
            resolucao.setDataSolicitacao(jDateChooserSolicitacao.getDate());
            resolucao.setNumero(Integer.parseInt(jtfNumeroResolucao.getText()));
            
            usuario = (Usuario) dao.buscaUsuario(0, jtfUsuario.getText(), "");
            resolucao.setUsuario(usuario);
            
            resolucao.setTipoResolucao(TIPORESOLUCAO);
            resolucao.setAssuntoResolucao(jtfAssuntoResolucao.getText());
            resolucao.setDepartamentoDestinatario(jtfDepartamentoDestinatarioResolucao.getText());
            
            resolucao.setDestinatarioResolucao(jtfDestinatarioResolucao.getText());
            
            usuario = null;
            
            if (jrbResolucao.isSelected() == true) {
                resolucao.setModeloResolucao(modeloResolucao);
            } 

            try {
                iniciaLog();
                geraLog.criaLog(codigoUsuario, "Resolução", "Tentou Salvar Nº: " + jtfNumeroResolucao.getText() + " Assunto: " + jtfAssuntoResolucao.getText() + " Destinatário: " + jtfDestinatarioResolucao.getText());
            } catch (IOException ex) {
                Logger.getLogger(JfPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            dao.inserir(resolucao, 7, codigoUsuario);
            cancelar();

        } else {
            JOptionPane.showMessageDialog(null, "Complete os Campos Obrigatórios, destacados em Azul!", "Atenção", JOptionPane.WARNING_MESSAGE, null);
        }

    }

    public void atualizar() {

        if (!jtfUsuario.getText().isEmpty() && !jtfNumeroResolucao.getText().isEmpty() && jDateChooserSolicitacao.getDate() != null) {

            iniciaDao();
            iniciaResolucao();
            iniciaUsuario();
            DateFormat df = DateFormat.getDateInstance();
            //int codigoAgend = dao.getCodigoAgendamento();

            resolucao.setAno(versao.getAno());
            resolucao.setDataSolicitacao(jDateChooserSolicitacao.getDate());
            resolucao.setNumero(Integer.parseInt(jtfNumeroResolucao.getText()));

            usuario = (Usuario) dao.buscaUsuario(0, jtfUsuario.getText(), "");
            resolucao.setUsuario(usuario);
            
            resolucao.setTipoResolucao(TIPORESOLUCAO);
            resolucao.setAssuntoResolucao(jtfAssuntoResolucao.getText());
            resolucao.setDepartamentoDestinatario(jtfDepartamentoDestinatarioResolucao.getText());
            
            resolucao.setDestinatarioResolucao(jtfDestinatarioResolucao.getText());
            if (jrbResolucao.isSelected() == true) {
                resolucao.setModeloResolucao(modeloResolucao);
            }

            try {
                iniciaLog();
                geraLog.criaLog(codigoUsuario, "Resolução", "Tentou Alterar Nº: " + jtfNumeroResolucao.getText() + " Assunto: " + jtfAssuntoResolucao.getText() + " Destinatário: " + jtfDestinatarioResolucao.getText());
            } catch (IOException ex) {
                Logger.getLogger(JfPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            dao.atualizar(resolucao, 7, codigoUsuario);
            cancelar();

        } else {
            JOptionPane.showMessageDialog(null, "Complete os Campos Obrigatórios, destacados em Azul!", "Atenção", JOptionPane.WARNING_MESSAGE, null);
        }

    }

    public void excluir() {

        iniciaClasseGeral();
        
        if (classeGeral.msgConfirma("Deseja excluir a Resolução?")) {

            iniciaDao();
            iniciaResolucao();
            
            try {
                iniciaLog();
                geraLog.criaLog(codigoUsuario, "Resolução", "Tentou Excluir Nº: " + jtfNumeroResolucao.getText() + " Assunto: " + jtfAssuntoResolucao.getText() + " Destinatário: " + jtfDestinatarioResolucao.getText());
            } catch (IOException ex) {
                Logger.getLogger(JfPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            dao.excluir(resolucao, codigoUsuario);
            cancelar();

        }

    }
}
