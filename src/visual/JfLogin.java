/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * jfImpressosAgendamento.java
 *
 * Created on 03/03/2010, 20:23:35
 */
package visual;

import controlador.*;
import dao.DAO;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import modelo.ContraSenha;
import modelo.Usuario;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author luizam
 */
public class JfLogin extends javax.swing.JFrame {

    private static ControleVersao versao = new ControleVersao();
    private AbreSurgi abreSurgi;
    private AtualizaSurgi atualizaSurgi = new AtualizaSurgi();
    private ControleUsuario controleUsuario;
    private DAO dao;
    private Log geraLog;
    private Usuario usuario;
    
    private Thread threadAtualizaSoftware = new Thread(atualizaSurgi);
    private JfPrincipal jfPrincipal;
    private JfAjuda jfAjud;
    
    private JasperPrint jPrint;
    private JasperViewer jViewer;
    
    private String tipoStatus;
    boolean avancar;//para avançar para tela principal

    /**
     * Creates new form jfImpressosAgendamento
     */
    public JfLogin() {
        super("Login SURGI - Sistema Unificado para Registro e Gerenciamento de Informações - " + versao.getVersao() + " - " + versao.getAno());
        initComponents();

        this.setResizable(false);

        //Altera icone na barra de titulo
        Toolkit kit = Toolkit.getDefaultToolkit();
        Image img = kit.getImage("C:/SURGI/imagens/SURGI32x32.png");
        this.setIconImage(img);

        //centraliza tela
        setSize(getWidth(), getHeight());
        setLocationRelativeTo(null);
        setVisible(true);

        preencheComboUsuarios();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpLogin = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jpswdSenha = new javax.swing.JPasswordField();
        jcbNomeUsuario = new javax.swing.JComboBox();
        jpBotoes = new javax.swing.JPanel();
        jbEntrar = new javax.swing.JButton();
        jbLimpar = new javax.swing.JButton();
        jbFechar = new javax.swing.JButton();
        jbAjuda = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jpLogin.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Usuário: ");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Senha: ");

        jpswdSenha.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jpswdSenha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jpswdSenhaKeyPressed(evt);
            }
        });

        jcbNomeUsuario.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbNomeUsuario.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jpLoginLayout = new javax.swing.GroupLayout(jpLogin);
        jpLogin.setLayout(jpLoginLayout);
        jpLoginLayout.setHorizontalGroup(
            jpLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpLoginLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(jpLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jcbNomeUsuario, 0, 501, Short.MAX_VALUE)
                    .addComponent(jpswdSenha))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpLoginLayout.setVerticalGroup(
            jpLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpLoginLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jpLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jcbNomeUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jpswdSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        jpBotoes.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        jbEntrar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbEntrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/entrar.png"))); // NOI18N
        jbEntrar.setText("Entrar");
        jbEntrar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbEntrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEntrarActionPerformed(evt);
            }
        });

        jbLimpar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/limpar.png"))); // NOI18N
        jbLimpar.setText("Limpar");
        jbLimpar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimparActionPerformed(evt);
            }
        });

        jbFechar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbFechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Sair.png"))); // NOI18N
        jbFechar.setText("Sair");
        jbFechar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbFecharActionPerformed(evt);
            }
        });

        jbAjuda.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbAjuda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/ajuda03.png"))); // NOI18N
        jbAjuda.setText("Ajuda");
        jbAjuda.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbAjuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAjudaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpBotoesLayout = new javax.swing.GroupLayout(jpBotoes);
        jpBotoes.setLayout(jpBotoesLayout);
        jpBotoesLayout.setHorizontalGroup(
            jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpBotoesLayout.createSequentialGroup()
                .addContainerGap(211, Short.MAX_VALUE)
                .addComponent(jbAjuda, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbEntrar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );
        jpBotoesLayout.setVerticalGroup(
            jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbEntrar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbAjuda, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jpBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jpLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimparActionPerformed

        limparCampos();

    }//GEN-LAST:event_jbLimparActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        fechar();
    }//GEN-LAST:event_formWindowClosing

    private void jbEntrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEntrarActionPerformed
        entrar();
}//GEN-LAST:event_jbEntrarActionPerformed

    private void jbFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbFecharActionPerformed
        fechar();
    }//GEN-LAST:event_jbFecharActionPerformed

    private void jpswdSenhaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jpswdSenhaKeyPressed
        int keycode = evt.getKeyCode();

        if (evt.getID() == KeyEvent.KEY_PRESSED) {
            if (keycode == KeyEvent.VK_ENTER) {
                entrar();
            }
        }
    }//GEN-LAST:event_jpswdSenhaKeyPressed

    private void jbAjudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAjudaActionPerformed

        if (jfAjud == null) {
            jfAjud = new JfAjuda();
        }

        jfAjud.setVisible(true);

    }//GEN-LAST:event_jbAjudaActionPerformed
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JfLogin().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton jbAjuda;
    private javax.swing.JButton jbEntrar;
    private javax.swing.JButton jbFechar;
    private javax.swing.JButton jbLimpar;
    private javax.swing.JComboBox jcbNomeUsuario;
    private javax.swing.JPanel jpBotoes;
    private javax.swing.JPanel jpLogin;
    private javax.swing.JPasswordField jpswdSenha;
    // End of variables declaration//GEN-END:variables

//Outros Metodos ===========================================================================================================================================
    public void fechar() {

        dao = null;
        this.dispose();
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);

    }

    public void limparCampos() {

        preencheComboUsuarios();

        jcbNomeUsuario.setSelectedIndex(0);
        jpswdSenha.setText("");

    }

    public void preencheComboUsuarios() {

        iniciaDao();
        //DAO dao = new DAO();
        Usuario user = new Usuario();
        List listaUsuarios = new ArrayList();

        jcbNomeUsuario.removeAllItems();
        jcbNomeUsuario.addItem("");

        listaUsuarios = dao.listarUsuarios(0, "", "", false);

        for (int i = 0; i < listaUsuarios.size(); i++) {
            user = (Usuario) listaUsuarios.get(i);
            jcbNomeUsuario.addItem(user.getNomeUsuario());
        }

    }

    public void mapearRede() {

        try {
            Runtime.getRuntime().exec("net use m: /delete");
            Runtime.getRuntime().exec("net use m: \\\\semed-infosrv01\\SuporteTecnico\\Instaladores\\SURGI");
            //Process processo = Runtime.getRuntime().exec("C:\\Agendamento\\MapearAgendamento.bat");
            //Process processo = Runtime.getRuntime().exec("MapearAgendamento.bat");
        } catch (IOException ex) {
            //Logger.getLogger(jfSobre.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Não foi possivel mapear, ou a Rede já foi Mapeada!", "Erro", JOptionPane.ERROR_MESSAGE, null);
        }

    }

//Geradores, Validadores===========================================================================================================================================
    public void iniciaAbreSurgi() {
        
        if (abreSurgi == null) {
            abreSurgi = new AbreSurgi();
        }
        
    }
    
    public void iniciaControleUsuario() {
        
        if (controleUsuario == null) {
            controleUsuario = new ControleUsuario();
        }
        
    }
    
    public void iniciaDao() {

        if (dao == null) {
            dao = new DAO();
        }

    }

    public void iniciaLog() {
        
        if (geraLog == null) {
            geraLog = new Log();
        }
        
    }
    
    public void iniciaUsuario() {

        if (usuario == null) {
            usuario = new Usuario();
        }

    }
    
    public void verificaVersao() {

        if (System.getProperty("os.name").contains("Windows")) {
            mapearRede();

            versao.setCodigoUsuario(usuario.getCodigoUsuario());
            avancar = versao.comparaVersao();

        }

    }

//Getters and Setters===========================================================================================================================================
//Metodos DAO===========================================================================================================================================
    public void entrar() {

        if (jcbNomeUsuario.getSelectedIndex() != 0 && !jpswdSenha.getText().isEmpty()) {

            iniciaDao();
            iniciaControleUsuario();
            iniciaUsuario();
            
            ContraSenha ctrSenha = new ContraSenha();
            EncriptaSenha criptaSenha = new EncriptaSenha();
            int codigoUsuario;
            String nome;
            
            nome = (String) jcbNomeUsuario.getSelectedItem();
            codigoUsuario = controleUsuario.getCodigoUsuario(nome);

            try {
                usuario = (Usuario) dao.buscaUsuario(codigoUsuario, nome, "");

                if (usuario.isUsuarioInativo()) {

                    JOptionPane.showMessageDialog(this, "Este usuário esta Inátivo Conecte com outro!", "Atenção", JOptionPane.WARNING_MESSAGE, null);

                } else {

                    if (usuario.getNomeUsuario().equals(nome) && usuario.getSenha().equals(criptaSenha.ResumirTexto(jpswdSenha.getText()))) {

                        verificaVersao();

                        if (avancar) {

                            ctrSenha = (ContraSenha) dao.buscaContraSenha(usuario.getContraSenha());
                            
                            if (jfPrincipal == null) {
                                jfPrincipal = new JfPrincipal();
                            }

                            jfPrincipal.setContraSenha(ctrSenha.getTipoContraSenha());
                            jfPrincipal.setTemaEscolhido(usuario.getTemaEscolhido());
                            jfPrincipal.setCodigoUsuario(usuario.getCodigoUsuario());
                            jfPrincipal.setVisible(true);

                            try {
                                iniciaLog();
                                geraLog.criaLog(usuario.getCodigoUsuario(), "Login", "Fez Login no Sistema");
                            } catch (IOException ex) {
                                Logger.getLogger(JfLogin.class.getName()).log(Level.SEVERE, null, ex);
                            }

                            fechar();

                        } else {
                            threadAtualizaSoftware.start();
                            JOptionPane.showMessageDialog(this, "O Sistema será atualizado agora!", "Atenção", JOptionPane.WARNING_MESSAGE, null);
                            fechar();
                        }

                    } else {
                        JOptionPane.showMessageDialog(this, "Preencha corretamente os campos de usuário e senha!", "Atenção", JOptionPane.WARNING_MESSAGE, null);
                    }

                }

            } catch (Exception e) {
                System.out.println(e);
                JOptionPane.showMessageDialog(this, "Erro com a Base de Dados, não foi possivel localizar \n ou não existe conexão com Banco de Dados!", "Erro", JOptionPane.ERROR_MESSAGE, null);
            }

        } else {
            JOptionPane.showMessageDialog(this, "Preencha corretamente os campos de usuário e senha!", "Atenção", JOptionPane.WARNING_MESSAGE, null);
        }

    }
}
